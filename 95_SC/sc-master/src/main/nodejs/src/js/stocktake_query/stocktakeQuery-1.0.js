require("zgGrid.css");require("myAutoComplete.css");require("bootstrap-datetimepicker.css");require("zgGrid");require("myAutomatic");var _datetimepicker = require("datetimepicker");var query_list = null;var _myAjax=require("myAjax");define('stocktakeQuery', function () {    var self = {};    var url_left = "",        paramGrid = null,        reThousands = null,        toThousands = null,        getThousands = null,        systemPath = '',        selectTrListTemp = [];//临时行数据存储        selectTrTemp = null,        tempTrObjValue = {},//临时行数据存储        searchAccDate = null,        searchDepCd = null,        searchPmaCd = null,        searchQNS = null;//query_no_stock        bmCodeOrItem = 0,//0 bmCode 1：item        common=null;    var m = {        toKen : null,        use : null,        error_pcode : null,        identity : null,        searchJson:null,        // 查询部分        sd_date:null,        dep:null,        pma:null,        search:null,        reset:null,        first_st_complete:null,        st_differ_confirm:null,        query_no_stock:null,        by_position:null,        area_cd:null,        view:null,        fEntry:null,        lEntry:null,        aRegion : null,        aCity : null,        aDistrict : null,        aStore : null,    }    // 创建js对象    var  createJqueryObj = function(){        for (x in m)  {            m[x] = $("#"+x);        }    }    function init(_common) {        createJqueryObj();        url_left=_common.config.surl+"/stocktakeQuery";        systemPath=_common.config.surl;        reThousands=_common.reThousands;        toThousands=_common.toThousands;        getThousands=_common.getThousands;        //首先验证当前操作人的权限是否混乱，        if(m.use.val()=="0"){            but_event();        }else{            m.error_pcode.show();            m.main_box.hide();        }        initPageBytype("1");        //表格内按钮事件        table_event();        // 初始化店铺运营组织检索        _common.initOrganization();        //加载分类列表        getTDep();//加载大分类下拉列表        //权限验证        isButPermission();        m.search.click();    }    //表格按钮事件    var table_event = function(){        // 盘点差异认列        m.st_differ_confirm.on('click',function () {            var _list = tableGrid.getCheckboxTrs();            if(_list == null || _list.length == 0){                _common.prompt("Please select at least one row of data!",5,"error");                return false;            }            var arr = [];            _list.some(function (record,i) {                let item=tableGrid.getSelectColValue(_list[0],"piCd,accDate,piAccountFlg,piFirstFinishFlg,piCommitFlg");                if (item.piCommitFlg=='1') { // 已经认列完成                    // _common.prompt(item.piCd + " has been recognized and cannot be repeated！",5,"error");                    _common.prompt("First " + (i+1) + " The classification of the row has been recognized and cannot be repeated！",5,"error");                    return true;                }                if (item.piFirstFinishFlg=='0') { // 已经是初盘完成状态                    // _common.prompt(item.piCd + "的分类初盘输入未完成，不能认列！",5,"error");                    _common.prompt("First " + (i+1) + " The input of the classification initial disk of the row is not completed, and the column cannot be recognized！",5,"error");                    return true;                }                let obj = {                    'piCd':item.piCd,                    'accDate':fmtIntDate(item.accDate)                }                arr.push(obj);            });            if (arr.length<1) {                return;            }            // _common.myConfirm("认列后将即时按照盘点差异进行商品库存调整，确认进行盘点认列吗?",function(result){            _common.myConfirm("After verification, the inventory adjustment will be carried out immediately according to the inventory difference. Is it confirmed to carry out verification?",function(result){                if(result == "true"){                    $.myAjaxs({                        url:url_left+'/piCommit',                        async:true,                        cache:false,                        type :"post",                        data :'jsonStr='+JSON.stringify(arr),                        dataType:"json",                        success:function(result){                            if(result.success){                                // 变为查看模式                                _common.prompt("Setup Successed!",5,"info"); // 认列成功                                m.search.click();                            }else{                                _common.prompt(result.msg,5,"error");                            }                        },                        error : function(e){                            _common.prompt("Setup Failed!",5,"error"); // 认列失败                        }                    });                }            });        });        // 设置选中为初盘        m.first_st_complete.on('click',function () {            var _list = tableGrid.getCheckboxTrs();            if(_list == null || _list.length == 0){                _common.prompt("Please select at least one row of data!",5,"error");                return false;            }            var arr = [];            _list.some(function (record,i) {                let item=tableGrid.getSelectColValue(_list[0],"piCd,accDate,piAccountFlg,piFirstFinishFlg,piCommitFlg");                if (item.piCommitFlg=='1') { // 已经认列完成                    // _common.prompt(item.piCd + " has been recognized and cannot be repeated！",5,"error");                    _common.prompt("First " + (i+1) + " The classification of the row has been recognized and cannot be repeated！",5,"error");                    return true;                }                if (item.piFirstFinishFlg=='1') { // 已经是初盘完成状态                    // _common.prompt(item.piCd + "的分类初盘输入未完成，不能认列！",5,"error");                    _common.prompt("First " + (i+1) + " The input of the classification initial disk of the row is not completed, and the column cannot be recognized！",5,"error");                    return true;                }                let obj = {                    'piCd':item.piCd,                    'accDate':fmtIntDate(item.accDate)                }                arr.push(obj);            });            if (arr.length<1) {                return;            }            _common.myConfirm("Are you sure you have set the selected category to initial disk input?",function(result){                if(result == "true"){                    $.myAjaxs({                        url:url_left+'/piFirstFinish',                        async:true,                        cache:false,                        type :"post",                        data :'jsonStr='+JSON.stringify(arr),                        dataType:"json",                        success:function(result){                            if(result.success){                                // 变为查看模式                                _common.prompt("Setup Successed!",5,"info");                                m.search.click();                            }else{                                _common.prompt(result.msg,5,"error");                            }                        },                        error : function(e){                            _common.prompt("Setup Failed!",5,"error");                        }                    });                }            });        });        m.view.on("click", function () {            var _list = tableGrid.getCheckboxTrs();            if(_list == null || _list.length == 0){                _common.prompt("Please select at least one row of data!",5,"error");                return false;            }            let item=tableGrid.getSelectColValue(_list[0],"piCd,accDate");            top.location = url_left+'/toView?identity='+m.identity.val()+'&piCd='+item.piCd+'&piDate='+fmtIntDate(item.accDate)+'&flag=0';        });        m.fEntry.on("click", function () {            var _list = tableGrid.getCheckboxTrs();            if(_list == null || _list.length == 0){                _common.prompt("Please select at least one row of data!",5,"error");                return false;            }            /*if($('#by_position').is(':checked')){                var areaCd = m.area_cd.val();                if(areaCd == "" || areaCd == null){                    _common.prompt("Please input the Position Code!",5,"error");                    return false;                }            }            var params = getSelectType(_list);*/            let item=tableGrid.getSelectColValue(_list[0],"piCd,accDate,piAccountFlg,piFirstFinishFlg,piCommitFlg");            if (item.piCommitFlg=='1') { // 已经认列完成                // _common.prompt(item.piCd + " has been recognized and cannot be repeated！",5,"error");                _common.prompt("The classification of the row has been recognized and cannot be repeated！",5,"error");                return false;            }            if (item.piFirstFinishFlg=='1') { // 已经是初盘完成状态                // _common.prompt(item.piCd + "的分类已经是初盘完成状态，不能录入初盘量",5,"error");                _common.prompt("The classification of the line has been completed state of the first disk, cannot input the amount of the first disk！",5,"error");                return false;            }            top.location = url_left+'/toModify?identity='+m.identity.val()+'&piCd='+item.piCd+'&piDate='+fmtIntDate(item.accDate)+'&flag=1';        });        m.lEntry.on("click", function () {            var _list = tableGrid.getCheckboxTrs();            if(_list == null || _list.length == 0){                _common.prompt("Please select at least one row of data!",5,"error");                return false;            }            /*if($('#by_position').is(':checked')){                var areaCd = m.area_cd.val();                if(areaCd == "" || areaCd == null){                    _common.prompt("Please input the Position Code!",5,"error");                    return false;                }            }            var params = getSelectType(_list);*/            let item=tableGrid.getSelectColValue(_list[0],"piCd,accDate,piAccountFlg,piFirstFinishFlg,piCommitFlg");            if (item.piCommitFlg=='1') { // 已经认列完成                // _common.prompt(item.piCd + " has been recognized and cannot be repeated！",5,"error");                _common.prompt("The classification of rows has been recognized，No repeat operation！",5,"error");                return false;            }            if (item.piFirstFinishFlg=='0') { // 已经是初盘完成状态                // _common.prompt(item.piCd + "的分类初盘输入未完成，不能录入复盘量！",5,"error");                _common.prompt("The input of the sorting initial disk of the row is not completed，Cannot input the amount of redisk！",5,"error");                return false;            }            top.location = url_left+'/toModify?identity='+m.identity.val()+'&piCd='+item.piCd+'&piDate='+fmtIntDate(item.accDate)+'&flag=2';        });    }    var getSelectType = function (_list) {        var _params = [];        for(var i = 0; i < _list.length; i++){            var cols = tableGrid.getSelectColValue(_list[i],"piCd,accDate,depCd,pmaCd,categoryCd,subCategoryCd");            var _param = {                piCd : cols['piCd'],                piDate : cols['accDate'],                accDate : fmtIntDate(m.sd_date.val()),                areaCd : m.area_cd.val(),                depCd : cols["depCd"],                pmaCd : cols["pmaCd"],                categoryCd : cols["categoryCd"],                subCategoryCd : cols["subCategoryCd"]            };            _params.push(_param);        };        // var params = encodeURI(JSON.stringify(_params));        return _params;    }    // 根据权限类型的不同初始化不同的画面样式    var initPageBytype = function(flgType){        switch(flgType) {            case "1":                initTable2();//列表初始化                break;            case "2":                initTable2();//列表初始化                break;            default:                m.error_pcode.show();                m.main_box.hide();        }    }    //拼接检索参数    var setParamJson = function(){        var searchAccDate = fmtIntDate(m.sd_date.val());        // var searchDepCd = m.dep.val();        // var searchPmaCd = m.pma.val();        let searchQNS = '';        if($('#query_no_stock').is(':checked')){//只查询未盘商品            searchQNS = "0";        }else{            searchQNS = null;        }        // 创建请求字符串        var searchJsonStr ={            'regionCd':$("#aRegion").attr("k"),            'cityCd':$("#aCity").attr("k"),            'districtCd':$("#aDistrict").attr("k"),            'storeCd':$("#aStore").attr("k"),            'accDate' : searchAccDate,            // depCd : searchDepCd,            // pmaCd : searchPmaCd,            'qns' : searchQNS,        };        m.searchJson.val(JSON.stringify(searchJsonStr));    }    //验证检索项是否合法    var verifySearch = function () {        return true;    }    //画面按钮点击事件    var but_event = function(){        //盘点日期        m.sd_date.datetimepicker({            language:'en',            format: 'dd/mm/yyyy',            maxView:4,            startView:2,            minView:2,            autoclose:true,            todayHighlight:true,            todayBtn:true        });        //检索按钮点击事件        m.search.on("click",function(){            if(verifySearch()){                //拼接检索参数                setParamJson();                paramGrid = 'searchJson='+m.searchJson.val();                tableGrid.setting("url", url_left + "/search");                tableGrid.setting("param", paramGrid);                tableGrid.setting("page", 1);                tableGrid.loadData();            }        });        m.reset.on("click",function(){            m.sd_date.val("");            m.dep.val("");            m.pma.val("");            m.query_no_stock.attr("checked", false);            m.by_position.attr("checked", false);            $("#regionRemove").click();        });        // 分类change事件        $("#dep").change(function(){            var depCd = m.dep.val();            m.pma.html('<option value="">--Please Select--</option>');            if(!!depCd){                getPma(depCd);            }        });        //By 货位        m.area_cd.prop('disabled', true);        m.fEntry.prop('disabled', true);        m.lEntry.prop('disabled', true);        $("#by_position").click(function(){            if($('#by_position').is(':checked')){                m.area_cd.prop('disabled', false);                m.fEntry.prop('disabled', false);                m.lEntry.prop('disabled', false);            }else{                m.area_cd.val("");                m.area_cd.prop('disabled', true);                m.fEntry.prop('disabled', true);                m.lEntry.prop('disabled', true);            }        });    }    //点击表格事件    var trClick_table1 = function(){    }    //表格初始化    var initTable2 = function(){        tableGrid = $("#zgGridTtable").zgGrid({            title:"Start Stocktaking",            param:paramGrid,            localSort: true,            colNames:[                "Stocktake No.",                "Stocktak Date",                // "Top Department Code",                // "Top Department",                // "Department Code",                // "Department",                "storeCd",                "Stocktake Store",                "Item Qty",                "First Stocktake Item Qty",                "Last Stocktake Item Qty",                "No Stocktake Item Qty",                "Whether Account",                "Whether First Stocktake Complete",                "To be Recognized",                "piAccountFlg", // 状态值, 隐藏域                "piFirstFinishFlg",                "piCommitFlg"                ],            colModel:[                {name:"piCd",type:"text",text:"right",width:"90",ishide:false,css:""},                {name:"accDate",type:"text",text:"center",width:"90",ishide:false,css:""},                // {name:"depCd",type:"text",text:"center",width:"90",ishide:false,css:""},                // {name:"depName",type:"text",text:"center",width:"90",ishide:false,css:""},                // {name:"pmaCd",type:"text",text:"center",width:"90",ishide:false,css:""},                // {name:"pmaName",type:"text",text:"center",width:"90",ishide:false,css:""},                {name:"storeCd",type:"text",text:"right",width:"90",ishide:true,css:""},                {name:"storeName",type:"text",text:"left",width:"90",ishide:false,css:""},                {name:"articleCount",type:"text",text:"right",width:"70",ishide:false,css:"",getCustomValue:getThousands},                {name:"firstQty",type:"text",text:"right",width:"160",ishide:false,css:"",getCustomValue:getThousands},                {name:"secondQty",type:"text",text:"right",width:"160",ishide:false,css:"",getCustomValue:getThousands},                {name:"noQty",type:"text",text:"right",width:"160",ishide:false,css:"",getCustomValue:getThousands},                {name:"piAccountFlgName",type:"left",text:"center",width:"120",ishide:false,css:""},                {name:"piFirstFinishFlgName",type:"text",text:"left",width:"220",ishide:false,css:""},                {name:"piCommitFlgName",type:"text",text:"left",width:"120",ishide:false,css:"",getCustomValue:null},                {name:"piAccountFlg",type:"text",text:"left",width:"120",ishide:true},                {name:"piFirstFinishFlg",type:"text",text:"left",width:"220",ishide:true},                {name:"piCommitFlg",type:"text",text:"left",width:"120",ishide:true}            ],//列内容            // traverseData:query_list,            width:"max",//宽度自动            page:1,//当前页            rowPerPage:10,//每页数据量            isPage:true,//是否需要分页            isCheckbox:true,            eachTrClick: function (trObj) {//正常左侧点击                $("#update").removeAttr("disabled");            },            loadEachBeforeEvent:function(trObj){                tempTrObjValue={};                return trObj;            },            ajaxSuccess:function(resData){                return resData;            },            eachTrClick:function(trObj,tdObj){//正常左侧点击                selectTrTemp = trObj;                trClick_table1();            },            buttonGroup:[            ],        });    }    //表格初始化    var initTable1 = function(){        tableGrid = $("#zgGridTtable").zgGrid({            title:"Start Stocktaking",            param:paramGrid,            localSort: true,            colNames:[                "TDept Code",                "TDept Name",                "Dept Code",                "Dept Name",                "Category Code",                "Category Name",                "Sub-category Code",                "Sub-category Name",                "Item Qty",                "First Stocktake Item Qty",                "Last Stocktake Item Qty",                "No Stocktake Item Qty",                "Whether Account",                "Whether First Stocktake Complete",                "To be Recognized"],            colModel:[                {name:"depCd",type:"text",text:"center",width:"90",ishide:false,css:""},                {name:"depName",type:"text",text:"center",width:"90",ishide:false,css:""},                {name:"pmaCd",type:"text",text:"center",width:"90",ishide:false,css:""},                {name:"pmaName",type:"text",text:"center",width:"90",ishide:false,css:""},                {name:"categoryCd",type:"text",text:"center",width:"110",ishide:false,css:""},                {name:"categoryName",type:"text",text:"center",width:"110",ishide:false,css:""},                {name:"subCategoryCd",type:"text",text:"center",width:"130",ishide:false,css:""},                {name:"subCategoryName",type:"text",text:"center",width:"150",ishide:false,css:""},                {name:"articleCount",type:"text",text:"center",width:"70",ishide:false,css:""},                {name:"firstQty",type:"text",text:"center",width:"160",ishide:false,css:""},                {name:"secondQty",type:"text",text:"center",width:"160",ishide:false,css:""},                {name:"noQty",type:"text",text:"center",width:"160",ishide:false,css:""},                {name:"piAccountFlgName",type:"text",text:"center",width:"120",ishide:false,css:""},                {name:"piFirstFinishFlgName",type:"text",text:"center",width:"220",ishide:false,css:""},                {name:"piCommitFlgName",type:"text",text:"center",width:"120",ishide:false,css:"",getCustomValue:null}            ],//列内容            // traverseData:query_list,            width:"max",//宽度自动            page:1,//当前页            rowPerPage:10,//每页数据量            isPage:true,//是否需要分页            traverseData:dataForm,            // sidx:"bm.bm_type,order.bm_code",//排序字段            // sord:"asc",//升降序            isCheckbox:true,            eachTrClick: function (trObj) {//正常左侧点击                $("#update").removeAttr("disabled");            },            loadEachBeforeEvent:function(trObj){                tempTrObjValue={};                return trObj;            },            ajaxSuccess:function(resData){                return resData;            },            eachTrClick:function(trObj,tdObj){//正常左侧点击                selectTrTemp = trObj;                trClick_table1();            },            buttonGroup:[            ],        });    }    // 按钮权限验证    var isButPermission = function () {        var firstStCompleteBut = $("#firstStCompleteBut").val();        if (Number(firstStCompleteBut) != 1) {            $("#first_st_complete").remove();        }        var stDifferConfirmBut = $("#stDifferConfirmBut").val();        if (Number(stDifferConfirmBut) != 1) {            $("#st_differ_confirm").remove();        }        var viewBut = $("#viewBut").val();        if (Number(viewBut) != 1) {            $("#view").remove();        }        var firstEntryBut = $("#firstEntryBut").val();        if (Number(firstEntryBut) != 1) {            $("#fEntry").remove();        }        var lastEntryBut = $("#lastEntryBut").val();        if (Number(lastEntryBut) != 1) {            $("#lEntry").remove();        }    }    var getTDep = function(){        //Ajax请求大分类        $.myAjaxs({            url:url_left+"/getDep",            async:true,            cache:false,            type :"get",            dataType:"json",            success:function(res){                var htmlStr = '<option value="">--Please Select--</option>';                $.each(res,function(ix,node){                    htmlStr+='<option value="'+node.depCd+'">'+node.depName+'</option>';                });                m.dep.html(htmlStr);            },            complete:_common.myAjaxComplete        });        m.pma.html('<option value="">--Please Select--</option>');    }    var getPma = function(depCd){        //Ajax请求中分类        $.myAjaxs({            url:url_left+"/getPma?depCd=" + depCd,            async:true,            cache:false,            type :"get",            dataType:"json",            success:function(res){                var htmlStr = '<option value="">--Please Select--</option>';                $.each(res,function(ix,node){                    htmlStr+='<option value="'+node.pmaCd+'">'+node.pmName+'</option>';                });                m.pma.html(htmlStr);            },            complete:_common.myAjaxComplete        });    }    //小数格式化    var floatFmt = function(tdObj, value){        if(value!=null&&value.trim()!=''){value = parseFloat(value);}        return $(tdObj).text(value);    }    //日期字段格式化格式    var dateFmt = function(tdObj, value){        if(value!=null&&value.trim()!=''&&value.length==8) {            value = fmtStringDate(value);        }        return $(tdObj).text(value);    }    // 格式化数字类型的日期 yyyyMMdd → dd/MM/yyyy    function fmtStringDate(date){        if(!!date) {            return date.substring(6,8)+"/"+date.substring(4,6)+"/"+date.substring(0,4);        }    }    //字符串日期格式转换：dd/MM/yyyy → yyyyMMdd    function fmtIntDate(date){        if (date==null||date=='') {            return '';        }        if(!!date){            return date.substring(6,10)+date.substring(3,5)+date.substring(0,2);        }    }    //获取当前日期  20200106    function getFormatDate() {        var date = new Date();        var month = date.getMonth() + 1;        var strDate = date.getDate();        if (month >= 1 && month <= 9) {            month = "0" + month;        }        if (strDate >= 0 && strDate <= 9) {            strDate = "0" + strDate;        }        var currentDate = date.getFullYear() + month + strDate;        return currentDate;    }    self.init = init;    return self;});var _start = require('start');var _index = require('stocktakeQuery');_start.load(function (_common) {    _index.init(_common);});