<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.bbut.iy.itemmaster.dao.PI0010Mapper">
    <resultMap id="BaseResultMap" type="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <id column="acc_date" property="accDate" jdbcType="VARCHAR"/>
        <id column="store_cd" property="storeCd" jdbcType="VARCHAR"/>
        <id column="article_id" property="articleId" jdbcType="VARCHAR"/>
        <result column="barcode" property="barCode" jdbcType="VARCHAR"/>
        <result column="sales_unit_id" property="salesUnitId" jdbcType="VARCHAR"/>
        <result column="dep_cd" property="depCd" jdbcType="CHAR"/>
        <result column="pma_cd" property="pmaCd" jdbcType="CHAR"/>
        <result column="category_cd" property="categoryCd" jdbcType="CHAR"/>
        <result column="sub_category_cd" property="subCategoryCd" jdbcType="CHAR"/>
        <result column="pi_qty_status" property="piQtyStatus" jdbcType="CHAR"/>
        <result column="first_qty" property="firstQty" jdbcType="NUMERIC"/>
        <result column="second_qty" property="secondQty" jdbcType="NUMERIC"/>
        <result column="on_hand_qty" property="on_handQty" jdbcType="NUMERIC"/>
        <result column="avg_cost_notax" property="avgCostNotax" jdbcType="NUMERIC"/>
        <result column="sale_price" property="salePrice" jdbcType="NUMERIC"/>
        <result column="create_user_id" property="createUserId" jdbcType="VARCHAR"/>
        <result column="create_ymd" property="createYmd" jdbcType="CHAR"/>
        <result column="create_hms" property="createHms" jdbcType="CHAR"/>
        <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR"/>
        <result column="update_ymd" property="updateYmd" jdbcType="CHAR"/>
        <result column="update_hms" property="updateHms" jdbcType="CHAR"/>
        <result column="update_screen_id" property="updateScreenId" jdbcType="VARCHAR"/>
        <result column="update_ip_address" property="updateIpAddress" jdbcType="VARCHAR"/>
        <result column="nr_update_flg" property="nrUpdateFlg" jdbcType="CHAR"/>
        <result column="nr_ymd" property="nrYmd" jdbcType="CHAR"/>
        <result column="nr_hms" property="nrHms" jdbcType="CHAR"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        acc_date, store_cd, article_id, barcode, sales_unit_id, dep_cd, pma_cd, category_cd,
        sub_category_cd, pi_qty_status, first_qty, second_qty, on_hand_qty, avg_cost_notax,
        sale_price, create_user_id, create_ymd, create_hms, update_user_id, update_ymd, update_hms,
        update_screen_id, update_ip_address, nr_update_flg, nr_ymd, nr_hms
    </sql>

    <resultMap id="SearchResult" type="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryListDTO">
        <result column="pi_cd" property="piCd"></result>
        <result column="pi_date" property="accDate"></result>
        <result column="dep_cd" property="depCd"></result>
        <result column="dep_name" property="depName"></result>
        <result column="pma_cd" property="pmaCd"></result>
        <result column="pma_name" property="pmaName"></result>
        <result column="store_cd" property="storeCd"></result>
        <result column="store_name" property="storeName"></result>
        <result column="article_count" property="articleCount"></result>
        <result column="first_qty" property="firstQty"></result>
        <result column="second_qty" property="secondQty"></result>
        <result column="no_qty" property="noQty"></result>
        <result column="pi_account_flg_name" property="piAccountFlgName"></result>
        <result column="pi_first_finish_flg_name" property="piFirstFinishFlgName"></result>
        <result column="pi_commit_flg_name" property="piCommitFlgName"></result>
        <result column="pi_account_flg" property="piAccountFlg"></result>
        <result column="pi_first_finish_flg" property="piFirstFinishFlg"></result>
        <result column="pi_commit_flg" property="piCommitFlg"></result>
    </resultMap>

    <resultMap id="SearchItems" type="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemsDTO">
        <result column="pi_cd" property="piCd"></result>
        <result column="pi_date" property="accDate"></result>
        <result column="part_cd" property="partCd"></result>
        <result column="part_name" property="partName"></result>
        <result column="article_id" property="articleId"></result>
        <result column="article_name" property="articleName"></result>
        <result column="barcode" property="barcode"></result>
        <result column="spec" property="spec"></result>
        <result column="sales_unit_id" property="uom"></result>
        <result column="first_qty" property="firstQty"></result>
        <result column="second_qty" property="secondQty"></result>
    </resultMap>

    <resultMap id="ReSk0020" type="cn.com.bbut.iy.itemmaster.dto.inventory.Sk0020DTO">
        <id column="store_cd" property="storeCd" jdbcType="CHAR"/>
        <id column="article_id" property="articleId" jdbcType="VARCHAR"/>
        <result column="barcode" property="barcode" jdbcType="CHAR"/>
        <result column="sales_unit_id" property="salesUnitId" jdbcType="VARCHAR"/>
        <result column="base_sale_price" property="amtNoTax" jdbcType="NUMERIC"/>
    </resultMap>

    <insert id="insertSK0010" parameterType="cn.com.bbut.iy.itemmaster.dto.inventory.Sk0010DTO">
        INSERT INTO sk0010 (
                store_cd,
                voucher_no,
                voucher_type,
                voucher_date,
                store_cd1,
                voucher_sts,
                remark,
                voucher_amt_notax,
                upload_flg
                ) values (
                #{sk0010.storeCd, jdbcType=CHAR},
                #{sk0010.voucherNo, jdbcType=VARCHAR},
                #{sk0010.voucherType, jdbcType=VARCHAR},
                #{sk0010.voucherDate, jdbcType=CHAR},
                #{sk0010.storeCd1, jdbcType=CHAR},
                #{sk0010.voucherSts, jdbcType=VARCHAR},
                #{sk0010.remark, jdbcType=VARCHAR},
                #{sk0010.voucherAmtNoTax, jdbcType=NUMERIC},
                #{sk0010.uploadFlg, jdbcType=CHAR}
                )
    </insert>

    <insert id="insertSK0020" parameterType="cn.com.bbut.iy.itemmaster.dto.inventory.Sk0020DTO">
        INSERT INTO sk0020 (
        store_cd,
        voucher_no,
        voucher_type,
        voucher_date,
        store_cd1,
        barcode,
        article_id,
        sales_unit_id,
        amt_notax,
        adjust_reason,
        display_seq)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.storeCd, jdbcType=CHAR},
            #{item.voucherNo, jdbcType=VARCHAR},
            #{item.voucherType, jdbcType=VARCHAR},
            #{item.voucherDate, jdbcType=CHAR},
            #{item.storeCd1, jdbcType=CHAR},
            #{item.barcode, jdbcType=CHAR},
            #{item.articleId, jdbcType=VARCHAR},
            #{item.salesUnitId, jdbcType=VARCHAR},
            #{item.amtNoTax, jdbcType=NUMERIC},
            #{item.adjustReason, jdbcType=NUMERIC},
            #{item.displaySeq, jdbcType=NUMERIC}
            )
        </foreach>
    </insert>

    <select id="getItemInfoList" parameterType="java.lang.String" resultMap="ReSk0020">
    SELECT
        B.article_id,
        D.barcode,
        A.store_cd,
        E.base_sale_price,
        B.sales_unit_id
    FROM
        PI0120 A,
        MA1100 B LEFT JOIN MA1140 D ON B.article_id = D.article_id AND B.effective_start_date = D.effective_start_date AND D.is_default = '1',
        CM9060 C,
        MA1130 E
    WHERE
        A.pi_cd = #{piCd}
        AND A.pi_date = #{accDate}
        AND C.sp_id = '0000'
        AND A.article_id = B.article_id
        AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
        AND B.article_id = E.article_id
        AND B.effective_start_date = E.effective_start_date
  </select>

    <update id="update" parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemsDTO">
        UPDATE pi0120 SET
            first_qty = CAST (#{stock.firstQty} AS numeric),
            second_qty = CAST (#{stock.secondQty} AS numeric)
        WHERE
            pi_cd = #{stock.piCd}
            AND pi_date = #{stock.accDate}
            AND article_Id = #{stock.articleId}
  </update>

    <update id="setPiFirstFinish" parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemsDTO">
        UPDATE pi0100 SET
            pi_first_finish_flg = '1'
        WHERE
            pi_cd = #{stock.piCd}
            AND pi_date = #{stock.accDate}
  </update>

    <update id="setPiQtyStatus" parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemsDTO">
        UPDATE pi0120 SET
            pi_qty_status = '1'
        WHERE
            pi_cd = #{stock.piCd}
            AND pi_date = #{stock.accDate}
  </update>

    <update id="setPiCommitFlag" parameterType="java.lang.String">
        UPDATE pi0100 SET
            pi_commit_flg = '1'
        WHERE
            pi_cd = #{piCd}
            AND pi_date = #{accDate}
  </update>

    <select id="queryItemCount" parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryParam"
            resultType="int">
     SELECT
        count (B.article_id)
    FROM
        PI0120 A,
        ma1100 B,
        CM9060 C,
        MA0080 D,
        MA0070 E,
        MA0090 F,
        MA0100 G,
        MA1140 H
    WHERE
        C.sp_id = '0000'
        AND A.pi_cd = #{stock.piCd}
        AND A.pi_date = #{stock.accDate}
        AND A.article_id = B.article_id
        AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
        AND B.article_id = H.article_id
        AND B.effective_start_date = H.effective_start_date
        AND H.is_default = '1'
        AND B.pma_cd = D.pma_cd
        AND D.dep_cd = E.dep_cd
        AND B.category_cd = F.category_cd
        AND B.sub_category_cd = G.sub_category_cd
  </select>

    <select id="queryItems" parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryParam"
            resultMap="SearchItems">
     SELECT
        A.pi_cd,
        A.pi_date,
        CONCAT(D.pma_cd,'-',B.category_cd,'-',G.sub_category_cd) AS part_cd,
        CONCAT(D.pma_name,'-',F.category_name,'-',G.sub_category_name) AS part_name,
        B.article_id,
        B.article_name,
        H.barcode,
        B.spec,
        B.sales_unit_id,
        A.first_qty,
        A.second_qty
    FROM
        PI0120 A,
        ma1100 B,
        CM9060 C,
        MA0080 D,
        MA0070 E,
        MA0090 F,
        MA0100 G,
        MA1140 H
    WHERE
        C.sp_id = '0000'
        AND A.pi_cd = #{stock.piCd}
        AND A.pi_date = #{stock.accDate}
        AND A.article_id = B.article_id
        AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
        AND B.article_id = H.article_id
        AND B.effective_start_date = H.effective_start_date
        AND H.is_default = '1'
        AND B.pma_cd = D.pma_cd
        AND D.dep_cd = E.dep_cd
        AND B.category_cd = F.category_cd
        AND B.sub_category_cd = G.sub_category_cd
    LIMIT ${stock.rows} OFFSET ${stock.limitStart}
  </select>

    <select id="searchCount" resultType="int"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryParam">
    SELECT count (A.pi_cd) FROM (
        SELECT distinct
        A.pi_cd,
        A.pi_date,
        A.store_cd,
        A.store_name,
        B.count AS article_count,
        CASE WHEN C.count IS NULL THEN 0 ELSE C.count END AS first_qty,
        CASE WHEN D.count IS NULL THEN 0 ELSE D.count END AS second_qty,
        CASE WHEN E.count IS NULL THEN 0 ELSE E.count END AS no_qty
        FROM
        (
        SELECT
        A.pi_cd,
        A.pi_date,
        F.store_cd,
        F.store_name,
        G.pi_account_flg,
        G.pi_first_finish_flg,
        G.pi_commit_flg
        FROM
        PI0120 A,
        ma1100 B,
        CM9060 C,
        PI0100 G ,
        MA1000 F
        WHERE
        C.sp_id = '0000'
        AND A.pi_cd = G.pi_cd
        AND A.pi_date = G.pi_date
        AND A.article_id = B.article_id
        AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
        AND G.store_cd = F.store_cd
        AND C.sp_value BETWEEN F.effective_start_date AND F.effective_end_date
        ) A
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P GROUP BY P.pi_cd,P.pi_date ) B
        ON A.pi_cd = B.pi_cd AND A.pi_date = B.pi_date
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P WHERE P.first_qty <![CDATA[<>]]> 0
        GROUP BY P.pi_cd,P.pi_date ) C
        ON A.pi_cd = C.pi_cd AND A.pi_date = C.pi_date
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P WHERE P.second_qty <![CDATA[<>]]> 0
        GROUP BY P.pi_cd,P.pi_date ) D
        ON A.pi_cd = D.pi_cd AND A.pi_date = D.pi_date
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P WHERE P.first_qty = 0 AND P.second_qty
        = 0 GROUP BY P.pi_cd,P.pi_date ) E
        ON A.pi_cd = E.pi_cd AND A.pi_date = E.pi_date
        ) A
        <where>
            A.store_cd IN
            <foreach item="store" index="index" collection="stock.stores"
                     open="(" separator="," close=")">
                #{store,jdbcType=VARCHAR}
            </foreach>
            <if test="stock.accDate!=null and stock.accDate!=''">
                AND A.pi_date = #{stock.accDate}
            </if>
            <if test="stock.qns!=null and stock.qns!=''">
                AND A.first_qty = 0
                AND A.second_qty = 0
            </if>
        </where>
    </select>

    <select id="search" resultMap="SearchResult"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryParam">
        SELECT A.* FROM (
        SELECT distinct
        A.pi_cd,
        A.pi_date,
        A.store_cd,
        A.store_name,
        A.pi_account_flg_name,
        A.pi_first_finish_flg_name,
        A.pi_commit_flg_name,
        A.pi_account_flg,
        A.pi_first_finish_flg,
        A.pi_commit_flg,
        B.count AS article_count,
        CASE WHEN C.count IS NULL THEN 0 ELSE C.count END AS first_qty,
        CASE WHEN D.count IS NULL THEN 0 ELSE D.count END AS second_qty,
        CASE WHEN E.count IS NULL THEN 0 ELSE E.count END AS no_qty
        FROM
        (
        SELECT
        A.pi_cd,
        A.pi_date,
        F.store_cd,
        F.store_name,
        F1.code_name AS pi_account_flg_name,
        F2.code_name AS pi_first_finish_flg_name,
        F3.code_name AS pi_commit_flg_name,
        G.pi_account_flg,
        G.pi_first_finish_flg,
        G.pi_commit_flg
        FROM
        PI0120 A,
        ma1100 B,
        CM9060 C,
        (SELECT * FROM CM9010 C WHERE C.code_type = '00085') F1,
        (SELECT * FROM CM9010 C WHERE C.code_type = '00085') F2,
        (SELECT * FROM CM9010 C WHERE C.code_type = '00085') F3,
        PI0100 G ,
        MA1000 F
        WHERE
        C.sp_id = '0000'
        AND A.pi_cd = G.pi_cd
        AND A.pi_date = G.pi_date
        AND G.pi_account_flg = F1.code_value
        AND G.pi_first_finish_flg = F2.code_value
        AND G.pi_commit_flg = F3.code_value
        AND A.article_id = B.article_id
        AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
        AND G.store_cd = F.store_cd
        AND C.sp_value BETWEEN F.effective_start_date AND F.effective_end_date
        ) A
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P GROUP BY P.pi_cd,P.pi_date ) B
        ON A.pi_cd = B.pi_cd AND A.pi_date = B.pi_date
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P WHERE P.first_qty <![CDATA[<>]]> 0
        GROUP BY P.pi_cd,P.pi_date ) C
        ON A.pi_cd = C.pi_cd AND A.pi_date = C.pi_date
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P WHERE P.second_qty <![CDATA[<>]]> 0
        GROUP BY P.pi_cd,P.pi_date ) D
        ON A.pi_cd = D.pi_cd AND A.pi_date = D.pi_date
        LEFT JOIN ( SELECT P.pi_cd,P.pi_date, COUNT( P.article_id ) FROM PI0120 P WHERE P.first_qty = 0 AND P.second_qty
        = 0 GROUP BY P.pi_cd,P.pi_date ) E
        ON A.pi_cd = E.pi_cd AND A.pi_date = E.pi_date
        ) A
        <where>
            A.store_cd IN
            <foreach item="store" index="index" collection="stock.stores"
                     open="(" separator="," close=")">
                #{store,jdbcType=VARCHAR}
            </foreach>
            <if test="stock.accDate!=null and stock.accDate!=''">
                AND A.pi_date = #{stock.accDate}
            </if>
            <if test="stock.qns!=null and stock.qns!=''">
                AND A.first_qty = 0
                AND A.second_qty = 0
            </if>
        </where>
        LIMIT ${stock.rows} OFFSET ${stock.limitStart}
    </select>

    <select id="selectByExample" resultMap="BaseResultMap"
            parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010Example">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <if test="needFoundRows">
            SQL_CALC_FOUND_ROWS
        </if>
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from pi0010
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
        <if test="limitStart >= 0">
            limit ${limitStart} , ${limitEnd}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap"
            parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010Key">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select
        <include refid="Base_Column_List"/>
        from pi0010
        where acc_date = #{accDate,jdbcType=VARCHAR}
        and store_cd = #{storeCd,jdbcType=VARCHAR}
        and article_id = #{articleId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010Key">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from pi0010
        where acc_date = #{accDate,jdbcType=VARCHAR}
        and store_cd = #{storeCd,jdbcType=VARCHAR}
        and article_id = #{articleId,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010Example">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        delete from pi0010
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into pi0010 (acc_date, store_cd, article_id,
        barcode, sales_unit_id, dep_cd,
        pma_cd, category_cd, sub_category_cd,
        pi_qty_status, first_qty, second_qty,
        on_hand_qty, avg_cost_notax, sale_price,
        create_user_id, create_ymd, create_hms,
        update_user_id, update_ymd, update_hms,
        update_screen_id, update_ip_address, nr_update_flg,
        nr_ymd, nr_hms)
        values (#{accDate,jdbcType=VARCHAR}, #{storeCd,jdbcType=VARCHAR}, #{articleId,jdbcType=VARCHAR},
        #{barCode,jdbcType=VARCHAR}, #{salesUnitId,jdbcType=VARCHAR}, #{depCd,jdbcType=CHAR},
        #{pmaCd,jdbcType=CHAR}, #{categoryCd,jdbcType=CHAR}, #{subCategoryCd,jdbcType=CHAR},
        #{piQtyStatus,jdbcType=CHAR}, #{firstQty,jdbcType=NUMERIC}, #{secondQty,jdbcType=NUMERIC},
        #{on_handQty,jdbcType=NUMERIC}, #{avgCostNotax,jdbcType=NUMERIC}, #{salePrice,jdbcType=NUMERIC},
        #{createUserId,jdbcType=VARCHAR}, #{createYmd,jdbcType=CHAR}, #{createHms,jdbcType=CHAR},
        #{updateUserId,jdbcType=VARCHAR}, #{updateYmd,jdbcType=CHAR}, #{updateHms,jdbcType=CHAR},
        #{updateScreenId,jdbcType=VARCHAR}, #{updateIpAddress,jdbcType=VARCHAR}, #{nrUpdateFlg,jdbcType=CHAR},
        #{nrYmd,jdbcType=CHAR}, #{nrHms,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        insert into pi0010
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="accDate != null">
                acc_date,
            </if>
            <if test="storeCd != null">
                store_cd,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="barCode != null">
                barcode,
            </if>
            <if test="salesUnitId != null">
                sales_unit_id,
            </if>
            <if test="depCd != null">
                dep_cd,
            </if>
            <if test="pmaCd != null">
                pma_cd,
            </if>
            <if test="categoryCd != null">
                category_cd,
            </if>
            <if test="subCategoryCd != null">
                sub_category_cd,
            </if>
            <if test="piQtyStatus != null">
                pi_qty_status,
            </if>
            <if test="firstQty != null">
                first_qty,
            </if>
            <if test="secondQty != null">
                second_qty,
            </if>
            <if test="on_handQty != null">
                on_hand_qty,
            </if>
            <if test="avgCostNotax != null">
                avg_cost_notax,
            </if>
            <if test="salePrice != null">
                sale_price,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createYmd != null">
                create_ymd,
            </if>
            <if test="createHms != null">
                create_hms,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="updateYmd != null">
                update_ymd,
            </if>
            <if test="updateHms != null">
                update_hms,
            </if>
            <if test="updateScreenId != null">
                update_screen_id,
            </if>
            <if test="updateIpAddress != null">
                update_ip_address,
            </if>
            <if test="nrUpdateFlg != null">
                nr_update_flg,
            </if>
            <if test="nrYmd != null">
                nr_ymd,
            </if>
            <if test="nrHms != null">
                nr_hms,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="accDate != null">
                #{accDate,jdbcType=VARCHAR},
            </if>
            <if test="storeCd != null">
                #{storeCd,jdbcType=VARCHAR},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=VARCHAR},
            </if>
            <if test="barCode != null">
                #{barCode,jdbcType=VARCHAR},
            </if>
            <if test="salesUnitId != null">
                #{salesUnitId,jdbcType=VARCHAR},
            </if>
            <if test="depCd != null">
                #{depCd,jdbcType=CHAR},
            </if>
            <if test="pmaCd != null">
                #{pmaCd,jdbcType=CHAR},
            </if>
            <if test="categoryCd != null">
                #{categoryCd,jdbcType=CHAR},
            </if>
            <if test="subCategoryCd != null">
                #{subCategoryCd,jdbcType=CHAR},
            </if>
            <if test="piQtyStatus != null">
                #{piQtyStatus,jdbcType=CHAR},
            </if>
            <if test="firstQty != null">
                #{firstQty,jdbcType=NUMERIC},
            </if>
            <if test="secondQty != null">
                #{secondQty,jdbcType=NUMERIC},
            </if>
            <if test="on_handQty != null">
                #{on_handQty,jdbcType=NUMERIC},
            </if>
            <if test="avgCostNotax != null">
                #{avgCostNotax,jdbcType=NUMERIC},
            </if>
            <if test="salePrice != null">
                #{salePrice,jdbcType=NUMERIC},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createYmd != null">
                #{createYmd,jdbcType=CHAR},
            </if>
            <if test="createHms != null">
                #{createHms,jdbcType=CHAR},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateYmd != null">
                #{updateYmd,jdbcType=CHAR},
            </if>
            <if test="updateHms != null">
                #{updateHms,jdbcType=CHAR},
            </if>
            <if test="updateScreenId != null">
                #{updateScreenId,jdbcType=VARCHAR},
            </if>
            <if test="updateIpAddress != null">
                #{updateIpAddress,jdbcType=VARCHAR},
            </if>
            <if test="nrUpdateFlg != null">
                #{nrUpdateFlg,jdbcType=CHAR},
            </if>
            <if test="nrYmd != null">
                #{nrYmd,jdbcType=CHAR},
            </if>
            <if test="nrHms != null">
                #{nrHms,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010Example"
            resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select count(*) from pi0010
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pi0010
        <set>
            <if test="record.accDate != null">
                acc_date = #{record.accDate,jdbcType=VARCHAR},
            </if>
            <if test="record.storeCd != null">
                store_cd = #{record.storeCd,jdbcType=VARCHAR},
            </if>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=VARCHAR},
            </if>
            <if test="record.barCode != null">
                barcode = #{record.barCode,jdbcType=VARCHAR},
            </if>
            <if test="record.salesUnitId != null">
                sales_unit_id = #{record.salesUnitId,jdbcType=VARCHAR},
            </if>
            <if test="record.depCd != null">
                dep_cd = #{record.depCd,jdbcType=CHAR},
            </if>
            <if test="record.pmaCd != null">
                pma_cd = #{record.pmaCd,jdbcType=CHAR},
            </if>
            <if test="record.categoryCd != null">
                category_cd = #{record.categoryCd,jdbcType=CHAR},
            </if>
            <if test="record.subCategoryCd != null">
                sub_category_cd = #{record.subCategoryCd,jdbcType=CHAR},
            </if>
            <if test="record.piQtyStatus != null">
                pi_qty_status = #{record.piQtyStatus,jdbcType=CHAR},
            </if>
            <if test="record.firstQty != null">
                first_qty = #{record.firstQty,jdbcType=NUMERIC},
            </if>
            <if test="record.secondQty != null">
                second_qty = #{record.secondQty,jdbcType=NUMERIC},
            </if>
            <if test="record.on_handQty != null">
                on_hand_qty = #{record.on_handQty,jdbcType=NUMERIC},
            </if>
            <if test="record.avgCostNotax != null">
                avg_cost_notax = #{record.avgCostNotax,jdbcType=NUMERIC},
            </if>
            <if test="record.salePrice != null">
                sale_price = #{record.salePrice,jdbcType=NUMERIC},
            </if>
            <if test="record.createUserId != null">
                create_user_id = #{record.createUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.createYmd != null">
                create_ymd = #{record.createYmd,jdbcType=CHAR},
            </if>
            <if test="record.createHms != null">
                create_hms = #{record.createHms,jdbcType=CHAR},
            </if>
            <if test="record.updateUserId != null">
                update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="record.updateYmd != null">
                update_ymd = #{record.updateYmd,jdbcType=CHAR},
            </if>
            <if test="record.updateHms != null">
                update_hms = #{record.updateHms,jdbcType=CHAR},
            </if>
            <if test="record.updateScreenId != null">
                update_screen_id = #{record.updateScreenId,jdbcType=VARCHAR},
            </if>
            <if test="record.updateIpAddress != null">
                update_ip_address = #{record.updateIpAddress,jdbcType=VARCHAR},
            </if>
            <if test="record.nrUpdateFlg != null">
                nr_update_flg = #{record.nrUpdateFlg,jdbcType=CHAR},
            </if>
            <if test="record.nrYmd != null">
                nr_ymd = #{record.nrYmd,jdbcType=CHAR},
            </if>
            <if test="record.nrHms != null">
                nr_hms = #{record.nrHms,jdbcType=CHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pi0010
        set acc_date = #{record.accDate,jdbcType=VARCHAR},
        store_cd = #{record.storeCd,jdbcType=VARCHAR},
        article_id = #{record.articleId,jdbcType=VARCHAR},
        barcode = #{record.barCode,jdbcType=VARCHAR},
        sales_unit_id = #{record.salesUnitId,jdbcType=VARCHAR},
        dep_cd = #{record.depCd,jdbcType=CHAR},
        pma_cd = #{record.pmaCd,jdbcType=CHAR},
        category_cd = #{record.categoryCd,jdbcType=CHAR},
        sub_category_cd = #{record.subCategoryCd,jdbcType=CHAR},
        pi_qty_status = #{record.piQtyStatus,jdbcType=CHAR},
        first_qty = #{record.firstQty,jdbcType=NUMERIC},
        second_qty = #{record.secondQty,jdbcType=NUMERIC},
        on_hand_qty = #{record.on_handQty,jdbcType=NUMERIC},
        avg_cost_notax = #{record.avgCostNotax,jdbcType=NUMERIC},
        sale_price = #{record.salePrice,jdbcType=NUMERIC},
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
        create_ymd = #{record.createYmd,jdbcType=CHAR},
        create_hms = #{record.createHms,jdbcType=CHAR},
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
        update_ymd = #{record.updateYmd,jdbcType=CHAR},
        update_hms = #{record.updateHms,jdbcType=CHAR},
        update_screen_id = #{record.updateScreenId,jdbcType=VARCHAR},
        update_ip_address = #{record.updateIpAddress,jdbcType=VARCHAR},
        nr_update_flg = #{record.nrUpdateFlg,jdbcType=CHAR},
        nr_ymd = #{record.nrYmd,jdbcType=CHAR},
        nr_hms = #{record.nrHms,jdbcType=CHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pi0010
        <set>
            <if test="barCode != null">
                barcode = #{barCode,jdbcType=VARCHAR},
            </if>
            <if test="salesUnitId != null">
                sales_unit_id = #{salesUnitId,jdbcType=VARCHAR},
            </if>
            <if test="depCd != null">
                dep_cd = #{depCd,jdbcType=CHAR},
            </if>
            <if test="pmaCd != null">
                pma_cd = #{pmaCd,jdbcType=CHAR},
            </if>
            <if test="categoryCd != null">
                category_cd = #{categoryCd,jdbcType=CHAR},
            </if>
            <if test="subCategoryCd != null">
                sub_category_cd = #{subCategoryCd,jdbcType=CHAR},
            </if>
            <if test="piQtyStatus != null">
                pi_qty_status = #{piQtyStatus,jdbcType=CHAR},
            </if>
            <if test="firstQty != null">
                first_qty = #{firstQty,jdbcType=NUMERIC},
            </if>
            <if test="secondQty != null">
                second_qty = #{secondQty,jdbcType=NUMERIC},
            </if>
            <if test="on_handQty != null">
                on_hand_qty = #{on_handQty,jdbcType=NUMERIC},
            </if>
            <if test="avgCostNotax != null">
                avg_cost_notax = #{avgCostNotax,jdbcType=NUMERIC},
            </if>
            <if test="salePrice != null">
                sale_price = #{salePrice,jdbcType=NUMERIC},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=VARCHAR},
            </if>
            <if test="createYmd != null">
                create_ymd = #{createYmd,jdbcType=CHAR},
            </if>
            <if test="createHms != null">
                create_hms = #{createHms,jdbcType=CHAR},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=VARCHAR},
            </if>
            <if test="updateYmd != null">
                update_ymd = #{updateYmd,jdbcType=CHAR},
            </if>
            <if test="updateHms != null">
                update_hms = #{updateHms,jdbcType=CHAR},
            </if>
            <if test="updateScreenId != null">
                update_screen_id = #{updateScreenId,jdbcType=VARCHAR},
            </if>
            <if test="updateIpAddress != null">
                update_ip_address = #{updateIpAddress,jdbcType=VARCHAR},
            </if>
            <if test="nrUpdateFlg != null">
                nr_update_flg = #{nrUpdateFlg,jdbcType=CHAR},
            </if>
            <if test="nrYmd != null">
                nr_ymd = #{nrYmd,jdbcType=CHAR},
            </if>
            <if test="nrHms != null">
                nr_hms = #{nrHms,jdbcType=CHAR},
            </if>
        </set>
        where acc_date = #{accDate,jdbcType=VARCHAR}
        and store_cd = #{storeCd,jdbcType=VARCHAR}
        and article_id = #{articleId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.pi0010.PI0010">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        update pi0010
        set barcode = #{barCode,jdbcType=VARCHAR},
        sales_unit_id = #{salesUnitId,jdbcType=VARCHAR},
        dep_cd = #{depCd,jdbcType=CHAR},
        pma_cd = #{pmaCd,jdbcType=CHAR},
        category_cd = #{categoryCd,jdbcType=CHAR},
        sub_category_cd = #{subCategoryCd,jdbcType=CHAR},
        pi_qty_status = #{piQtyStatus,jdbcType=CHAR},
        first_qty = #{firstQty,jdbcType=NUMERIC},
        second_qty = #{secondQty,jdbcType=NUMERIC},
        on_hand_qty = #{on_handQty,jdbcType=NUMERIC},
        avg_cost_notax = #{avgCostNotax,jdbcType=NUMERIC},
        sale_price = #{salePrice,jdbcType=NUMERIC},
        create_user_id = #{createUserId,jdbcType=VARCHAR},
        create_ymd = #{createYmd,jdbcType=CHAR},
        create_hms = #{createHms,jdbcType=CHAR},
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
        update_ymd = #{updateYmd,jdbcType=CHAR},
        update_hms = #{updateHms,jdbcType=CHAR},
        update_screen_id = #{updateScreenId,jdbcType=VARCHAR},
        update_ip_address = #{updateIpAddress,jdbcType=VARCHAR},
        nr_update_flg = #{nrUpdateFlg,jdbcType=CHAR},
        nr_ymd = #{nrYmd,jdbcType=CHAR},
        nr_hms = #{nrHms,jdbcType=CHAR}
        where acc_date = #{accDate,jdbcType=VARCHAR}
        and store_cd = #{storeCd,jdbcType=VARCHAR}
        and article_id = #{articleId,jdbcType=VARCHAR}
    </update>
    <select id="countLastSelect" resultType="java.lang.Integer">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
        -->
        select FOUND_ROWS()
    </select>


    <!--盘点一览条件查询-->
    <select id="selectStocktakeBy" resultType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryListDTO"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryParam">
        SELECT
        pi0000.acc_date,
        pi0000.dep_cd,
        ma0070.dep_name,
        pi0000.pma_cd,
        pi0000.article_count AS count,
        (
        SELECT
        count( article_id )
        FROM
        pi0010
        WHERE
        acc_date = #{accDate}
        AND store_cd = #{storeCd}
        AND dep_cd = pi0000.dep_cd
        AND pma_cd = pi0000.pma_cd
        AND category_cd = pi0000.category_cd
        AND sub_category_cd = pi0000.sub_category_cd
        <if test="qns !=null ">
            AND first_qty is null
            AND second_qty is null
        </if>
        ) AS first_qty,
        (
        SELECT
        count( article_id )
        FROM
        pi0010
        WHERE
        acc_date = #{accDate}
        AND store_cd = #{storeCd}
        AND dep_cd = pi0000.dep_cd
        AND pma_cd = pi0000.pma_cd
        AND category_cd = pi0000.category_cd
        AND sub_category_cd = pi0000.sub_category_cd
        <if test="qns !=null ">
            AND first_qty is null
            AND second_qty is null
        </if>
        ) AS second_qty,
        (
        SELECT
        count( article_id )
        FROM
        pi0010
        WHERE
        acc_date = #{accDate}
        AND store_cd = #{storeCd}
        AND dep_cd = pi0000.dep_cd
        AND pma_cd = pi0000.pma_cd
        AND category_cd = pi0000.category_cd
        AND sub_category_cd = pi0000.sub_category_cd
        <if test="qns !=null ">
            AND first_qty is null
            AND second_qty is null
        </if>
        ) AS no_qty,
        ma0080.pma_name,
        pi0000.category_cd,
        ma0090.category_name,
        pi0000.sub_category_cd,
        ma0100.sub_category_name,
        pi0000.article_count,
        pi0000.pi_type,
        pi0000.pi_account_flg,
        pi0000.pi_first_finish_flg,
        pi0000.pi_commit_flg,
        ( SELECT code_name FROM cm9010 WHERE code_type = '00085' AND code_value = pi0000.pi_account_flg ) AS
        pi_account_flg_name,
        ( SELECT code_name FROM cm9010 WHERE code_type = '00085' AND code_value = pi0000.pi_first_finish_flg ) AS
        pi_first_finish_flg_name,
        ( SELECT code_name FROM cm9010 WHERE code_type = '00085' AND code_value = pi0000.pi_commit_flg ) AS
        pi_commit_flg_name
        FROM
        pi0000,
        ma0070,
        ma0080,
        ma0090,
        ma0100
        WHERE
        ma0070.dep_cd = pi0000.dep_cd
        AND ma0080.dep_cd = pi0000.dep_cd
        AND ma0080.pma_cd = pi0000.pma_cd
        AND ma0090.dep_cd = pi0000.dep_cd
        AND ma0090.pma_cd = pi0000.pma_cd
        AND ma0090.category_cd = pi0000.category_cd
        AND ma0100.dep_cd = pi0000.dep_cd
        AND ma0100.pma_cd = pi0000.pma_cd
        AND ma0100.category_cd = pi0000.category_cd
        AND ma0100.sub_category_cd = pi0000.sub_category_cd
        AND pi0000.acc_date = #{accDate}
        AND pi0000.store_cd = #{storeCd}
        AND pi0000.dep_cd = #{depCd}
        AND pi0000.pma_cd = #{pmaCd}
        ORDER BY
        pi0000.acc_date,
        pi0000.dep_cd,
        pi0000.pma_cd,
        pi0000.category_cd ASC
        <if test="limitStart >= 0">
            limit ${limitEnd} offset ${limitStart}
        </if>
    </select>
    <!--盘点一览条件查询总条数-->
    <select id="selectStocktakeByCount" resultType="java.lang.Long"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryParam">
    select count(*) from (SELECT
    pi0000.acc_date,
    pi0000.dep_cd,
    ma0070.dep_name,
    pi0000.pma_cd,
    pi0000.article_count AS count,
    (
    SELECT
    count( article_id )
    FROM
    pi0010
    WHERE
    acc_date = #{accDate}
    AND pi_qty_status = '1'
    AND store_cd = #{storeCd}
    AND dep_cd = pi0000.dep_cd
    AND pma_cd = pi0000.pma_cd
    AND category_cd = pi0000.category_cd
    AND sub_category_cd = pi0000.sub_category_cd
    ) AS first_qty,
    (
    SELECT
    count( article_id )
    FROM
    pi0010
    WHERE
    acc_date = #{accDate}
    AND pi_qty_status = '2'
    AND store_cd = #{storeCd}
    AND dep_cd = pi0000.dep_cd
    AND pma_cd = pi0000.pma_cd
    AND category_cd = pi0000.category_cd
    AND sub_category_cd = pi0000.sub_category_cd
    ) AS second_qty,
    (
    SELECT
    count( article_id )
    FROM
    pi0010
    WHERE
    acc_date = #{accDate}
    AND pi_qty_status = '0'
    AND store_cd = #{storeCd}
    AND dep_cd = pi0000.dep_cd
    AND pma_cd = pi0000.pma_cd
    AND category_cd = pi0000.category_cd
    AND sub_category_cd = pi0000.sub_category_cd
    ) AS no_qty,
    ma0080.pma_name,
    pi0000.category_cd,
    ma0090.category_name,
    pi0000.sub_category_cd,
    ma0100.sub_category_name,
    pi0000.article_count,
    pi0000.pi_type,
    pi0000.pi_account_flg,
    pi0000.pi_first_finish_flg,
    pi0000.pi_commit_flg,
    ( SELECT code_name FROM cm9010 WHERE code_type = '00085' AND code_value = pi0000.pi_account_flg ) AS pi_account_flg_name,
    ( SELECT code_name FROM cm9010 WHERE code_type = '00085' AND code_value = pi0000.pi_first_finish_flg ) AS pi_first_finish_flg_name,
    ( SELECT code_name FROM cm9010 WHERE code_type = '00085' AND code_value = pi0000.pi_commit_flg ) AS pi_commit_flg_name
    FROM
    pi0000,
    ma0070,
    ma0080,
    ma0090,
    ma0100
    WHERE
    ma0070.dep_cd = pi0000.dep_cd
    AND ma0080.dep_cd = pi0000.dep_cd
    AND ma0080.pma_cd = pi0000.pma_cd
    AND ma0090.dep_cd = pi0000.dep_cd
    AND ma0090.pma_cd = pi0000.pma_cd
    AND ma0090.category_cd = pi0000.category_cd
    AND ma0100.dep_cd = pi0000.dep_cd
    AND ma0100.pma_cd = pi0000.pma_cd
    AND ma0100.category_cd = pi0000.category_cd
    AND ma0100.sub_category_cd = pi0000.sub_category_cd
    AND pi0000.acc_date = #{accDate}
    AND pi0000.store_cd = #{storeCd}
    AND pi0000.dep_cd = #{depCd}
    AND pi0000.pma_cd = #{pmaCd}
    )as a
  </select>
    <select id="selectItemsBy" resultType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemsDTO"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemParam">
    SELECT
    pi0000.dep_cd,
    pi0000.pma_cd,
    pi0000.category_cd,
    pi0000.sub_category_cd,
    ma0070.dep_name,
    ma0100.sub_category_name,
    pi0010.article_id,
    pi0010.barcode,
    ma1100.article_name,
    ma1100.spec,
    ma0220.unit_name as uom,
    '******' AS area_cd,
    pi0010.first_qty,
    pi0010.second_qty
    FROM
    pi0000,
    ma1100,
    ma0220,
    ma0070,
    ma0100,
    pi0010
    WHERE
    pi0000.acc_date = #{accDate}
    AND pi0000.store_cd = #{storeCd}
    AND pi0000.dep_cd = #{depCd}
    AND pi0000.pma_cd = #{pmaCd}
    AND pi0000.category_cd = #{categoryCd}
    AND pi0000.sub_category_cd = #{subCategoryCd}
    AND pi0000.acc_date = pi0010.acc_date
    AND pi0000.store_cd = pi0010.store_cd
    AND ma1100.article_id = pi0010.article_id
    <![CDATA[AND ma1100.effective_start_date <= pi0000.acc_date]]>
    AND ma0070.dep_cd = ma0100.dep_cd
    AND ma0100.dep_cd = pi0000.dep_cd
    AND ma0100.pma_cd = pi0000.pma_cd
    AND ma0100.category_cd = pi0000.category_cd
    AND ma0100.sub_category_cd = pi0000.sub_category_cd
    AND ma1100.sales_unit_id = ma0220.unit_id
    AND pi0010.dep_cd = pi0000.dep_cd
    AND pi0010.pma_cd = pi0000.pma_cd
    AND pi0010.category_cd = pi0000.category_cd
    AND pi0010.sub_category_cd = pi0000.sub_category_cd
    ORDER BY
    dep_cd,
    pma_cd,
    category_cd,
    sub_category_cd,
    article_id,
    area_cd ASC
  </select>
    <select id="selectItemsByCount" resultType="java.lang.Long"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemParam">
    select count(*) from (
    SELECT
    pi0000.dep_cd,
    pi0000.pma_cd,
    pi0000.category_cd,
    pi0000.sub_category_cd,
    ma0070.dep_name,
    ma0100.sub_category_name,
    pi0010.article_id,
    pi0010.barcode,
    ma1100.article_name,
    ma1100.spec,
    ma0220.unit_name as uom,
    '******' AS area_cd,
    pi0010.first_qty,
    pi0010.second_qty
    FROM
    pi0000,
    ma1100,
    ma0220,
    ma0070,
    ma0100,
    pi0010
    WHERE
    pi0000.acc_date = #{accDate}
    AND pi0000.store_cd = #{storeCd}
    AND pi0000.dep_cd = #{depCd}
    AND pi0000.pma_cd = #{pmaCd}
    AND pi0000.category_cd = #{categoryCd}
    AND pi0000.sub_category_cd = #{subCategoryCd}
    AND pi0000.acc_date = pi0010.acc_date
    AND pi0000.store_cd = pi0010.store_cd
    AND ma1100.article_id = pi0010.article_id
    <![CDATA[AND ma1100.effective_start_date <= pi0000.acc_date]]>
    AND ma0070.dep_cd = ma0100.dep_cd
    AND ma0100.dep_cd = pi0000.dep_cd
    AND ma0100.pma_cd = pi0000.pma_cd
    AND ma0100.category_cd = pi0000.category_cd
    AND ma0100.sub_category_cd = pi0000.sub_category_cd
    AND ma1100.sales_unit_id = ma0220.unit_id
    AND pi0010.dep_cd = pi0000.dep_cd
    AND pi0010.pma_cd = pi0000.pma_cd
    AND pi0010.category_cd = pi0000.category_cd
    AND pi0010.sub_category_cd = pi0000.sub_category_cd
    ORDER BY
    dep_cd,
    pma_cd,
    category_cd,
    sub_category_cd,
    article_id,
    area_cd ASC
    )as a
  </select>
    <select id="selectItemsByAreaCd" resultType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemsDTO"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemParam">
        SELECT
        pi0000.dep_cd,
        pi0000.pma_cd,
        pi0000.category_cd,
        pi0000.sub_category_cd,
        ma0070.dep_name,
        ma0100.sub_category_name,
        pi0020.article_id,
        pi0020.barcode,
        ma1100.article_name,
        ma1100.spec,
        ma0220.unit_name,
        pi0020.area_cd,
        pi0020.first_qty,
        pi0020.second_qty
        FROM
        pi0000,
        ma1100,
        pi0020,
        ma0220,
        ma0070,
        ma0100,
        pi0010
        WHERE
        pi0000.acc_date = #{accDate}
        AND pi0000.store_cd = #{storeCd}
        AND pi0000.dep_cd = #{depCd}
        AND pi0000.pma_cd = #{pmaCd}
        AND pi0000.category_cd = #{categoryCd}
        AND pi0000.sub_category_cd = #{subCategoryCd}
        AND pi0000.acc_date = pi0010.acc_date
        AND pi0000.store_cd = pi0010.store_cd
        AND pi0010.article_id = pi0020.article_id
        AND pi0020.acc_date = pi0000.acc_date
        AND pi0020.store_cd = pi0000.store_cd
        AND ma1100.article_id = pi0010.article_id
        <![CDATA[AND ma1100.effective_start_date <= pi0000.acc_date]]>
        AND ma0070.dep_cd = ma0100.dep_cd
        AND ma0100.dep_cd = pi0000.dep_cd
        AND ma0100.pma_cd = pi0000.pma_cd
        AND ma0100.category_cd = pi0000.category_cd
        AND ma0100.sub_category_cd = pi0000.sub_category_cd
        AND pi0020.sales_unit_id = ma0220.unit_id
        AND pi0010.dep_cd = pi0000.dep_cd
        AND pi0010.pma_cd = pi0000.pma_cd
        AND pi0010.category_cd = pi0000.category_cd
        AND pi0010.sub_category_cd = pi0000.sub_category_cd
        AND pi0010.pi_qty_status = '1'
        <if test="areaCd !=null and areaCd !=''">
            AND pi0020.area_cd = #{areaCd}
        </if>
        ORDER BY
        dep_cd,
        pma_cd,
        category_cd,
        sub_category_cd,
        article_id,
        area_cd ASC
    </select>
    <select id="selectItemsByAreaCdCount" resultType="java.lang.Long"
            parameterType="cn.com.bbut.iy.itemmaster.dto.stocktakeQuery.StocktakeQueryItemParam">
        select count(*) from (
        SELECT
        pi0000.dep_cd,
        pi0000.pma_cd,
        pi0000.category_cd,
        pi0000.sub_category_cd,
        ma0070.dep_name,
        ma0100.sub_category_name,
        pi0020.article_id,
        pi0020.barcode,
        ma1100.article_name,
        ma1100.spec,
        ma0220.unit_name,
        pi0020.area_cd,
        pi0020.first_qty,
        pi0020.second_qty
        FROM
        pi0000,
        ma1100,
        pi0020,
        ma0220,
        ma0070,
        ma0100,
        pi0010
        WHERE
        pi0000.acc_date = #{accDate}
        AND pi0000.store_cd = #{storeCd}
        AND pi0000.dep_cd = #{depCd}
        AND pi0000.pma_cd = #{pmaCd}
        AND pi0000.category_cd = #{categoryCd}
        AND pi0000.sub_category_cd = #{subCategoryCd}
        AND pi0000.acc_date = pi0010.acc_date
        AND pi0000.store_cd = pi0010.store_cd
        AND pi0010.article_id = pi0020.article_id
        AND pi0020.acc_date = pi0000.acc_date
        AND pi0020.store_cd = pi0000.store_cd
        AND ma1100.article_id = pi0010.article_id
        <![CDATA[AND ma1100.effective_start_date <= pi0000.acc_date]]>
        AND ma0070.dep_cd = ma0100.dep_cd
        AND ma0100.dep_cd = pi0000.dep_cd
        AND ma0100.pma_cd = pi0000.pma_cd
        AND ma0100.category_cd = pi0000.category_cd
        AND ma0100.sub_category_cd = pi0000.sub_category_cd
        AND pi0020.sales_unit_id = ma0220.unit_id
        AND pi0010.dep_cd = pi0000.dep_cd
        AND pi0010.pma_cd = pi0000.pma_cd
        AND pi0010.category_cd = pi0000.category_cd
        AND pi0010.sub_category_cd = pi0000.sub_category_cd
        AND pi0010.pi_qty_status = '1'
        <if test="areaCd !=null and areaCd !=''">
            AND pi0020.area_cd = #{areaCd}
        </if>
        ORDER BY
        dep_cd,
        pma_cd,
        category_cd,
        sub_category_cd,
        article_id,
        area_cd ASC
        )as a
    </select>
</mapper>