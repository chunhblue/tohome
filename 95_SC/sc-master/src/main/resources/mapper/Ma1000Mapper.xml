<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bbut.iy.itemmaster.dao.Ma1000Mapper">
  <resultMap id="BaseResultMap" type="cn.com.bbut.iy.itemmaster.entity.base.Ma1000">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="store_cd" jdbcType="CHAR" property="storeCd" />
    <id column="effective_start_date" jdbcType="CHAR" property="effectiveStartDate" />
    <result column="effective_end_date" jdbcType="CHAR" property="effectiveEndDate" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="store_name_short" jdbcType="VARCHAR" property="storeNameShort" />
    <result column="corp_cd" jdbcType="CHAR" property="corpCd" />
    <result column="zo_cd" jdbcType="CHAR" property="zoCd" />
    <result column="do_cd" jdbcType="CHAR" property="doCd" />
    <result column="ofc" jdbcType="CHAR" property="ofc" />
    <result column="ma_cd" jdbcType="CHAR" property="maCd" />
    <result column="structure_cd" jdbcType="CHAR" property="structureCd" />
    <result column="store_type_cd" jdbcType="CHAR" property="storeTypeCd" />
    <result column="open_date" jdbcType="CHAR" property="openDate" />
    <result column="close_date" jdbcType="CHAR" property="closeDate" />
    <result column="renovation_start_date" jdbcType="CHAR" property="renovationStartDate" />
    <result column="renovation_end_date" jdbcType="CHAR" property="renovationEndDate" />
    <result column="original_open_date" jdbcType="CHAR" property="original_open_date" />
    <result column="old_store_cd" jdbcType="CHAR" property="old_store_cd" />
    <result column="store_owner_name" jdbcType="VARCHAR" property="storeOwnerName" />
    <result column="district_cd" jdbcType="CHAR" property="districtCd" />
    <result column="store_address_1" jdbcType="VARCHAR" property="storeAddress1" />
    <result column="store_address_2" jdbcType="VARCHAR" property="storeAddress2" />
    <result column="store_zip_cd" jdbcType="CHAR" property="storeZipCd" />
    <result column="store_phone_no" jdbcType="CHAR" property="storePhoneNo" />
    <result column="store_fax_no" jdbcType="CHAR" property="storeFaxNo" />
    <result column="store_phone_no2" jdbcType="CHAR" property="storePhoneNo2" />
    <result column="store_fax_no2" jdbcType="CHAR" property="storeFaxNo2" />
    <result column="license_type" jdbcType="CHAR" property="licenseType" />
    <result column="store_scope" jdbcType="CHAR" property="storeScope" />
    <result column="store_display_type" jdbcType="CHAR" property="store_display_type" />
    <result column="selling_floor_space" jdbcType="NUMERIC" property="sellingFloorSpace" />
    <result column="backroom_area" jdbcType="NUMERIC" property="backroomArea" />
    <result column="num_of_pos" jdbcType="NUMERIC" property="numOfPos" />
    <result column="num_of_scale" jdbcType="NUMERIC" property="numOfScale" />
    <result column="num_of_label" jdbcType="NUMERIC" property="numOfLabel" />
    <result column="biz_hours_from" jdbcType="CHAR" property="bizHoursFrom" />
    <result column="biz_hours_to" jdbcType="CHAR" property="bizHoursTo" />
    <result column="shelves_type" jdbcType="VARCHAR" property="shelvesType" />
    <result column="create_user_id" jdbcType="CHAR" property="createUserId" />
    <result column="create_ymd" jdbcType="CHAR" property="createYmd" />
    <result column="create_hms" jdbcType="CHAR" property="createHms" />
    <result column="update_user_id" jdbcType="CHAR" property="updateUserId" />
    <result column="update_ymd" jdbcType="CHAR" property="update_ymd" />
    <result column="update_hms" jdbcType="CHAR" property="update_hms" />
    <result column="update_screen_id" jdbcType="VARCHAR" property="update_screen_id" />
    <result column="update_ip_address" jdbcType="VARCHAR" property="update_ip_address" />
    <result column="nr_update_flg" jdbcType="CHAR" property="nr_update_flg" />
    <result column="nr_ymd" jdbcType="CHAR" property="nr_ymd" />
    <result column="nr_hms" jdbcType="CHAR" property="nr_hms" />
    <result column="store_cd" jdbcType="CHAR" property="storeCd" />
    <result column="sm" jdbcType="CHAR" property="sm" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    store_cd, effective_start_date, effective_end_date, store_name, store_name_short,
    corp_cd, zo_cd, do_cd, ofc, ma_cd, structure_cd, store_type_cd, open_date, close_date,
    renovation_start_date, renovation_end_date, original_open_date, old_store_cd, store_owner_name,
    district_cd, store_address_1, store_address_2, store_zip_cd, store_phone_no, store_fax_no,
    store_phone_no2, store_fax_no2, license_type, store_scope, store_display_type, selling_floor_space,
    backroom_area, num_of_pos, num_of_scale, num_of_label, biz_hours_from, biz_hours_to,
    shelves_type, create_user_id, create_ymd, create_hms, update_user_id, update_ymd,
    update_hms, update_screen_id, update_ip_address, nr_update_flg, nr_ymd, nr_hms
  </sql>

  <select id="getAMByPM" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    select distinct
        c_operatorcode k,
        CONCAT(c_operatorcode,' ',c_operatorname) v
    from
        ma1000,
        t_operator
    where
    <![CDATA[
        effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    AND ma1000.store_cd in
    <foreach item="storeCd" index="index" collection="storeCds"
             open="(" separator="," close=")">
      #{storeCd,jdbcType=VARCHAR}
    </foreach>
    and ofc = c_operatorcode
    <if test="storeCd != null and storeCd !=''">
      and (
      lower(c_operatorcode) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))
      or lower(c_operatorname) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))
      )
    </if>
  </select>
  <select id="getOm" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    SELECT DISTINCT B.c_operatorcode k, CONCAT(B.c_operatorcode,' ',B.c_operatorname) v
    FROM MA1000 A, t_operator B
   WHERE
    <![CDATA[
        A.effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and A.effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    AND A.store_cd in
    <foreach item="storeCd" index="index" collection="storeCds"
             open="(" separator="," close=")">
      #{storeCd,jdbcType=VARCHAR}
    </foreach>
    and A.om = B.c_operatorcode
    <if test="v!=null and v!=''">
      AND (
      lower(c_operatorcode) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      or lower(c_operatorname) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      )
    </if>
  </select>
  <select id="getOc" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    SELECT DISTINCT B.c_operatorcode k, CONCAT(B.c_operatorcode,' ',B.c_operatorname) v
    FROM MA1000 A, t_operator B
   WHERE
    <![CDATA[
        A.effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and A.effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    AND A.store_cd in
    <foreach item="storeCd" index="index" collection="storeCds"
             open="(" separator="," close=")">
      #{storeCd,jdbcType=VARCHAR}
    </foreach>
    AND A.oc = B.c_operatorcode
    <if test="v!=null and v!=''">
      AND (
      lower(c_operatorcode) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      or lower(c_operatorname) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      )
    </if>
  </select>



  <select id="getListByStorePm" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    select distinct store_cd k,CONCAT(store_cd,' ',store_name,' ',store_name_en) v from ma1000
    where
    <![CDATA[
        effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    and ma1000.store_cd in
    <foreach item="storeCd" index="index" collection="stores"
             open="(" separator="," close=")">
      #{storeCd,jdbcType=VARCHAR}
    </foreach>
<!--    <if test="storeCd != null and storeCd !=''">-->
<!--      and (-->
<!--      lower(store_cd) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))-->
<!--      or lower(store_name) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))-->
<!--      or lower(store_name_en) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))-->
<!--      )-->
    <if test="v!=null and v!=''">
      AND (
      lower(structure_cd) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      OR lower(ma1000.store_name_en) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      OR lower(ma1000.store_name) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      )
    </if>

  </select>

  <select id="getListByPM" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    select distinct m_role_store.store_cd k,CONCAT(m_role_store.store_cd,' ',store_name) v from ma1000,m_role_store
    where
    <![CDATA[
        effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    and m_role_store.role_id in
    <foreach item="roleId" index="index" collection="roleIds"
             open="(" separator="," close=")">
      #{roleId,jdbcType=INTEGER}
    </foreach>
    and ma1000.store_cd = m_role_store.store_cd
    <if test="storeCd != null and storeCd !=''">
      and (
      lower(m_role_store.store_cd) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))
      or lower(store_name) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))
      )
    </if>
  </select>

  <select id="getIsStoreAll" resultType="integer">
    select count(*) from m_role_store
    where m_role_store.store_cd = '999999'
    and m_role_store.role_id in
    <foreach item="roleId" index="index" collection="roleIds"
             open="(" separator="," close=")">
      #{roleId,jdbcType=INTEGER}
    </foreach>
  </select>
  <select id="getListAll" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    select store_cd k,CONCAT(store_cd,' ',store_name,store_name_en) v from ma1000
    where
    <![CDATA[
        effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    <if test="storeCd != null and storeCd !=''">
      and (
      lower(store_cd) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))
      or lower(store_name) like lower(CONCAT('%',#{storeCd,jdbcType=VARCHAR},'%'))
      )
    </if>
  </select>

  <select id="getListByRoleId" resultType="cn.com.bbut.iy.itemmaster.dto.base.role.RoleStoreDTO">
    select m_role_store.store_cd storeCd,ma1000.store_name storeName
    from ma1000 inner join m_role_store
    on m_role_store.role_id = #{roleId,jdbcType=INTEGER}
    and ma1000.store_cd = m_role_store.store_cd
    <![CDATA[
        and effective_start_date <= #{businessDate,jdbcType=VARCHAR}
        and effective_end_date >= #{businessDate,jdbcType=VARCHAR}
        ]]>
    UNION
        select m_role_store.store_cd storeCd,'' storeName
        from m_role_store where
        m_role_store.role_id = #{roleId,jdbcType=INTEGER}
        and m_role_store.store_cd = '999999'
  </select>

  <delete id="deleteByRoleId" parameterType="integer">
        delete from m_role_store where role_id=#{roleId,jdbcType=INTEGER}
  </delete>

  <insert id="addStorebyRole" >
    insert into m_role_store
    VALUES
    <foreach item="storeCd" index="index" collection="stores"
             open="(" separator="," close=")">
      #{roleId,jdbcType=INTEGER},
      #{storeCd}
    </foreach>
  </insert>

  <select id="selectByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000Example" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="needFoundRows">
      SQL_CALC_FOUND_ROWS
    </if>
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ma1000
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart &gt;= 0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000Key" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from ma1000
    where store_cd = #{storeCd,jdbcType=CHAR}
    and effective_start_date = #{effectiveStartDate,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000Key">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ma1000
    where store_cd = #{storeCd,jdbcType=CHAR}
    and effective_start_date = #{effectiveStartDate,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000Example">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ma1000
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ma1000 (store_cd, effective_start_date, effective_end_date,
    store_name, store_name_short, corp_cd,
    zo_cd, do_cd, ofc, ma_cd,
    structure_cd, store_type_cd, open_date,
    close_date, renovation_start_date, renovation_end_date,
    original_open_date, old_store_cd, store_owner_name,
    district_cd, store_address_1, store_address_2,
    store_zip_cd, store_phone_no, store_fax_no,
    store_phone_no2, store_fax_no2, license_type,
    store_scope, store_display_type, selling_floor_space,
    backroom_area, num_of_pos, num_of_scale,
    num_of_label, biz_hours_from, biz_hours_to,
    shelves_type, create_user_id, create_ymd,
    create_hms, update_user_id,
    update_ymd, update_hms, update_screen_id,
    update_ip_address, nr_update_flg, nr_ymd,
    nr_hms)
    values (#{storeCd,jdbcType=CHAR}, #{effectiveStartDate,jdbcType=CHAR}, #{effectiveEndDate,jdbcType=CHAR},
    #{storeName,jdbcType=VARCHAR}, #{storeNameShort,jdbcType=VARCHAR}, #{corpCd,jdbcType=CHAR},
    #{zoCd,jdbcType=CHAR}, #{doCd,jdbcType=CHAR}, #{ofc,jdbcType=CHAR}, #{maCd,jdbcType=CHAR},
    #{structureCd,jdbcType=CHAR}, #{storeTypeCd,jdbcType=CHAR}, #{openDate,jdbcType=CHAR},
    #{closeDate,jdbcType=CHAR}, #{renovationStartDate,jdbcType=CHAR}, #{renovationEndDate,jdbcType=CHAR},
    #{original_open_date,jdbcType=CHAR}, #{old_store_cd,jdbcType=CHAR}, #{storeOwnerName,jdbcType=VARCHAR},
    #{districtCd,jdbcType=CHAR}, #{storeAddress1,jdbcType=VARCHAR}, #{storeAddress2,jdbcType=VARCHAR},
    #{storeZipCd,jdbcType=CHAR}, #{storePhoneNo,jdbcType=CHAR}, #{storeFaxNo,jdbcType=CHAR},
    #{storePhoneNo2,jdbcType=CHAR}, #{storeFaxNo2,jdbcType=CHAR}, #{licenseType,jdbcType=CHAR},
    #{storeScope,jdbcType=CHAR}, #{store_display_type,jdbcType=CHAR}, #{sellingFloorSpace,jdbcType=NUMERIC},
    #{backroomArea,jdbcType=NUMERIC}, #{numOfPos,jdbcType=NUMERIC}, #{numOfScale,jdbcType=NUMERIC},
    #{numOfLabel,jdbcType=NUMERIC}, #{bizHoursFrom,jdbcType=CHAR}, #{bizHoursTo,jdbcType=CHAR},
    #{shelvesType,jdbcType=VARCHAR}, #{createUserId,jdbcType=CHAR}, #{createYmd,jdbcType=CHAR},
    #{createHms,jdbcType=CHAR}, #{updateUserId,jdbcType=CHAR},
    #{update_ymd,jdbcType=CHAR}, #{update_hms,jdbcType=CHAR}, #{update_screen_id,jdbcType=VARCHAR},
    #{update_ip_address,jdbcType=VARCHAR}, #{nr_update_flg,jdbcType=CHAR}, #{nr_ymd,jdbcType=CHAR},
    #{nr_hms,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ma1000
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storeCd != null">
        store_cd,
      </if>
      <if test="effectiveStartDate != null">
        effective_start_date,
      </if>
      <if test="effectiveEndDate != null">
        effective_end_date,
      </if>
      <if test="storeName != null">
        store_name,
      </if>
      <if test="storeNameShort != null">
        store_name_short,
      </if>
      <if test="corpCd != null">
        corp_cd,
      </if>
      <if test="zoCd != null">
        zo_cd,
      </if>
      <if test="doCd != null">
        do_cd,
      </if>
      <if test="ofc != null">
        ofc,
      </if>
      <if test="maCd != null">
        ma_cd,
      </if>
      <if test="structureCd != null">
        structure_cd,
      </if>
      <if test="storeTypeCd != null">
        store_type_cd,
      </if>
      <if test="openDate != null">
        open_date,
      </if>
      <if test="closeDate != null">
        close_date,
      </if>
      <if test="renovationStartDate != null">
        renovation_start_date,
      </if>
      <if test="renovationEndDate != null">
        renovation_end_date,
      </if>
      <if test="original_open_date != null">
        original_open_date,
      </if>
      <if test="old_store_cd != null">
        old_store_cd,
      </if>
      <if test="storeOwnerName != null">
        store_owner_name,
      </if>
      <if test="districtCd != null">
        district_cd,
      </if>
      <if test="storeAddress1 != null">
        store_address_1,
      </if>
      <if test="storeAddress2 != null">
        store_address_2,
      </if>
      <if test="storeZipCd != null">
        store_zip_cd,
      </if>
      <if test="storePhoneNo != null">
        store_phone_no,
      </if>
      <if test="storeFaxNo != null">
        store_fax_no,
      </if>
      <if test="storePhoneNo2 != null">
        store_phone_no2,
      </if>
      <if test="storeFaxNo2 != null">
        store_fax_no2,
      </if>
      <if test="licenseType != null">
        license_type,
      </if>
      <if test="storeScope != null">
        store_scope,
      </if>
      <if test="store_display_type != null">
        store_display_type,
      </if>
      <if test="sellingFloorSpace != null">
        selling_floor_space,
      </if>
      <if test="backroomArea != null">
        backroom_area,
      </if>
      <if test="numOfPos != null">
        num_of_pos,
      </if>
      <if test="numOfScale != null">
        num_of_scale,
      </if>
      <if test="numOfLabel != null">
        num_of_label,
      </if>
      <if test="bizHoursFrom != null">
        biz_hours_from,
      </if>
      <if test="bizHoursTo != null">
        biz_hours_to,
      </if>
      <if test="shelvesType != null">
        shelves_type,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createYmd != null">
        create_ymd,
      </if>
      <if test="createHms != null">
        create_hms,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="update_ymd != null">
        update_ymd,
      </if>
      <if test="update_hms != null">
        update_hms,
      </if>
      <if test="update_screen_id != null">
        update_screen_id,
      </if>
      <if test="update_ip_address != null">
        update_ip_address,
      </if>
      <if test="nr_update_flg != null">
        nr_update_flg,
      </if>
      <if test="nr_ymd != null">
        nr_ymd,
      </if>
      <if test="nr_hms != null">
        nr_hms,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storeCd != null">
        #{storeCd,jdbcType=CHAR},
      </if>
      <if test="effectiveStartDate != null">
        #{effectiveStartDate,jdbcType=CHAR},
      </if>
      <if test="effectiveEndDate != null">
        #{effectiveEndDate,jdbcType=CHAR},
      </if>
      <if test="storeName != null">
        #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeNameShort != null">
        #{storeNameShort,jdbcType=VARCHAR},
      </if>
      <if test="corpCd != null">
        #{corpCd,jdbcType=CHAR},
      </if>
      <if test="zoCd != null">
        #{zoCd,jdbcType=CHAR},
      </if>
      <if test="doCd != null">
        #{doCd,jdbcType=CHAR},
      </if>
      <if test="ofc != null">
        #{ofc,jdbcType=CHAR},
      </if>
      <if test="maCd != null">
        #{maCd,jdbcType=CHAR},
      </if>
      <if test="structureCd != null">
        #{structureCd,jdbcType=CHAR},
      </if>
      <if test="storeTypeCd != null">
        #{storeTypeCd,jdbcType=CHAR},
      </if>
      <if test="openDate != null">
        #{openDate,jdbcType=CHAR},
      </if>
      <if test="closeDate != null">
        #{closeDate,jdbcType=CHAR},
      </if>
      <if test="renovationStartDate != null">
        #{renovationStartDate,jdbcType=CHAR},
      </if>
      <if test="renovationEndDate != null">
        #{renovationEndDate,jdbcType=CHAR},
      </if>
      <if test="original_open_date != null">
        #{original_open_date,jdbcType=CHAR},
      </if>
      <if test="old_store_cd != null">
        #{old_store_cd,jdbcType=CHAR},
      </if>
      <if test="storeOwnerName != null">
        #{storeOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="districtCd != null">
        #{districtCd,jdbcType=CHAR},
      </if>
      <if test="storeAddress1 != null">
        #{storeAddress1,jdbcType=VARCHAR},
      </if>
      <if test="storeAddress2 != null">
        #{storeAddress2,jdbcType=VARCHAR},
      </if>
      <if test="storeZipCd != null">
        #{storeZipCd,jdbcType=CHAR},
      </if>
      <if test="storePhoneNo != null">
        #{storePhoneNo,jdbcType=CHAR},
      </if>
      <if test="storeFaxNo != null">
        #{storeFaxNo,jdbcType=CHAR},
      </if>
      <if test="storePhoneNo2 != null">
        #{storePhoneNo2,jdbcType=CHAR},
      </if>
      <if test="storeFaxNo2 != null">
        #{storeFaxNo2,jdbcType=CHAR},
      </if>
      <if test="licenseType != null">
        #{licenseType,jdbcType=CHAR},
      </if>
      <if test="storeScope != null">
        #{storeScope,jdbcType=CHAR},
      </if>
      <if test="store_display_type != null">
        #{store_display_type,jdbcType=CHAR},
      </if>
      <if test="sellingFloorSpace != null">
        #{sellingFloorSpace,jdbcType=NUMERIC},
      </if>
      <if test="backroomArea != null">
        #{backroomArea,jdbcType=NUMERIC},
      </if>
      <if test="numOfPos != null">
        #{numOfPos,jdbcType=NUMERIC},
      </if>
      <if test="numOfScale != null">
        #{numOfScale,jdbcType=NUMERIC},
      </if>
      <if test="numOfLabel != null">
        #{numOfLabel,jdbcType=NUMERIC},
      </if>
      <if test="bizHoursFrom != null">
        #{bizHoursFrom,jdbcType=CHAR},
      </if>
      <if test="bizHoursTo != null">
        #{bizHoursTo,jdbcType=CHAR},
      </if>
      <if test="shelvesType != null">
        #{shelvesType,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=CHAR},
      </if>
      <if test="createYmd != null">
        #{createYmd,jdbcType=CHAR},
      </if>
      <if test="createHms != null">
        #{createHms,jdbcType=CHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=CHAR},
      </if>
      <if test="update_ymd != null">
        #{update_ymd,jdbcType=CHAR},
      </if>
      <if test="update_hms != null">
        #{update_hms,jdbcType=CHAR},
      </if>
      <if test="update_screen_id != null">
        #{update_screen_id,jdbcType=VARCHAR},
      </if>
      <if test="update_ip_address != null">
        #{update_ip_address,jdbcType=VARCHAR},
      </if>
      <if test="nr_update_flg != null">
        #{nr_update_flg,jdbcType=CHAR},
      </if>
      <if test="nr_ymd != null">
        #{nr_ymd,jdbcType=CHAR},
      </if>
      <if test="nr_hms != null">
        #{nr_hms,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000Example" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ma1000
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ma1000
    <set>
      <if test="record.storeCd != null">
        store_cd = #{record.storeCd,jdbcType=CHAR},
      </if>
      <if test="record.effectiveStartDate != null">
        effective_start_date = #{record.effectiveStartDate,jdbcType=CHAR},
      </if>
      <if test="record.effectiveEndDate != null">
        effective_end_date = #{record.effectiveEndDate,jdbcType=CHAR},
      </if>
      <if test="record.storeName != null">
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeNameShort != null">
        store_name_short = #{record.storeNameShort,jdbcType=VARCHAR},
      </if>
      <if test="record.corpCd != null">
        corp_cd = #{record.corpCd,jdbcType=CHAR},
      </if>
      <if test="record.zoCd != null">
        zo_cd = #{record.zoCd,jdbcType=CHAR},
      </if>
      <if test="record.doCd != null">
        do_cd = #{record.doCd,jdbcType=CHAR},
      </if>
      <if test="record.ofc != null">
        ofc = #{record.ofc,jdbcType=CHAR},
      </if>
      <if test="record.maCd != null">
        ma_cd = #{record.maCd,jdbcType=CHAR},
      </if>
      <if test="record.structureCd != null">
        structure_cd = #{record.structureCd,jdbcType=CHAR},
      </if>
      <if test="record.storeTypeCd != null">
        store_type_cd = #{record.storeTypeCd,jdbcType=CHAR},
      </if>
      <if test="record.openDate != null">
        open_date = #{record.openDate,jdbcType=CHAR},
      </if>
      <if test="record.closeDate != null">
        close_date = #{record.closeDate,jdbcType=CHAR},
      </if>
      <if test="record.renovationStartDate != null">
        renovation_start_date = #{record.renovationStartDate,jdbcType=CHAR},
      </if>
      <if test="record.renovationEndDate != null">
        renovation_end_date = #{record.renovationEndDate,jdbcType=CHAR},
      </if>
      <if test="record.original_open_date != null">
        original_open_date = #{record.original_open_date,jdbcType=CHAR},
      </if>
      <if test="record.old_store_cd != null">
        old_store_cd = #{record.old_store_cd,jdbcType=CHAR},
      </if>
      <if test="record.storeOwnerName != null">
        store_owner_name = #{record.storeOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="record.districtCd != null">
        district_cd = #{record.districtCd,jdbcType=CHAR},
      </if>
      <if test="record.storeAddress1 != null">
        store_address_1 = #{record.storeAddress1,jdbcType=VARCHAR},
      </if>
      <if test="record.storeAddress2 != null">
        store_address_2 = #{record.storeAddress2,jdbcType=VARCHAR},
      </if>
      <if test="record.storeZipCd != null">
        store_zip_cd = #{record.storeZipCd,jdbcType=CHAR},
      </if>
      <if test="record.storePhoneNo != null">
        store_phone_no = #{record.storePhoneNo,jdbcType=CHAR},
      </if>
      <if test="record.storeFaxNo != null">
        store_fax_no = #{record.storeFaxNo,jdbcType=CHAR},
      </if>
      <if test="record.storePhoneNo2 != null">
        store_phone_no2 = #{record.storePhoneNo2,jdbcType=CHAR},
      </if>
      <if test="record.storeFaxNo2 != null">
        store_fax_no2 = #{record.storeFaxNo2,jdbcType=CHAR},
      </if>
      <if test="record.licenseType != null">
        license_type = #{record.licenseType,jdbcType=CHAR},
      </if>
      <if test="record.storeScope != null">
        store_scope = #{record.storeScope,jdbcType=CHAR},
      </if>
      <if test="record.store_display_type != null">
        store_display_type = #{record.store_display_type,jdbcType=CHAR},
      </if>
      <if test="record.sellingFloorSpace != null">
        selling_floor_space = #{record.sellingFloorSpace,jdbcType=NUMERIC},
      </if>
      <if test="record.backroomArea != null">
        backroom_area = #{record.backroomArea,jdbcType=NUMERIC},
      </if>
      <if test="record.numOfPos != null">
        num_of_pos = #{record.numOfPos,jdbcType=NUMERIC},
      </if>
      <if test="record.numOfScale != null">
        num_of_scale = #{record.numOfScale,jdbcType=NUMERIC},
      </if>
      <if test="record.numOfLabel != null">
        num_of_label = #{record.numOfLabel,jdbcType=NUMERIC},
      </if>
      <if test="record.bizHoursFrom != null">
        biz_hours_from = #{record.bizHoursFrom,jdbcType=CHAR},
      </if>
      <if test="record.bizHoursTo != null">
        biz_hours_to = #{record.bizHoursTo,jdbcType=CHAR},
      </if>
      <if test="record.shelvesType != null">
        shelves_type = #{record.shelvesType,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=CHAR},
      </if>
      <if test="record.createYmd != null">
        create_ymd = #{record.createYmd,jdbcType=CHAR},
      </if>
      <if test="record.createHms != null">
        create_hms = #{record.createHms,jdbcType=CHAR},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=CHAR},
      </if>
      <if test="record.update_ymd != null">
        update_ymd = #{record.update_ymd,jdbcType=CHAR},
      </if>
      <if test="record.update_hms != null">
        update_hms = #{record.update_hms,jdbcType=CHAR},
      </if>
      <if test="record.update_screen_id != null">
        update_screen_id = #{record.update_screen_id,jdbcType=VARCHAR},
      </if>
      <if test="record.update_ip_address != null">
        update_ip_address = #{record.update_ip_address,jdbcType=VARCHAR},
      </if>
      <if test="record.nr_update_flg != null">
        nr_update_flg = #{record.nr_update_flg,jdbcType=CHAR},
      </if>
      <if test="record.nr_ymd != null">
        nr_ymd = #{record.nr_ymd,jdbcType=CHAR},
      </if>
      <if test="record.nr_hms != null">
        nr_hms = #{record.nr_hms,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ma1000
    set store_cd = #{record.storeCd,jdbcType=CHAR},
    effective_start_date = #{record.effectiveStartDate,jdbcType=CHAR},
    effective_end_date = #{record.effectiveEndDate,jdbcType=CHAR},
    store_name = #{record.storeName,jdbcType=VARCHAR},
    store_name_short = #{record.storeNameShort,jdbcType=VARCHAR},
    corp_cd = #{record.corpCd,jdbcType=CHAR},
    zo_cd = #{record.zoCd,jdbcType=CHAR},
    do_cd = #{record.doCd,jdbcType=CHAR},
    ofc = #{record.ofc,jdbcType=CHAR},
    ma_cd = #{record.maCd,jdbcType=CHAR},
    structure_cd = #{record.structureCd,jdbcType=CHAR},
    store_type_cd = #{record.storeTypeCd,jdbcType=CHAR},
    open_date = #{record.openDate,jdbcType=CHAR},
    close_date = #{record.closeDate,jdbcType=CHAR},
    renovation_start_date = #{record.renovationStartDate,jdbcType=CHAR},
    renovation_end_date = #{record.renovationEndDate,jdbcType=CHAR},
    original_open_date = #{record.original_open_date,jdbcType=CHAR},
    old_store_cd = #{record.old_store_cd,jdbcType=CHAR},
    store_owner_name = #{record.storeOwnerName,jdbcType=VARCHAR},
    district_cd = #{record.districtCd,jdbcType=CHAR},
    store_address_1 = #{record.storeAddress1,jdbcType=VARCHAR},
    store_address_2 = #{record.storeAddress2,jdbcType=VARCHAR},
    store_zip_cd = #{record.storeZipCd,jdbcType=CHAR},
    store_phone_no = #{record.storePhoneNo,jdbcType=CHAR},
    store_fax_no = #{record.storeFaxNo,jdbcType=CHAR},
    store_phone_no2 = #{record.storePhoneNo2,jdbcType=CHAR},
    store_fax_no2 = #{record.storeFaxNo2,jdbcType=CHAR},
    license_type = #{record.licenseType,jdbcType=CHAR},
    store_scope = #{record.storeScope,jdbcType=CHAR},
    store_display_type = #{record.store_display_type,jdbcType=CHAR},
    selling_floor_space = #{record.sellingFloorSpace,jdbcType=NUMERIC},
    backroom_area = #{record.backroomArea,jdbcType=NUMERIC},
    num_of_pos = #{record.numOfPos,jdbcType=NUMERIC},
    num_of_scale = #{record.numOfScale,jdbcType=NUMERIC},
    num_of_label = #{record.numOfLabel,jdbcType=NUMERIC},
    biz_hours_from = #{record.bizHoursFrom,jdbcType=CHAR},
    biz_hours_to = #{record.bizHoursTo,jdbcType=CHAR},
    shelves_type = #{record.shelvesType,jdbcType=VARCHAR},
    create_user_id = #{record.createUserId,jdbcType=CHAR},
    create_ymd = #{record.createYmd,jdbcType=CHAR},
    create_hms = #{record.createHms,jdbcType=CHAR},
    update_user_id = #{record.updateUserId,jdbcType=CHAR},
    update_ymd = #{record.update_ymd,jdbcType=CHAR},
    update_hms = #{record.update_hms,jdbcType=CHAR},
    update_screen_id = #{record.update_screen_id,jdbcType=VARCHAR},
    update_ip_address = #{record.update_ip_address,jdbcType=VARCHAR},
    nr_update_flg = #{record.nr_update_flg,jdbcType=CHAR},
    nr_ymd = #{record.nr_ymd,jdbcType=CHAR},
    nr_hms = #{record.nr_hms,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ma1000
    <set>
      <if test="effectiveEndDate != null">
        effective_end_date = #{effectiveEndDate,jdbcType=CHAR},
      </if>
      <if test="storeName != null">
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
      <if test="storeNameShort != null">
        store_name_short = #{storeNameShort,jdbcType=VARCHAR},
      </if>
      <if test="corpCd != null">
        corp_cd = #{corpCd,jdbcType=CHAR},
      </if>
      <if test="zoCd != null">
        zo_cd = #{zoCd,jdbcType=CHAR},
      </if>
      <if test="doCd != null">
        do_cd = #{doCd,jdbcType=CHAR},
      </if>
      <if test="ofc != null">
        ofc = #{ofc,jdbcType=CHAR},
      </if>
      <if test="maCd != null">
        ma_cd = #{maCd,jdbcType=CHAR},
      </if>
      <if test="structureCd != null">
        structure_cd = #{structureCd,jdbcType=CHAR},
      </if>
      <if test="storeTypeCd != null">
        store_type_cd = #{storeTypeCd,jdbcType=CHAR},
      </if>
      <if test="openDate != null">
        open_date = #{openDate,jdbcType=CHAR},
      </if>
      <if test="closeDate != null">
        close_date = #{closeDate,jdbcType=CHAR},
      </if>
      <if test="renovationStartDate != null">
        renovation_start_date = #{renovationStartDate,jdbcType=CHAR},
      </if>
      <if test="renovationEndDate != null">
        renovation_end_date = #{renovationEndDate,jdbcType=CHAR},
      </if>
      <if test="original_open_date != null">
        original_open_date = #{original_open_date,jdbcType=CHAR},
      </if>
      <if test="old_store_cd != null">
        old_store_cd = #{old_store_cd,jdbcType=CHAR},
      </if>
      <if test="storeOwnerName != null">
        store_owner_name = #{storeOwnerName,jdbcType=VARCHAR},
      </if>
      <if test="districtCd != null">
        district_cd = #{districtCd,jdbcType=CHAR},
      </if>
      <if test="storeAddress1 != null">
        store_address_1 = #{storeAddress1,jdbcType=VARCHAR},
      </if>
      <if test="storeAddress2 != null">
        store_address_2 = #{storeAddress2,jdbcType=VARCHAR},
      </if>
      <if test="storeZipCd != null">
        store_zip_cd = #{storeZipCd,jdbcType=CHAR},
      </if>
      <if test="storePhoneNo != null">
        store_phone_no = #{storePhoneNo,jdbcType=CHAR},
      </if>
      <if test="storeFaxNo != null">
        store_fax_no = #{storeFaxNo,jdbcType=CHAR},
      </if>
      <if test="storePhoneNo2 != null">
        store_phone_no2 = #{storePhoneNo2,jdbcType=CHAR},
      </if>
      <if test="storeFaxNo2 != null">
        store_fax_no2 = #{storeFaxNo2,jdbcType=CHAR},
      </if>
      <if test="licenseType != null">
        license_type = #{licenseType,jdbcType=CHAR},
      </if>
      <if test="storeScope != null">
        store_scope = #{storeScope,jdbcType=CHAR},
      </if>
      <if test="store_display_type != null">
        store_display_type = #{store_display_type,jdbcType=CHAR},
      </if>
      <if test="sellingFloorSpace != null">
        selling_floor_space = #{sellingFloorSpace,jdbcType=NUMERIC},
      </if>
      <if test="backroomArea != null">
        backroom_area = #{backroomArea,jdbcType=NUMERIC},
      </if>
      <if test="numOfPos != null">
        num_of_pos = #{numOfPos,jdbcType=NUMERIC},
      </if>
      <if test="numOfScale != null">
        num_of_scale = #{numOfScale,jdbcType=NUMERIC},
      </if>
      <if test="numOfLabel != null">
        num_of_label = #{numOfLabel,jdbcType=NUMERIC},
      </if>
      <if test="bizHoursFrom != null">
        biz_hours_from = #{bizHoursFrom,jdbcType=CHAR},
      </if>
      <if test="bizHoursTo != null">
        biz_hours_to = #{bizHoursTo,jdbcType=CHAR},
      </if>
      <if test="shelvesType != null">
        shelves_type = #{shelvesType,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=CHAR},
      </if>
      <if test="createYmd != null">
        create_ymd = #{createYmd,jdbcType=CHAR},
      </if>
      <if test="createHms != null">
        create_hms = #{createHms,jdbcType=CHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=CHAR},
      </if>
      <if test="update_ymd != null">
        update_ymd = #{update_ymd,jdbcType=CHAR},
      </if>
      <if test="update_hms != null">
        update_hms = #{update_hms,jdbcType=CHAR},
      </if>
      <if test="update_screen_id != null">
        update_screen_id = #{update_screen_id,jdbcType=VARCHAR},
      </if>
      <if test="update_ip_address != null">
        update_ip_address = #{update_ip_address,jdbcType=VARCHAR},
      </if>
      <if test="nr_update_flg != null">
        nr_update_flg = #{nr_update_flg,jdbcType=CHAR},
      </if>
      <if test="nr_ymd != null">
        nr_ymd = #{nr_ymd,jdbcType=CHAR},
      </if>
      <if test="nr_hms != null">
        nr_hms = #{nr_hms,jdbcType=CHAR},
      </if>
    </set>
    where store_cd = #{storeCd,jdbcType=CHAR}
    and effective_start_date = #{effectiveStartDate,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ma1000
    set effective_end_date = #{effectiveEndDate,jdbcType=CHAR},
    store_name = #{storeName,jdbcType=VARCHAR},
    store_name_short = #{storeNameShort,jdbcType=VARCHAR},
    corp_cd = #{corpCd,jdbcType=CHAR},
    zo_cd = #{zoCd,jdbcType=CHAR},
    do_cd = #{doCd,jdbcType=CHAR},
    ofc = #{ofc,jdbcType=CHAR},
    ma_cd = #{maCd,jdbcType=CHAR},
    structure_cd = #{structureCd,jdbcType=CHAR},
    store_type_cd = #{storeTypeCd,jdbcType=CHAR},
    open_date = #{openDate,jdbcType=CHAR},
    close_date = #{closeDate,jdbcType=CHAR},
    renovation_start_date = #{renovationStartDate,jdbcType=CHAR},
    renovation_end_date = #{renovationEndDate,jdbcType=CHAR},
    original_open_date = #{original_open_date,jdbcType=CHAR},
    old_store_cd = #{old_store_cd,jdbcType=CHAR},
    store_owner_name = #{storeOwnerName,jdbcType=VARCHAR},
    district_cd = #{districtCd,jdbcType=CHAR},
    store_address_1 = #{storeAddress1,jdbcType=VARCHAR},
    store_address_2 = #{storeAddress2,jdbcType=VARCHAR},
    store_zip_cd = #{storeZipCd,jdbcType=CHAR},
    store_phone_no = #{storePhoneNo,jdbcType=CHAR},
    store_fax_no = #{storeFaxNo,jdbcType=CHAR},
    store_phone_no2 = #{storePhoneNo2,jdbcType=CHAR},
    store_fax_no2 = #{storeFaxNo2,jdbcType=CHAR},
    license_type = #{licenseType,jdbcType=CHAR},
    store_scope = #{storeScope,jdbcType=CHAR},
    store_display_type = #{store_display_type,jdbcType=CHAR},
    selling_floor_space = #{sellingFloorSpace,jdbcType=NUMERIC},
    backroom_area = #{backroomArea,jdbcType=NUMERIC},
    num_of_pos = #{numOfPos,jdbcType=NUMERIC},
    num_of_scale = #{numOfScale,jdbcType=NUMERIC},
    num_of_label = #{numOfLabel,jdbcType=NUMERIC},
    biz_hours_from = #{bizHoursFrom,jdbcType=CHAR},
    biz_hours_to = #{bizHoursTo,jdbcType=CHAR},
    shelves_type = #{shelvesType,jdbcType=VARCHAR},
    create_user_id = #{createUserId,jdbcType=CHAR},
    create_ymd = #{createYmd,jdbcType=CHAR},
    create_hms = #{createHms,jdbcType=CHAR},
    update_user_id = #{updateUserId,jdbcType=CHAR},
    update_ymd = #{update_ymd,jdbcType=CHAR},
    update_hms = #{update_hms,jdbcType=CHAR},
    update_screen_id = #{update_screen_id,jdbcType=VARCHAR},
    update_ip_address = #{update_ip_address,jdbcType=VARCHAR},
    nr_update_flg = #{nr_update_flg,jdbcType=CHAR},
    nr_ymd = #{nr_ymd,jdbcType=CHAR},
    nr_hms = #{nr_hms,jdbcType=CHAR}
    where store_cd = #{storeCd,jdbcType=CHAR}
    and effective_start_date = #{effectiveStartDate,jdbcType=CHAR}
  </update>
  <select id="countLastSelect" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select FOUND_ROWS()
  </select>
  <select id="selectStoreByStoreCd" resultType="cn.com.bbut.iy.itemmaster.entity.base.Ma1000">
    select * from ma1000
    where 1=1
    <if test="storeCd!=null and storeCd!=''">
      and ma1000.store_cd=#{storeCd}
    </if>
  </select>
  <!--  <select id="getStoreLike" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO"-->
  <!--          parameterType="string">-->
  <!--		SELECT store_cd as k,-->
  <!--			   store_name as v-->
  <!--	  	FROM MA1000-->
  <!--        <if test="storeCd != null and storeCd != ''">-->
  <!--		    WHERE store_cd like '%'|| #{storeCd} || '%' or U.store_name like '%'|| #{storeCd} || '%'-->
  <!--        </if>-->
  <!--	</select>-->
</mapper>