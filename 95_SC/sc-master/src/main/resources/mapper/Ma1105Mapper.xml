<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bbut.iy.itemmaster.dao.Ma1105Mapper">
  <resultMap id="BaseResultMap" type="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="desc_g" jdbcType="VARCHAR" property="descG" />
    <result column="loc" jdbcType="VARCHAR" property="loc" />
    <result column="item_code" jdbcType="VARCHAR" property="itemCode" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="v_facing" jdbcType="VARCHAR" property="vFacing" />
    <result column="h_facing" jdbcType="VARCHAR" property="hFacing" />
    <result column="d_facing" jdbcType="VARCHAR" property="dFacing" />
    <result column="total_facing" jdbcType="VARCHAR" property="totalFacing" />
    <result column="shelf" jdbcType="VARCHAR" property="shelf" />
    <result column="sub_shelf" jdbcType="VARCHAR" property="subShelf" />
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId" />
    <result column="create_date" jdbcType="CHAR" property="createDate" />
    <result column="store_cd" jdbcType="VARCHAR" property="storeCd" />
    <result column="dep_name" jdbcType="VARCHAR" property="depName" />
    <result column="pma_name" jdbcType="VARCHAR" property="pmaName" />
    <result column="category_name" jdbcType="VARCHAR" property="categoryName" />
    <result column="sub_category_name" jdbcType="VARCHAR" property="subCategoryName" />
    <result column="store_name" jdbcType="VARCHAR" property="storeName" />
    <result column="store_type_cd" jdbcType="VARCHAR" property="storeTypeCd" />
    <result column="store_type_name" jdbcType="VARCHAR" property="storeTypeName" />
    <result column="store_group_name" jdbcType="VARCHAR" property="storeGroupName" />
    <result column="pog_name" jdbcType="VARCHAR" property="excelName" />

  </resultMap>


  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    desc_g, loc, item_code,
    /*--     product_name,*/
    v_facing, h_facing, d_facing, total_facing,
    shelf, sub_shelf, ma1105.create_user_id, create_date, ma1105.store_cd
  </sql>
  <select id="selectByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105Example" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="needFoundRows">
      SQL_CALC_FOUND_ROWS
    </if>
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ma1105
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
      limit ${limitEnd} offset ${limitStart}
    </if>
  </select>

  <select id="selectList" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    ,ma1100.article_name product_name,ma1000.store_name
    ,ma0070.dep_name,ma0080.pma_name,ma0090.category_name,ma0100.sub_category_name
    ,ma0030.store_type_cd,ma0030.store_type_name
    ,ma0035.store_group_cd,ma0035.store_group_name,ma1105.pog_name
    from ma1105,ma1100,ma0070,ma0080,ma0090,ma0100,ma1000,ma0030,ma0035
    <where>
      ma1105.item_code = ma1100.article_id
      and ma1105.store_cd = ma1000.store_cd
      and ma1000.store_type_cd = trim(ma0030.store_type_cd)
      and ma1000.store_group_cd = trim(ma0035.store_group_cd)
      <if test="businessDate !=null and businessDate !=''">
        <![CDATA[
            AND #{businessDate,jdbcType=VARCHAR} >=ma1100.EFFECTIVE_START_DATE
            AND ma1100.EFFECTIVE_END_DATE >= #{businessDate,jdbcType=VARCHAR}
            AND #{businessDate,jdbcType=VARCHAR} >=ma1000.EFFECTIVE_START_DATE
            AND ma1000.EFFECTIVE_END_DATE >= #{businessDate,jdbcType=VARCHAR}
        ]]>
      </if>
      and ma1100.dep_cd = ma0070.dep_cd
      and ma1100.pma_cd = ma0080.pma_cd
      and ma1100.category_cd = ma0090.category_cd
      and ma1100.sub_category_cd = ma0100.sub_category_cd
      and ma1100.dep_cd = ma0080.dep_cd
      and ma1100.dep_cd = ma0090.dep_cd
      and ma1100.pma_cd = ma0090.pma_cd
      and ma1100.dep_cd = ma0100.dep_cd
      and ma1100.pma_cd = ma0100.pma_cd
      and ma1100.category_cd = ma0100.category_cd
      <if test="storeCd != null and storeCd != ''">
        and ma1105.store_cd = #{storeCd,jdbcType=VARCHAR}
      </if>
      <if test="storeTypeCd != null and storeTypeCd != ''">
        and ma1000.store_type_cd = #{storeTypeCd,jdbcType=VARCHAR}
      </if>
      <if test="maCd != null and maCd != ''">
      and ma1000.store_group_cd = #{maCd,jdbcType=VARCHAR}
    </if>
      <if test="depCd != null and depCd != ''">
        and ma1100.dep_cd = #{depCd,jdbcType=VARCHAR}
      </if>
      <if test="pmaCd != null and pmaCd != ''">
        and ma1100.pma_cd = #{pmaCd,jdbcType=VARCHAR}
      </if>
      <if test="categoryCd != null and categoryCd != ''">
        and ma1100.category_cd = #{categoryCd,jdbcType=VARCHAR}
      </if>
      <if test="subCategoryCd != null and subCategoryCd != ''">
        and ma1100.sub_category_cd = #{subCategoryCd,jdbcType=VARCHAR}
      </if>
      <if test="descG != null and descG != ''">
        AND lower(desc_g) like lower(CONCAT('%',#{descG,jdbcType=VARCHAR},'%'))
      </if>
      <if test="loc != null and loc != ''">
        AND lower(loc) like lower(CONCAT('%',#{loc,jdbcType=VARCHAR},'%'))
      </if>
      <if test="itemCode != null and itemCode !=''">
        AND lower(item_code) like lower(CONCAT('%',#{itemCode,jdbcType=VARCHAR},'%'))
      </if>
      <if test="productName != null and productName !=''">
        AND lower(ma1100.article_name) like lower(CONCAT('%',#{productName,jdbcType=VARCHAR},'%'))
      </if>
      <if test="vFacing != null and vFacing !=''">
        AND lower(v_facing) like lower(CONCAT('%',#{vFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="hFacing != null and hFacing !=''">
        AND lower(h_facing) like lower(CONCAT('%',#{hFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="dFacing != null and dFacing !=''">
        AND lower(d_facing) like lower(CONCAT('%',#{dFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="totalFacing != null and totalFacing !=''">
        AND lower(total_facing) like lower(CONCAT('%',#{totalFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="shelf != null and shelf !=''">
        AND lower(shelf) like lower(CONCAT('%',#{shelf,jdbcType=VARCHAR},'%'))
      </if>
      <if test="subShelf != null and subShelf !=''">
        AND lower(sub_shelf) like lower(CONCAT('%',#{subShelf,jdbcType=VARCHAR},'%'))
      </if>
      <if test="createDate != null and createDate != ''">
        and create_date = #{createDate,jdbcType=VARCHAR}
      </if>
      <if test="excelName != null and excelName !=''">
        AND lower(pog_name) like lower(CONCAT('%',#{excelName,jdbcType=VARCHAR},'%'))
      </if>
      <if test="orderByClause != null">
        order by ${orderByClause}
      </if>
      <if test="flg and limitStart >= 0">
        limit ${limitEnd} offset ${limitStart}
      </if>
    </where>
  </select>
  <delete id="deleteByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105Example">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from ma1105
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ma1105 (desc_g, loc, item_code,
    product_name, v_facing, h_facing,
    d_facing, total_facing, shelf,
    sub_shelf, create_user_id, create_date,
    store_cd)
    values (#{descG,jdbcType=VARCHAR}, #{loc,jdbcType=VARCHAR}, #{itemCode,jdbcType=VARCHAR},
    #{productName,jdbcType=VARCHAR}, #{vFacing,jdbcType=VARCHAR}, #{hFacing,jdbcType=VARCHAR},
    #{dFacing,jdbcType=VARCHAR}, #{totalFacing,jdbcType=VARCHAR}, #{shelf,jdbcType=VARCHAR},
    #{subShelf,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createDate,jdbcType=CHAR},
    #{storeCd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into ma1105
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="descG != null">
        desc_g,
      </if>
      <if test="loc != null">
        loc,
      </if>
      <if test="itemCode != null">
        item_code,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="vFacing != null">
        v_facing,
      </if>
      <if test="hFacing != null">
        h_facing,
      </if>
      <if test="dFacing != null">
        d_facing,
      </if>
      <if test="totalFacing != null">
        total_facing,
      </if>
      <if test="shelf != null">
        shelf,
      </if>
      <if test="subShelf != null">
        sub_shelf,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="storeCd != null">
        store_cd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="descG != null">
        #{descG,jdbcType=VARCHAR},
      </if>
      <if test="loc != null">
        #{loc,jdbcType=VARCHAR},
      </if>
      <if test="itemCode != null">
        #{itemCode,jdbcType=VARCHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="vFacing != null">
        #{vFacing,jdbcType=VARCHAR},
      </if>
      <if test="hFacing != null">
        #{hFacing,jdbcType=VARCHAR},
      </if>
      <if test="dFacing != null">
        #{dFacing,jdbcType=VARCHAR},
      </if>
      <if test="totalFacing != null">
        #{totalFacing,jdbcType=VARCHAR},
      </if>
      <if test="shelf != null">
        #{shelf,jdbcType=VARCHAR},
      </if>
      <if test="subShelf != null">
        #{subShelf,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=CHAR},
      </if>
      <if test="storeCd != null">
        #{storeCd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select  id="selectListCount" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105" resultType="java.lang.Long">
    select
    count(*)
    from ma1105,ma1100,ma0070,ma0080,ma0090,ma0100,ma1000,ma0030,ma0035
    <where>
      ma1105.item_code = ma1100.article_id
      and ma1105.store_cd = ma1000.store_cd
      and ma1000.store_type_cd = trim(ma0030.store_type_cd)
      and ma1000.store_group_cd = trim(ma0035.store_group_cd)
      <if test="businessDate !=null and businessDate !=''">
        <![CDATA[
            AND #{businessDate,jdbcType=VARCHAR} >=ma1100.EFFECTIVE_START_DATE
            AND ma1100.EFFECTIVE_END_DATE >= #{businessDate,jdbcType=VARCHAR}
            AND #{businessDate,jdbcType=VARCHAR} >=ma1000.EFFECTIVE_START_DATE
            AND ma1000.EFFECTIVE_END_DATE >= #{businessDate,jdbcType=VARCHAR}
        ]]>
      </if>
      and ma1100.dep_cd = ma0070.dep_cd
      and ma1100.pma_cd = ma0080.pma_cd
      and ma1100.category_cd = ma0090.category_cd
      and ma1100.sub_category_cd = ma0100.sub_category_cd
      and ma1100.dep_cd = ma0080.dep_cd
      and ma1100.dep_cd = ma0090.dep_cd
      and ma1100.pma_cd = ma0090.pma_cd
      and ma1100.dep_cd = ma0100.dep_cd
      and ma1100.pma_cd = ma0100.pma_cd
      and ma1100.category_cd = ma0100.category_cd
      <if test="storeCd != null and storeCd != ''">
        and ma1105.store_cd = #{storeCd,jdbcType=VARCHAR}
      </if>
      <if test="storeTypeCd != null and storeTypeCd != ''">
        and ma1000.store_type_cd = #{storeTypeCd,jdbcType=VARCHAR}
      </if>
      <if test="maCd != null and maCd != ''">
        and ma1000.store_group_cd = #{maCd,jdbcType=VARCHAR}
      </if>
      <if test="depCd != null and depCd != ''">
        and ma1100.dep_cd = #{depCd,jdbcType=VARCHAR}
      </if>
      <if test="pmaCd != null and pmaCd != ''">
        and ma1100.pma_cd = #{pmaCd,jdbcType=VARCHAR}
      </if>
      <if test="categoryCd != null and categoryCd != ''">
        and ma1100.category_cd = #{categoryCd,jdbcType=VARCHAR}
      </if>
      <if test="subCategoryCd != null and subCategoryCd != ''">
        and ma1100.sub_category_cd = #{subCategoryCd,jdbcType=VARCHAR}
      </if>
      <if test="descG != null and descG != ''">
        AND lower(desc_g) like lower(CONCAT('%',#{descG,jdbcType=VARCHAR},'%'))
      </if>
      <if test="loc != null and loc != ''">
        AND lower(loc) like lower(CONCAT('%',#{loc,jdbcType=VARCHAR},'%'))
      </if>
      <if test="itemCode != null and itemCode !=''">
        AND lower(item_code) like lower(CONCAT('%',#{itemCode,jdbcType=VARCHAR},'%'))
      </if>
      <if test="productName != null and productName !=''">
        AND lower(ma1100.article_name) like lower(CONCAT('%',#{productName,jdbcType=VARCHAR},'%'))
      </if>
      <if test="vFacing != null and vFacing !=''">
        AND lower(v_facing) like lower(CONCAT('%',#{vFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="hFacing != null and hFacing !=''">
        AND lower(h_facing) like lower(CONCAT('%',#{hFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="dFacing != null and dFacing !=''">
        AND lower(d_facing) like lower(CONCAT('%',#{dFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="totalFacing != null and totalFacing !=''">
        AND lower(total_facing) like lower(CONCAT('%',#{totalFacing,jdbcType=VARCHAR},'%'))
      </if>
      <if test="shelf != null and shelf !=''">
        AND lower(shelf) like lower(CONCAT('%',#{shelf,jdbcType=VARCHAR},'%'))
      </if>
      <if test="subShelf != null and subShelf !=''">
        AND lower(sub_shelf) like lower(CONCAT('%',#{subShelf,jdbcType=VARCHAR},'%'))
      </if>
      <if test="createDate != null and createDate != ''">
        and create_date = #{createDate,jdbcType=VARCHAR}
      </if>
      <if test="excelName != null and excelName !=''">
        AND lower(pog_name) like lower(CONCAT('%',#{excelName,jdbcType=VARCHAR},'%'))
      </if>
    </where>
  </select>
  <select  id="selectMa1105" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105" resultType="string">
    select shelf from ma1105 where
    (store_cd,shelf) in
    <foreach collection="list" item="dto" index="index" open="(" close=")"
             separator=",">
      (
      #{dto.storeCd,jdbcType=VARCHAR},
      #{dto.shelf,jdbcType=VARCHAR}
      )
    </foreach>
    group by shelf order by shelf
  </select>
  <select  id="getShelf"  parameterType="string" resultType="string">
    select shelf from ma1105 where
      store_cd = #{storeCd,jdbcType=VARCHAR} and
      shelf is not null
    group by shelf order by shelf
  </select>
  <select  id="getSubShelf"  parameterType="string" resultType="string">
    select sub_shelf subShelf from ma1105 where
      store_cd = #{storeCd,jdbcType=VARCHAR} and
      shelf = #{shelf,jdbcType=VARCHAR} and
      sub_shelf is not null
    group by sub_shelf order by sub_shelf
  </select>
  <select id="countByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105Example" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from ma1105
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ma1105
    <set>
      <if test="record.descG != null">
        desc_g = #{record.descG,jdbcType=VARCHAR},
      </if>
      <if test="record.loc != null">
        loc = #{record.loc,jdbcType=VARCHAR},
      </if>
      <if test="record.itemCode != null">
        item_code = #{record.itemCode,jdbcType=VARCHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.vFacing != null">
        v_facing = #{record.vFacing,jdbcType=VARCHAR},
      </if>
      <if test="record.hFacing != null">
        h_facing = #{record.hFacing,jdbcType=VARCHAR},
      </if>
      <if test="record.dFacing != null">
        d_facing = #{record.dFacing,jdbcType=VARCHAR},
      </if>
      <if test="record.totalFacing != null">
        total_facing = #{record.totalFacing,jdbcType=VARCHAR},
      </if>
      <if test="record.shelf != null">
        shelf = #{record.shelf,jdbcType=VARCHAR},
      </if>
      <if test="record.subShelf != null">
        sub_shelf = #{record.subShelf,jdbcType=VARCHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=CHAR},
      </if>
      <if test="record.storeCd != null">
        store_cd = #{record.storeCd,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update ma1105
    set desc_g = #{record.descG,jdbcType=VARCHAR},
    loc = #{record.loc,jdbcType=VARCHAR},
    item_code = #{record.itemCode,jdbcType=VARCHAR},
    product_name = #{record.productName,jdbcType=VARCHAR},
    v_facing = #{record.vFacing,jdbcType=VARCHAR},
    h_facing = #{record.hFacing,jdbcType=VARCHAR},
    d_facing = #{record.dFacing,jdbcType=VARCHAR},
    total_facing = #{record.totalFacing,jdbcType=VARCHAR},
    shelf = #{record.shelf,jdbcType=VARCHAR},
    sub_shelf = #{record.subShelf,jdbcType=VARCHAR},
    create_user_id = #{record.createUserId,jdbcType=VARCHAR},
    create_date = #{record.createDate,jdbcType=CHAR},
    store_cd = #{record.storeCd,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="countLastSelect" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select FOUND_ROWS()
  </select>

  <select id="getStoreInfo" resultType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
        select ma_cd,store_type_cd from ma1000
        WHERE #{businessDate,jdbcType=VARCHAR}
        BETWEEN effective_start_date AND effective_end_date
        AND store_cd = #{storeCd,jdbcType=VARCHAR}
        limit 1
  </select>

  <insert id="insertAudit">
        insert into ma1106(store_cd) values (#{storeCd,jdbcType=VARCHAR})
        ON CONFLICT (store_cd) DO NOTHING;
  </insert>

  <delete id="deleteMa1107" parameterType="String">
        delete from ma1107 where pog_name = #{excelName,jdbcType=VARCHAR} and store_cd = #{storeCd,jdbcType=VARCHAR}
  </delete>

  <delete id="deleteMa1104">
        delete from ma1104 where pog_cd = #{pogCd,jdbcType=VARCHAR} and store_cd = #{storeCd,jdbcType=VARCHAR}
  </delete>

  <insert id="insertMa1104" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
        insert into ma1104(
        pog_cd,pog_name,store_cd, create_user_id, create_ymd, create_hms,review_status,is_expired)
        values(
        #{pogCd,jdbcType=VARCHAR},#{excelName,jdbcType=VARCHAR},#{storeCd,jdbcType=VARCHAR},
        #{commonDTO.createUserId,jdbcType=VARCHAR},
        #{commonDTO.createYmd,jdbcType=CHAR}, #{commonDTO.createHms,jdbcType=CHAR},
        1,'1'
        )
  </insert>

  <insert id="insertMa1107">
        insert into ma1107(
        pog_cd,pog_name,store_cd,effective_sts, create_user_id, create_ymd, create_hms)
        values(
        #{pogCd,jdbcType=VARCHAR},#{excelName,jdbcType=VARCHAR},#{storeCd,jdbcType=VARCHAR},'10',
        #{commonDTO.createUserId,jdbcType=VARCHAR},
        #{commonDTO.createYmd,jdbcType=CHAR}, #{commonDTO.createHms,jdbcType=CHAR}
        )
  </insert>

  <insert id="insertMa1108" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    insert into ma1108(
    pog_cd,shelf,store_cd,effective_sts, create_user_id, create_ymd, create_hms)
    values
    <foreach collection="ma1105s" item="item" index="index"  separator="," >
      (
      #{item.pogCd,jdbcType=VARCHAR},#{item.shelf,jdbcType=VARCHAR},#{item.storeCd,jdbcType=VARCHAR},'10',
      #{item.commonDTO.createUserId,jdbcType=VARCHAR},
      #{item.commonDTO.createYmd,jdbcType=CHAR}, #{item.commonDTO.createHms,jdbcType=CHAR}
      )
    </foreach>
  </insert>

  <insert id="insertMa1109" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    insert into ma1109(
    pog_cd,shelf,sub_shelf,store_cd,effective_sts, create_user_id, create_ymd, create_hms)
    values
    <foreach collection="ma1105s" item="item" index="index"  separator="," >
      (
      #{item.pogCd,jdbcType=VARCHAR},#{item.shelf,jdbcType=VARCHAR},
      #{item.subShelf,jdbcType=VARCHAR},#{item.storeCd,jdbcType=VARCHAR},'10',
      #{item.commonDTO.createUserId,jdbcType=VARCHAR},
      #{item.commonDTO.createYmd,jdbcType=CHAR}, #{item.commonDTO.createHms,jdbcType=CHAR}
      )
    </foreach>
  </insert>

  <insert id="insertMa1105tSelective" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    insert into ma1105_t
    (
        desc_g,
        loc,
        item_code,
        product_name,
        v_facing,
        h_facing,
        d_facing,
        total_facing,
        shelf,
        sub_shelf,
        create_user_id,
        create_date,
        store_cd,
        pog_name
        )
        values
    <foreach collection="ma1105s" item="item" index="index"  separator="," >
    (
      #{item.descG,jdbcType=VARCHAR},
      #{item.loc,jdbcType=VARCHAR},
      #{item.itemCode,jdbcType=VARCHAR},
      #{item.productName,jdbcType=VARCHAR},
      #{item.vFacing,jdbcType=VARCHAR},
      #{item.hFacing,jdbcType=VARCHAR},
      #{item.dFacing,jdbcType=VARCHAR},
      #{item.totalFacing,jdbcType=VARCHAR},
      #{item.shelf,jdbcType=VARCHAR},
      #{item.subShelf,jdbcType=VARCHAR},
      #{item.createUserId,jdbcType=VARCHAR},
      #{item.createDate,jdbcType=CHAR},
      #{item.storeCd,jdbcType=VARCHAR},
      #{item.excelName,jdbcType=VARCHAR}
      )
    </foreach>
  </insert>

  <select id="getStatusByStoreCd" resultType="INTEGER">
    select review_status from ma1106 where store_cd = #{storeCd,jdbcType=VARCHAR}
  </select>

  <select id="getTempShelf" resultType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105" parameterType="String">
        select store_cd,shelf from ma1105_t
        WHERE store_cd = #{storeCd,jdbcType=VARCHAR} and pog_name like concat(#{pogName},'%')
  </select>

  <delete id="deleteMa1105Byshelf" parameterType="cn.com.bbut.iy.itemmaster.entity.base.Ma1105">
    delete from ma1105 where (store_cd,shelf) in
    <foreach collection="ma1105s" item="item" index="index" open="(" close=")" separator=",">
      (
       #{item.storeCd,jdbcType=VARCHAR},#{item.shelf,jdbcType=VARCHAR}
      )
    </foreach>
    and pog_name like concat(#{pogName},'%')
  </delete>

  <insert id="insertShelfToMall05" parameterType="String">
    insert into ma1105
    select
    desc_g,loc,item_code,product_name,v_facing,h_facing,d_facing,total_facing,shelf,
    sub_shelf,create_user_id,create_date,store_cd,pog_name
    from ma1105_t where store_cd = #{storeCd,jdbcType=VARCHAR}
  </insert>

  <delete id="deleteShelf" parameterType="String">
    delete from ma1105_t where store_cd = #{storeCd,jdbcType=VARCHAR}
  </delete>

  <select id="getPOGInformation" resultType="cn.com.bbut.iy.itemmaster.dto.ma1105.Ma1104Dto">
    SELECT * FROM ma1104 where store_cd = #{storeCd,jdbcType=VARCHAR}
and (create_ymd || create_hms) = (select max(create_ymd || create_hms) from ma1104 where store_cd = #{storeCd,jdbcType=VARCHAR})
  </select>

  <update id="updatePOGAuditStatus" parameterType="cn.com.bbut.iy.itemmaster.dto.ma1105.Ma1104Dto">
    update  ma1104 set review_status = #{reviewStatus},is_expired = #{isExpired,jdbcType=VARCHAR}
     where store_cd = #{storeCd,jdbcType=VARCHAR}
    and pog_cd = #{pogCd,jdbcType=VARCHAR}
  </update>

  <update id="updatePOGIsExpiredStatus" parameterType="cn.com.bbut.iy.itemmaster.dto.ma1105.Ma1104Dto">
    update  ma1104 set is_expired = '1' where store_cd = #{storeCd,jdbcType=VARCHAR}
    and (create_ymd || create_hms)  &lt;  (select max(create_ymd || create_hms) from ma1104 where store_cd = #{storeCd,jdbcType=VARCHAR})
    and pog_name like concat(#{pogName,jdbcType=VARCHAR},'%');
  </update>

  <select id="countPogName" resultType="java.lang.Integer">
    select count(*) from ma1104 where pog_name = #{excelName,jdbcType=VARCHAR}
    and store_cd = #{storeCd,jdbcType=VARCHAR}
    and create_ymd = to_char(CURRENT_DATE,'yyyyMMdd')
    and review_status = '10'
    and is_expired = '0'
  </select>

  <update id="modifyPOGStatus">
    UPDATE  ma1104
    SET
    REVIEW_STATUS = #{status,jdbcType=SMALLINT}
    <choose>
      <when test="status == 10">
        ,is_expired = '0'
      </when>
      <otherwise>
        ,is_expired = '1'
      </otherwise>
    </choose>
    WHERE
    store_cd = #{recordCd}
  </update>

  <!-- 截取位置从1开始 -->
  <select id="getPogNamePrefix" resultType="String">
    select distinct replace(split_part(pog_name,'-',1),' ','') pogNamePrefix from ma1105 where store_cd = #{storeCd,jdbcType=VARCHAR};
  </select>
</mapper>