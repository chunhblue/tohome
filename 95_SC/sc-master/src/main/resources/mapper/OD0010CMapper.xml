<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.bbut.iy.itemmaster.dao.OD0010CMapper">
  <resultMap id="BaseResultMap" type="cn.com.bbut.iy.itemmaster.entity.OD0010C">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="store_cd" jdbcType="VARCHAR" property="storeCd"/>

    <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
    <id column="serial_no" jdbcType="VARCHAR" property="serialNo"/>
    <id column="article_id" jdbcType="VARCHAR" property="articleId"/>
    <id column="article_name" jdbcType="VARCHAR" property="articleName"/>
    <result column="barcode" jdbcType="VARCHAR" property="barcode"/>
    <result column="vendor_id" jdbcType="CHAR" property="vendorId"/>
    <result column="promotion_id" jdbcType="VARCHAR" property="promotionId"/>
    <result column="order_unit" jdbcType="VARCHAR" property="orderUnit"/>
    <result column="unit_id" jdbcType="VARCHAR" property="unitId"/>
    <result column="purchase_unit_id" jdbcType="VARCHAR" property="purchaseUnitId"/>
    <result column="order_qty" jdbcType="NUMERIC" property="orderQty"/>
    <result column="order_nocharge_qty" jdbcType="NUMERIC" property="orderNochargeQty"/>
    <result column="order_price" jdbcType="NUMERIC" property="orderPrice"/>
    <result column="order_amt" jdbcType="NUMERIC" property="orderAmt"/>
    <result column="order_amt_notax" jdbcType="NUMERIC" property="orderAmtNotax"/>
    <result column="order_tax" jdbcType="NUMERIC" property="orderTax"/>
    <result column="receive_price" jdbcType="NUMERIC" property="receivePrice"/>
    <result column="receive_qty" jdbcType="NUMERIC" property="receiveQty"/>
    <result column="receive_nocharge_qty" jdbcType="NUMERIC" property="receiveNoChargeQty"/>
    <result column="receive_total_qty" jdbcType="NUMERIC" property="receiveTotalQty"/>
    <result column="receive_total_amt" jdbcType="NUMERIC" property="receiveTotalAmt"/>
    <result column="receive_total_amt_notax" jdbcType="NUMERIC" property="receiveTotalAmtNotax"/>
    <result column="receive_tax" jdbcType="NUMERIC" property="receiveTax"/>
    <result column="upload_flg" jdbcType="CHAR" property="uploadFlg"/>
    <result column="order_id" property="orderId"/>
    <result column="upload_date" jdbcType="CHAR" property="uploadDate"/>
    <result column="create_user_id" jdbcType="VARCHAR" property="createUserId"/>
    <result column="create_ymd" jdbcType="CHAR" property="createYmd"/>
    <result column="create_hms" jdbcType="CHAR" property="createHms"/>
    <result column="update_user_id" jdbcType="VARCHAR" property="updateUserId"/>
    <result column="update_ymd" jdbcType="CHAR" property="updateYmd"/>
    <result column="update_hms" jdbcType="CHAR" property="updateHms"/>
    <result column="update_screen_id" jdbcType="VARCHAR" property="updateScreenId"/>
    <result column="update_ip_address" jdbcType="VARCHAR" property="updateIpAddress"/>
    <result column="nr_update_flg" jdbcType="CHAR" property="nrUpdateFlg"/>
    <result column="nr_ymd" jdbcType="CHAR" property="nrYmd"/>
    <result column="nr_hms" jdbcType="CHAR" property="nrHms"/>
    <result column="reason_id" jdbcType="VARCHAR" property="reasonId"/>
    <result column="adjust_amt" jdbcType="NUMERIC" property="adjustAmt"/>
    <result column="adjust_qty" jdbcType="NUMERIC" property="adjustQty"/>
    <result column="order_date" jdbcType="CHAR" property="orderDate"/>
    <result column="delivery_date" jdbcType="CHAR" property="deliveryDate"/>
    <result column="product_name" jdbcType="CHAR" property="productName"/>
    <result column="order_specifi" jdbcType="CHAR" property="orderSpecifi"/>
    <result column="lowest_order" jdbcType="CHAR" property="lowestOrder"/>
    <result column="min_order_qty" jdbcType="CHAR" property="minOrderQty"/>
    <result column="dc_m_order_qty" jdbcType="CHAR" property="dcMorderQty"/>
    <result column="goods_quantity" jdbcType="CHAR" property="gQuantity"/>
    <result column="review_status" jdbcType="CHAR" property="reviewStatus"/>
    <result column="receiving_differences" jdbcType="CHAR" property="receivingDifferences"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="("
                           separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    store_cd, order_id, serial_no, article_id, barcode, vendor_id, promotion_id, order_unit,
    order_qty, order_nocharge_qty, order_price, order_amt, order_amt_notax, order_tax,
    receive_price, receive_qty, receive_nocharge_qty, receive_total_qty, receive_total_amt,
    receive_total_amt_notax, receive_tax, upload_flg, upload_date, create_user_id, create_ymd,
    create_hms, update_user_id, update_ymd, update_hms, update_screen_id, update_ip_address,
    nr_update_flg, nr_ymd, nr_hms, reason_id, adjust_amt, adjust_qty, order_date, delivery_date,
    product_name, order_specifi, lowest_order, goods_quantity, receiving_differences
  </sql>

  <resultMap id="itemResult" type="cn.com.bbut.iy.itemmaster.dto.od0010.od0010DTO">
    <result column="article_id" property="articleId"></result>
    <result column="barcode" property="barcode"></result>
    <result column="article_name" property="productName"></result>
    <result column="sales_unit_id" property="orderUnit"></result>
    <result column="min_order_qty" property="minOrderQty"></result>
    <result column="order_qty" property="orderQty"></result>
    <result column="order_nocharge_qty" property="orderNochargeQty"></result>
    <result column="receive_total_qty" property="receiveTotalQty"></result>
    <result column="receive_qty" property="receiveQty"></result>
    <result column="order_id" property="orderId"></result>
    <result column="order_date" property="orderDate"></result>
    <result column="store_name" property="storeName"></result>
    <result column="vendor_name" property="vendorName"></result>
    <result column="warehouse_name" property="warehouseName"></result>
    <result column="delivery_date" property="deliveryDate"></result>
    <result column="vendor_id" property="vendorId"></result>
    <result column="review_status" property="reviewStatus"></result>
    <result column="vendor_id" property="vendorId"></result>
    <result column="dc_vendor_Id" property="dcVendorId"></result>
    <result column="dc_vendor_name" property="dcvendorName"></result>
    <result column="order_method" property="orderMethod"></result>
    <result column="order_method1" property="orderMethod1"></result>
  </resultMap>
  <select id="getOrderInformation1" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
  SELECT DISTINCT
  A.article_id,
  F.store_cd,
  F.store_name,
  G.vendor_id,
  G.vendor_name,
  A.barcode,
  B.article_name,
  B.sales_unit_id,
  COALESCE(E.min_order_qty,0) as min_order_qty ,
  COALESCE(A.order_qty,0) as order_qty,
  COALESCE(A.order_nocharge_qty,0) as order_nocharge_qty,
  COALESCE(A.receive_qty,0) as receive_qty ,
  D.order_id
  /*A.receive_total_qty*/
  FROM
  OD0010 A,
  MA1100 B,
  CM9060 C,
  OD0000 D,
  MA1110 E,
  MA1000 F,
  MA2000 G
  WHERE
  A.article_id = B.article_id
  AND C.sp_id = '0000'
  AND A.order_id = D.order_id
  AND D.order_differentiate = #{param.orderDifferentiate}
  AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
  /*AND '20200402' BETWEEN B.effective_start_date AND B.effective_end_date*/
  AND B.article_id = E.article_id
  AND B.effective_start_date = E.effective_start_date
  AND A.store_cd = F.store_cd
  AND C.sp_value BETWEEN F.effective_start_date AND F.effective_end_date
  AND A.vendor_id = G.vendor_id
  AND C.sp_value BETWEEN G.effective_start_date AND G.effective_end_date
  <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
    AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
  </if>
  <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
    AND D.delivery_center_id = #{param.dc}
  </if>
  <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
        param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
    <if test="param.optionTime=='orderDate'">
      AND D.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
    </if>
    <if test="param.optionTime=='deliveryDate'">
      AND D.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
    </if>
  </if>
  <if test="param.storeCd!=null and param.storeCd!=''">
    AND D.store_cd = #{param.storeCd}
  </if>
  <if test="param.orderId!=null and param.orderId!=''">
    AND lower(D.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
  </if>
  <if test="param.flg">
    LIMIT ${param.rows} OFFSET ${param.limitStart}
  </if>


</select>

  <select id="getOrderInformationCount1" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultType="int">
    SELECT DISTINCT
    count (A.article_id)
    FROM
    OD0010 A,
    MA1100 B,
    CM9060 C,
    OD0000 D,
    MA1110 E
    WHERE
    A.article_id = B.article_id
    AND C.sp_id = '0000'
    AND A.order_id = D.order_id
    AND D.order_differentiate = #{param.orderDifferentiate}
    AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
    AND B.article_id = E.article_id
    AND B.effective_start_date = E.effective_start_date
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND D.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
        param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND D.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND D.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.storeCd!=null and param.storeCd!=''">
      AND D.store_cd = #{param.storeCd}
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(D.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
  </select>

  <select id="getOrderInformationCount" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultType="int">
    SELECT
      COUNT(1)
    FROM (
      SELECT
        COALESCE( B.order_qty,0) as order_qty ,
        COALESCE( B.order_nocharge_qty,0) as order_nocharge_qty ,
        COALESCE(B.receive_qty,0) as receive_qty,
        A.store_cd, A.order_date, A.order_id, A.order_type AorderType,A.review_status,
        A.vendor_id, A.delivery_date, B.article_id, B.barcode, B.serial_no
      FROM
          OD0000 A, OD0010 B
      WHERE A.order_type = '01'
      AND A.store_cd = B.store_cd
      AND A.order_id = B.order_id
      AND A.order_differentiate = #{param.orderDifferentiate}
      AND A.store_cd IN
      <foreach item="store" index="index" collection="param.stores"
               open="(" separator="," close=")">
        #{store,jdbcType=VARCHAR}
      </foreach>
      <if test="param.orderMethod!=null and param.orderMethod!=''">
        AND A.order_method = #{param.orderMethod}
      </if>
      <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
        AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
      </if>
      <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
        AND A.delivery_center_id = #{param.dc}
      </if>
      <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
            param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
        <if test="param.optionTime=='orderDate'">
          AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
        </if>
        <if test="param.optionTime=='deliveryDate'">
          AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
        </if>
      </if>
      <if test="param.orderId!=null and param.orderId!=''">
        AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
      </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      AND A.review_status=  cast(#{param.reviewStatus}  as NUMERIC )
    </if>
    ) T
    JOIN (
        SELECT article_id, article_name, effective_start_date AS temp1, sales_unit_id FROM MA1100
        WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T3
    ON T.article_id = T3.article_id
  </select>

<!--  <select id="getOrderInformationCount" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultType="int">-->
<!--    SELECT DISTINCT-->
<!--    count (A.order_id)-->
<!--    FROM-->
<!--    OD0010 A,-->
<!--    MA1100 B,-->
<!--    CM9060 C,-->
<!--    OD0000 D,-->
<!--    MA1110 E,-->
<!--    MA1000 F,-->
<!--    MA2000 G-->
<!--    WHERE-->
<!--    A.article_id = B.article_id-->
<!--    AND C.sp_id = '0000'-->
<!--    AND A.order_id = D.order_id-->
<!--    AND D.order_differentiate = #{param.orderDifferentiate}-->
<!--    AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date-->
<!--    /*AND '20200402' BETWEEN B.effective_start_date AND B.effective_end_date*/-->
<!--    AND B.article_id = E.article_id-->
<!--    AND B.effective_start_date = E.effective_start_date-->
<!--    AND A.store_cd = F.store_cd-->
<!--    AND C.sp_value BETWEEN F.effective_start_date AND F.effective_end_date-->
<!--    AND A.vendor_id = G.vendor_id-->
<!--    AND C.sp_value BETWEEN G.effective_start_date AND G.effective_end_date-->
<!--    AND D.store_cd IN-->
<!--    <foreach item="store" index="index" collection="param.stores"-->
<!--             open="(" separator="," close=")">-->
<!--      #{store,jdbcType=VARCHAR}-->
<!--    </foreach>-->
<!--    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">-->
<!--      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))-->
<!--    </if>-->
<!--    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">-->
<!--      AND D.delivery_center_id = #{param.dc}-->
<!--    </if>-->
<!--    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and-->
<!--        param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">-->
<!--      <if test="param.optionTime=='orderDate'">-->
<!--        AND D.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}-->
<!--      </if>-->
<!--      <if test="param.optionTime=='deliveryDate'">-->
<!--        AND D.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}-->
<!--      </if>-->
<!--    </if>-->
<!--    <if test="param.orderId!=null and param.orderId!=''">-->
<!--      AND lower(D.order_id) like lower(CONCAT('%',#{param.orderId},'%'))-->
<!--    </if>-->
<!--  </select>-->

  <select id="getOrderInformation3" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT DISTINCT
    D.order_date,
    D.delivery_date,
    A.article_id,
    F.store_cd,
    F.store_name,
    G.vendor_id,
    G.vendor_name,
    A.barcode,
    B.article_name,
    B.sales_unit_id,
    COALESCE(E.min_order_qty,0) as min_order_qty ,
    COALESCE(A.order_qty,0) as order_qty,
    COALESCE(A.order_nocharge_qty,0) as order_nocharge_qty,
    COALESCE(A.receive_qty,0) as receive_qty ,
    D.order_id
    /*A.receive_total_qty*/
    FROM
    OD0010 A,
    MA1100 B,
    CM9060 C,
    OD0000 D,
    MA1110 E,
    MA1000 F,
    MA2000 G
    WHERE
    A.article_id = B.article_id
    AND C.sp_id = '0000'
    AND A.order_id = D.order_id
    AND D.order_differentiate = #{param.orderDifferentiate}
    AND C.sp_value BETWEEN B.effective_start_date AND B.effective_end_date
    /*AND '20200402' BETWEEN B.effective_start_date AND B.effective_end_date*/
    AND B.article_id = E.article_id
    AND B.effective_start_date = E.effective_start_date
    AND A.store_cd = F.store_cd
    AND C.sp_value BETWEEN F.effective_start_date AND F.effective_end_date
    AND A.vendor_id = G.vendor_id
    AND C.sp_value BETWEEN G.effective_start_date AND G.effective_end_date
    AND D.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND D.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
        param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND D.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND D.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(D.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    LIMIT ${param.rows} OFFSET ${param.limitStart}
  </select>

  <select id="getOrderInformation" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT  distinct
        T.*, COALESCE(T4.min_order_qty,0) as min_order_qty,
        T1.store_name, T2.vendor_id, T2.vendor_name, T3.article_name, T3.sales_unit_id
    FROM (
      SELECT
        COALESCE(B.order_qty,0) as order_qty ,
        COALESCE(B.order_nocharge_qty,0) as order_nocharge_qty ,
        COALESCE(B.receive_qty,0) as receive_qty,
        A.review_status,
        A.store_cd, A.order_date, A.order_id, A.order_type AorderType,
        A.vendor_id, A.delivery_date, B.article_id, B.barcode, B.serial_no,A.order_method
      FROM
        OD0000 A, OD0010 B
      WHERE A.order_type = '01'
      AND A.store_cd = B.store_cd
      AND A.order_id = B.order_id
      AND A.order_differentiate = #{param.orderDifferentiate}
      AND A.store_cd IN
      <foreach item="store" index="index" collection="param.stores"
               open="(" separator="," close=")">
        #{store,jdbcType=VARCHAR}
      </foreach>
      <if test="param.orderMethod!=null and param.orderMethod!=''">
        AND A.order_method = #{param.orderMethod}
      </if>
      <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
        AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
      </if>
      <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
        AND A.delivery_center_id = #{param.dc}
      </if>
      <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
        <if test="param.optionTime=='orderDate'">
          AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
        </if>
        <if test="param.optionTime=='deliveryDate'">
          AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
        </if>
      </if>
      <if test="param.orderId!=null and param.orderId!=''">
        AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
      </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      AND A.review_status=  cast(#{param.reviewStatus}  as NUMERIC )
    </if>
    ) T
    JOIN (
      SELECT article_id, article_name, effective_start_date AS temp1, sales_unit_id FROM MA1100
      WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T3
    ON T.article_id = T3.article_id
    LEFT JOIN (
        SELECT store_cd, store_name, zo_cd FROM MA1000
        WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T1
    ON T.store_cd = T1.store_cd
    LEFT JOIN (
        SELECT vendor_id, vendor_name FROM MA2000
        WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
        SELECT article_id, effective_start_date AS temp2, vendor_id, structure_cd, min_order_qty FROM MA1110
    ) T4
    ON T.article_id = T4.article_id AND T3.temp1 = T4.temp2 AND T1.zo_cd = T4.structure_cd AND T2.vendor_id = T4.vendor_id
    ORDER BY T.delivery_date DESC, T.order_date DESC, T.order_id DESC, T.serial_no
    <if test="param.flg">
      LIMIT ${param.rows} OFFSET ${param.limitStart}
    </if>
  </select>
  <select id="getdirectOrderInformation" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT
    T.*,T2.vendor_name,T3.store_name
    FROM (
    SELECT
    distinct
    store_cd,order_id,order_date,
    case when order_sts='01' then 7 else A.review_status end as review_status,
    vendor_id,delivery_date,A.order_method
    FROM
    OD0000 A
    WHERE A.order_type = '01'
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
        <choose>
          <when test="param.reviewStatus == '7'.toString()">
            AND (A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
            or A.order_sts='01')
          </when>
          <otherwise>
            AND A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
          </otherwise>
        </choose>
    </if>
    <if test="param.vendorId!=null and param.vendorId!=''">
      AND A.vendor_id = #{param.vendorId}
    </if>
    AND A.order_differentiate = #{param.orderDifferentiate}
    ) AS T
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000
    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000) T3
    on T.store_cd=T3.store_cd
    <if test="param.flg">
      LIMIT ${param.rows} OFFSET ${param.limitStart}
    </if>
  </select>
  <select id="getdirectOrderInformationCount" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultType="int">
SELECT COUNT(*)
FROM
    (SELECT
    T.*,T2.vendor_name,T3.store_name
    FROM (
    SELECT
    distinct
    store_cd,order_id,order_date,review_status,vendor_id,delivery_date,A.order_method,A.order_method order_method1
    FROM
    OD0000 A
    WHERE A.order_type = '01'
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND
        #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      <choose>
        <when test="param.reviewStatus == '7'.toString()">
          AND (A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
          or A.order_sts='01')
        </when>
        <otherwise>
          AND A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
        </otherwise>
      </choose>
    </if>
    <if test="param.vendorId!=null and param.vendorId!=''">
      AND A.vendor_id = #{param.vendorId}
    </if>
    AND A.order_differentiate = #{param.orderDifferentiate}
    ) AS T
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000

    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000) T3
    on T.store_cd=T3.store_cd
    )AS T5

  </select>

  <select id="getcdOrderInformation" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT
    T.*,T5.warehouse_name,T3.store_name
    FROM (
    SELECT
    distinct
    store_cd,order_id,order_date,
    case when order_sts='01' then 7 else A.review_status end as review_status,
    vendor_id,delivery_date,A.order_method,A.order_method order_method1
    FROM
    OD0000 A
    WHERE A.order_type = '01'
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>

    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      <choose>
        <when test="param.reviewStatus == '7'.toString()">
          AND (A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
          or A.order_sts='01')
        </when>
        <otherwise>
          AND A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
        </otherwise>
      </choose>
    </if>
    AND A.order_differentiate = #{param.orderDifferentiate}
    ) AS T
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000
    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000) T3
    on T.store_cd=T3.store_cd
    left join(
    Select * from ma5321
    ) T5
    on T.vendor_id=T5.warehouse_no
    <if test="param.flg">
      LIMIT ${param.rows} OFFSET ${param.limitStart}
    </if>
  </select>
  <select id="getcdOrderInformationCount" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultType="int">
    SELECT COUNT(*)
    FROM
    (SELECT
    T.*,T2.vendor_name,T3.store_name
    FROM (
    SELECT
    distinct
    store_cd,order_id,order_date,review_status,vendor_id,delivery_date,A.order_method
    FROM
    OD0000 A
    WHERE A.order_type = '01'
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND
        #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>


    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      <choose>
        <when test="param.reviewStatus == '7'.toString()">
          AND (A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
          or A.order_sts='01')
        </when>
        <otherwise>
          AND A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
        </otherwise>
      </choose>
    </if>
    AND A.order_differentiate = #{param.orderDifferentiate}
    ) AS T
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000

    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000) T3
    on T.store_cd=T3.store_cd
    )AS T5

  </select>


  <select id="getDcOrderInformation" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT
    T.*, COALESCE(T4.min_order_qty,0) as min_order_qty,
    T1.store_name, T2.vendor_id, T2.vendor_name, T3.article_name, T3.sales_unit_id
    FROM (
    SELECT
    B.vendor_Id As dc_vendor_Id,
    COALESCE(B.order_qty,0) as order_qty ,
    COALESCE(B.order_nocharge_qty,0) as order_nocharge_qty ,
    COALESCE(B.receive_qty,0) as receive_qty,
    A.review_status,
    A.store_cd, A.order_date, A.order_id, A.order_type AorderType,
    A.vendor_id, A.delivery_date, B.article_id, B.barcode, B.serial_no
    FROM
    OD0000 A, OD0010 B
    WHERE A.order_type = '01'
    AND A.store_cd = B.store_cd
    AND A.order_id = B.order_id
    AND A.order_differentiate = #{param.orderDifferentiate}
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      AND A.review_status=  cast(#{param.reviewStatus}  as NUMERIC )
    </if>
    ) T
    JOIN (
    SELECT article_id, article_name, effective_start_date AS temp1, sales_unit_id FROM MA1100
    WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T3
    ON T.article_id = T3.article_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000
    WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T1
    ON T.store_cd = T1.store_cd
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000
    WHERE #{param.businessDate} BETWEEN effective_start_date AND effective_end_date
    ) T2
    ON T.dc_vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT article_id, effective_start_date AS temp2, vendor_id, structure_cd, min_order_qty FROM MA1110
    ) T4
    ON T.article_id = T4.article_id AND T3.temp1 = T4.temp2 AND T1.zo_cd = T4.structure_cd AND T2.vendor_id = T4.vendor_id
    ORDER BY T.delivery_date DESC, T.order_date DESC, T.order_id DESC, T.serial_no
    <if test="param.flg">
      LIMIT ${param.rows} OFFSET ${param.limitStart}
    </if>
  </select>
  <select id="selectByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010CExample"
          resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="needFoundRows">
      SQL_CALC_FOUND_ROWS
    </if>
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List"/>
    from od0010
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010CKey"
          resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List"/>
    from od0010
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010CKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from od0010
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010CExample">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from od0010
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010C">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into od0010 (store_cd, order_id, serial_no,
    article_id, barcode, vendor_id,
    promotion_id, order_unit, order_qty,
    order_nocharge_qty, order_price, order_amt,
    order_amt_notax, order_tax, receive_price,
    receive_qty, receive_nocharge_qty, receive_total_qty,
    receive_total_amt, receive_total_amt_notax,
    receive_tax, upload_flg, upload_date,
    create_user_id, create_ymd, create_hms,
    update_user_id, update_ymd, update_hms,
    update_screen_id, update_ip_address, nr_update_flg,
    nr_ymd, nr_hms, reason_id, adjust_amt,
    adjust_qty, order_date, delivery_date,
    product_name, order_specifi, lowest_order,
    goods_quantity, receiving_differences)
    values (#{storeCd,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR},
    #{articleId,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{vendorId,jdbcType=CHAR},
    #{promotionId,jdbcType=VARCHAR}, #{orderUnit,jdbcType=VARCHAR}, #{orderQty,jdbcType=NUMERIC},
    #{orderNochargeQty,jdbcType=NUMERIC}, #{orderPrice,jdbcType=NUMERIC}, #{orderAmt,jdbcType=NUMERIC},
    #{orderAmtNotax,jdbcType=NUMERIC}, #{orderTax,jdbcType=NUMERIC}, #{receivePrice,jdbcType=NUMERIC},
    #{receiveQty,jdbcType=NUMERIC}, #{receiveNoChargeQty,jdbcType=NUMERIC}, #{receiveTotalQty,jdbcType=NUMERIC},
    #{receiveTotalAmt,jdbcType=NUMERIC}, #{receiveTotalAmtNotax,jdbcType=NUMERIC},
    #{receiveTax,jdbcType=NUMERIC}, #{uploadFlg,jdbcType=CHAR}, #{uploadDate,jdbcType=CHAR},
    #{createUserId,jdbcType=VARCHAR}, #{createYmd,jdbcType=CHAR}, #{createHms,jdbcType=CHAR},
    #{updateUserId,jdbcType=VARCHAR}, #{updateYmd,jdbcType=CHAR}, #{updateHms,jdbcType=CHAR},
    #{updateScreenId,jdbcType=VARCHAR}, #{updateIpAddress,jdbcType=VARCHAR}, #{nrUpdateFlg,jdbcType=CHAR},
    #{nrYmd,jdbcType=CHAR}, #{nrHms,jdbcType=CHAR}, #{reasonId,jdbcType=VARCHAR}, #{adjustAmt,jdbcType=NUMERIC},
    #{adjustQty,jdbcType=NUMERIC}, #{orderDate,jdbcType=CHAR}, #{deliveryDate,jdbcType=CHAR},
    #{productName,jdbcType=CHAR}, #{orderSpecifi,jdbcType=CHAR}, #{lowestOrder,jdbcType=CHAR},
    #{gQuantity,jdbcType=CHAR}, #{receivingDifferences,jdbcType=CHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010C">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into od0010
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="storeCd != null">
        store_cd,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="serialNo != null">
        serial_no,
      </if>
      <if test="articleId != null">
        article_id,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="vendorId != null">
        vendor_id,
      </if>
      <if test="promotionId != null">
        promotion_id,
      </if>
      <if test="orderUnit != null">
        order_unit,
      </if>
      <if test="orderQty != null">
        order_qty,
      </if>
      <if test="orderNochargeQty != null">
        order_nocharge_qty,
      </if>
      <if test="orderPrice != null">
        order_price,
      </if>
      <if test="orderAmt != null">
        order_amt,
      </if>
      <if test="orderAmtNotax != null">
        order_amt_notax,
      </if>
      <if test="orderTax != null">
        order_tax,
      </if>
      <if test="receivePrice != null">
        receive_price,
      </if>
      <if test="receiveQty != null">
        receive_qty,
      </if>
      <if test="receiveNoChargeQty != null">
        receive_nocharge_qty,
      </if>
      <if test="receiveTotalQty != null">
        receive_total_qty,
      </if>
      <if test="receiveTotalAmt != null">
        receive_total_amt,
      </if>
      <if test="receiveTotalAmtNotax != null">
        receive_total_amt_notax,
      </if>
      <if test="receiveTax != null">
        receive_tax,
      </if>
      <if test="uploadFlg != null">
        upload_flg,
      </if>
      <if test="uploadDate != null">
        upload_date,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createYmd != null">
        create_ymd,
      </if>
      <if test="createHms != null">
        create_hms,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateYmd != null">
        update_ymd,
      </if>
      <if test="updateHms != null">
        update_hms,
      </if>
      <if test="updateScreenId != null">
        update_screen_id,
      </if>
      <if test="updateIpAddress != null">
        update_ip_address,
      </if>
      <if test="nrUpdateFlg != null">
        nr_update_flg,
      </if>
      <if test="nrYmd != null">
        nr_ymd,
      </if>
      <if test="nrHms != null">
        nr_hms,
      </if>
      <if test="reasonId != null">
        reason_id,
      </if>
      <if test="adjustAmt != null">
        adjust_amt,
      </if>
      <if test="adjustQty != null">
        adjust_qty,
      </if>
      <if test="orderDate != null">
        order_date,
      </if>
      <if test="deliveryDate != null">
        delivery_date,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="orderSpecifi != null">
        order_specifi,
      </if>
      <if test="lowestOrder != null">
        lowest_order,
      </if>
      <if test="gQuantity != null">
        goods_quantity,
      </if>
      <if test="receivingDifferences != null">
        receiving_differences,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="storeCd != null">
        #{storeCd,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null">
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null">
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null">
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null">
        #{vendorId,jdbcType=CHAR},
      </if>
      <if test="promotionId != null">
        #{promotionId,jdbcType=VARCHAR},
      </if>
      <if test="orderUnit != null">
        #{orderUnit,jdbcType=VARCHAR},
      </if>
      <if test="orderQty != null">
        #{orderQty,jdbcType=NUMERIC},
      </if>
      <if test="orderNochargeQty != null">
        #{orderNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="orderPrice != null">
        #{orderPrice,jdbcType=NUMERIC},
      </if>
      <if test="orderAmt != null">
        #{orderAmt,jdbcType=NUMERIC},
      </if>
      <if test="orderAmtNotax != null">
        #{orderAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="orderTax != null">
        #{orderTax,jdbcType=NUMERIC},
      </if>
      <if test="receivePrice != null">
        #{receivePrice,jdbcType=NUMERIC},
      </if>
      <if test="receiveQty != null">
        #{receiveQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveNoChargeQty != null">
        #{receiveNoChargeQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalQty != null">
        #{receiveTotalQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmt != null">
        #{receiveTotalAmt,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmtNotax != null">
        #{receiveTotalAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="receiveTax != null">
        #{receiveTax,jdbcType=NUMERIC},
      </if>
      <if test="uploadFlg != null">
        #{uploadFlg,jdbcType=CHAR},
      </if>
      <if test="uploadDate != null">
        #{uploadDate,jdbcType=CHAR},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createYmd != null">
        #{createYmd,jdbcType=CHAR},
      </if>
      <if test="createHms != null">
        #{createHms,jdbcType=CHAR},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateYmd != null">
        #{updateYmd,jdbcType=CHAR},
      </if>
      <if test="updateHms != null">
        #{updateHms,jdbcType=CHAR},
      </if>
      <if test="updateScreenId != null">
        #{updateScreenId,jdbcType=VARCHAR},
      </if>
      <if test="updateIpAddress != null">
        #{updateIpAddress,jdbcType=VARCHAR},
      </if>
      <if test="nrUpdateFlg != null">
        #{nrUpdateFlg,jdbcType=CHAR},
      </if>
      <if test="nrYmd != null">
        #{nrYmd,jdbcType=CHAR},
      </if>
      <if test="nrHms != null">
        #{nrHms,jdbcType=CHAR},
      </if>
      <if test="reasonId != null">
        #{reasonId,jdbcType=VARCHAR},
      </if>
      <if test="adjustAmt != null">
        #{adjustAmt,jdbcType=NUMERIC},
      </if>
      <if test="adjustQty != null">
        #{adjustQty,jdbcType=NUMERIC},
      </if>
      <if test="orderDate != null">
        #{orderDate,jdbcType=CHAR},
      </if>
      <if test="deliveryDate != null">
        #{deliveryDate,jdbcType=CHAR},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=CHAR},
      </if>
      <if test="orderSpecifi != null">
        #{orderSpecifi,jdbcType=CHAR},
      </if>
      <if test="lowestOrder != null">
        #{lowestOrder,jdbcType=CHAR},
      </if>
      <if test="gQuantity != null">
        #{gQuantity,jdbcType=CHAR},
      </if>
      <if test="receivingDifferences != null">
        #{receivingDifferences,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010CExample"
          resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from od0010
    <if test="_parameter != null">
      <include refid="Example_Where_Clause"/>
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    <set>
      <if test="record.storeCd != null">
        store_cd = #{record.storeCd,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNo != null">
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.articleId != null">
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null">
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.vendorId != null">
        vendor_id = #{record.vendorId,jdbcType=CHAR},
      </if>
      <if test="record.promotionId != null">
        promotion_id = #{record.promotionId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderUnit != null">
        order_unit = #{record.orderUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.orderQty != null">
        order_qty = #{record.orderQty,jdbcType=NUMERIC},
      </if>
      <if test="record.orderNochargeQty != null">
        order_nocharge_qty = #{record.orderNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="record.orderPrice != null">
        order_price = #{record.orderPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.orderAmt != null">
        order_amt = #{record.orderAmt,jdbcType=NUMERIC},
      </if>
      <if test="record.orderAmtNotax != null">
        order_amt_notax = #{record.orderAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="record.orderTax != null">
        order_tax = #{record.orderTax,jdbcType=NUMERIC},
      </if>
      <if test="record.receivePrice != null">
        receive_price = #{record.receivePrice,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveQty != null">
        receive_qty = #{record.receiveQty,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveNoChargeQty != null">
        receive_nocharge_qty = #{record.receiveNoChargeQty,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTotalQty != null">
        receive_total_qty = #{record.receiveTotalQty,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTotalAmt != null">
        receive_total_amt = #{record.receiveTotalAmt,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTotalAmtNotax != null">
        receive_total_amt_notax = #{record.receiveTotalAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTax != null">
        receive_tax = #{record.receiveTax,jdbcType=NUMERIC},
      </if>
      <if test="record.uploadFlg != null">
        upload_flg = #{record.uploadFlg,jdbcType=CHAR},
      </if>
      <if test="record.uploadDate != null">
        upload_date = #{record.uploadDate,jdbcType=CHAR},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createYmd != null">
        create_ymd = #{record.createYmd,jdbcType=CHAR},
      </if>
      <if test="record.createHms != null">
        create_hms = #{record.createHms,jdbcType=CHAR},
      </if>
      <if test="record.updateUserId != null">
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateYmd != null">
        update_ymd = #{record.updateYmd,jdbcType=CHAR},
      </if>
      <if test="record.updateHms != null">
        update_hms = #{record.updateHms,jdbcType=CHAR},
      </if>
      <if test="record.updateScreenId != null">
        update_screen_id = #{record.updateScreenId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateIpAddress != null">
        update_ip_address = #{record.updateIpAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.nrUpdateFlg != null">
        nr_update_flg = #{record.nrUpdateFlg,jdbcType=CHAR},
      </if>
      <if test="record.nrYmd != null">
        nr_ymd = #{record.nrYmd,jdbcType=CHAR},
      </if>
      <if test="record.nrHms != null">
        nr_hms = #{record.nrHms,jdbcType=CHAR},
      </if>
      <if test="record.reasonId != null">
        reason_id = #{record.reasonId,jdbcType=VARCHAR},
      </if>
      <if test="record.adjustAmt != null">
        adjust_amt = #{record.adjustAmt,jdbcType=NUMERIC},
      </if>
      <if test="record.adjustQty != null">
        adjust_qty = #{record.adjustQty,jdbcType=NUMERIC},
      </if>
      <if test="record.orderDate != null">
        order_date = #{record.orderDate,jdbcType=CHAR},
      </if>
      <if test="record.deliveryDate != null">
        delivery_date = #{record.deliveryDate,jdbcType=CHAR},
      </if>
      <if test="record.productName != null">
        product_name = #{record.productName,jdbcType=CHAR},
      </if>
      <if test="record.orderSpecifi != null">
        order_specifi = #{record.orderSpecifi,jdbcType=CHAR},
      </if>
      <if test="record.lowestOrder != null">
        lowest_order = #{record.lowestOrder,jdbcType=CHAR},
      </if>
      <if test="record.gQuantity != null">
        goods_quantity = #{record.gQuantity,jdbcType=CHAR},
      </if>
      <if test="record.receivingDifferences != null">
        receiving_differences = #{record.receivingDifferences,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    set store_cd = #{record.storeCd,jdbcType=VARCHAR},
    order_id = #{record.orderId,jdbcType=VARCHAR},
    serial_no = #{record.serialNo,jdbcType=VARCHAR},
    article_id = #{record.articleId,jdbcType=VARCHAR},
    barcode = #{record.barcode,jdbcType=VARCHAR},
    vendor_id = #{record.vendorId,jdbcType=CHAR},
    promotion_id = #{record.promotionId,jdbcType=VARCHAR},
    order_unit = #{record.orderUnit,jdbcType=VARCHAR},
    order_qty = #{record.orderQty,jdbcType=NUMERIC},
    order_nocharge_qty = #{record.orderNochargeQty,jdbcType=NUMERIC},
    order_price = #{record.orderPrice,jdbcType=NUMERIC},
    order_amt = #{record.orderAmt,jdbcType=NUMERIC},
    order_amt_notax = #{record.orderAmtNotax,jdbcType=NUMERIC},
    order_tax = #{record.orderTax,jdbcType=NUMERIC},
    receive_price = #{record.receivePrice,jdbcType=NUMERIC},
    receive_qty = #{record.receiveQty,jdbcType=NUMERIC},
    receive_nocharge_qty = #{record.receiveNoChargeQty,jdbcType=NUMERIC},
    receive_total_qty = #{record.receiveTotalQty,jdbcType=NUMERIC},
    receive_total_amt = #{record.receiveTotalAmt,jdbcType=NUMERIC},
    receive_total_amt_notax = #{record.receiveTotalAmtNotax,jdbcType=NUMERIC},
    receive_tax = #{record.receiveTax,jdbcType=NUMERIC},
    upload_flg = #{record.uploadFlg,jdbcType=CHAR},
    upload_date = #{record.uploadDate,jdbcType=CHAR},
    create_user_id = #{record.createUserId,jdbcType=VARCHAR},
    create_ymd = #{record.createYmd,jdbcType=CHAR},
    create_hms = #{record.createHms,jdbcType=CHAR},
    update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
    update_ymd = #{record.updateYmd,jdbcType=CHAR},
    update_hms = #{record.updateHms,jdbcType=CHAR},
    update_screen_id = #{record.updateScreenId,jdbcType=VARCHAR},
    update_ip_address = #{record.updateIpAddress,jdbcType=VARCHAR},
    nr_update_flg = #{record.nrUpdateFlg,jdbcType=CHAR},
    nr_ymd = #{record.nrYmd,jdbcType=CHAR},
    nr_hms = #{record.nrHms,jdbcType=CHAR},
    reason_id = #{record.reasonId,jdbcType=VARCHAR},
    adjust_amt = #{record.adjustAmt,jdbcType=NUMERIC},
    adjust_qty = #{record.adjustQty,jdbcType=NUMERIC},
    order_date = #{record.orderDate,jdbcType=CHAR},
    delivery_date = #{record.deliveryDate,jdbcType=CHAR},
    product_name = #{record.productName,jdbcType=CHAR},
    order_specifi = #{record.orderSpecifi,jdbcType=CHAR},
    lowest_order = #{record.lowestOrder,jdbcType=CHAR},
    goods_quantity = #{record.gQuantity,jdbcType=CHAR},
    receiving_differences = #{record.receivingDifferences,jdbcType=CHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause"/>
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010C">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    <set>
      <if test="barcode != null">
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null">
        vendor_id = #{vendorId,jdbcType=CHAR},
      </if>
      <if test="promotionId != null">
        promotion_id = #{promotionId,jdbcType=VARCHAR},
      </if>
      <if test="orderUnit != null">
        order_unit = #{orderUnit,jdbcType=VARCHAR},
      </if>
      <if test="orderQty != null">
        order_qty = #{orderQty,jdbcType=NUMERIC},
      </if>
      <if test="orderNochargeQty != null">
        order_nocharge_qty = #{orderNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="orderPrice != null">
        order_price = #{orderPrice,jdbcType=NUMERIC},
      </if>
      <if test="orderAmt != null">
        order_amt = #{orderAmt,jdbcType=NUMERIC},
      </if>
      <if test="orderAmtNotax != null">
        order_amt_notax = #{orderAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="orderTax != null">
        order_tax = #{orderTax,jdbcType=NUMERIC},
      </if>
      <if test="receivePrice != null">
        receive_price = #{receivePrice,jdbcType=NUMERIC},
      </if>
      <if test="receiveQty != null">
        receive_qty = #{receiveQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveNoChargeQty != null">
        receive_nocharge_qty = #{receiveNoChargeQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalQty != null">
        receive_total_qty = #{receiveTotalQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmt != null">
        receive_total_amt = #{receiveTotalAmt,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmtNotax != null">
        receive_total_amt_notax = #{receiveTotalAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="receiveTax != null">
        receive_tax = #{receiveTax,jdbcType=NUMERIC},
      </if>
      <if test="uploadFlg != null">
        upload_flg = #{uploadFlg,jdbcType=CHAR},
      </if>
      <if test="uploadDate != null">
        upload_date = #{uploadDate,jdbcType=CHAR},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createYmd != null">
        create_ymd = #{createYmd,jdbcType=CHAR},
      </if>
      <if test="createHms != null">
        create_hms = #{createHms,jdbcType=CHAR},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateYmd != null">
        update_ymd = #{updateYmd,jdbcType=CHAR},
      </if>
      <if test="updateHms != null">
        update_hms = #{updateHms,jdbcType=CHAR},
      </if>
      <if test="updateScreenId != null">
        update_screen_id = #{updateScreenId,jdbcType=VARCHAR},
      </if>
      <if test="updateIpAddress != null">
        update_ip_address = #{updateIpAddress,jdbcType=VARCHAR},
      </if>
      <if test="nrUpdateFlg != null">
        nr_update_flg = #{nrUpdateFlg,jdbcType=CHAR},
      </if>
      <if test="nrYmd != null">
        nr_ymd = #{nrYmd,jdbcType=CHAR},
      </if>
      <if test="nrHms != null">
        nr_hms = #{nrHms,jdbcType=CHAR},
      </if>
      <if test="reasonId != null">
        reason_id = #{reasonId,jdbcType=VARCHAR},
      </if>
      <if test="adjustAmt != null">
        adjust_amt = #{adjustAmt,jdbcType=NUMERIC},
      </if>
      <if test="adjustQty != null">
        adjust_qty = #{adjustQty,jdbcType=NUMERIC},
      </if>
      <if test="orderDate != null">
        order_date = #{orderDate,jdbcType=CHAR},
      </if>
      <if test="deliveryDate != null">
        delivery_date = #{deliveryDate,jdbcType=CHAR},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=CHAR},
      </if>
      <if test="orderSpecifi != null">
        order_specifi = #{orderSpecifi,jdbcType=CHAR},
      </if>
      <if test="lowestOrder != null">
        lowest_order = #{lowestOrder,jdbcType=CHAR},
      </if>
      <if test="gQuantity != null">
        goods_quantity = #{gQuantity,jdbcType=CHAR},
      </if>
      <if test="receivingDifferences != null">
        receiving_differences = #{receivingDifferences,jdbcType=CHAR},
      </if>
    </set>
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.OD0010C">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    set barcode = #{barcode,jdbcType=VARCHAR},
    vendor_id = #{vendorId,jdbcType=CHAR},
    promotion_id = #{promotionId,jdbcType=VARCHAR},
    order_unit = #{orderUnit,jdbcType=VARCHAR},
    order_qty = #{orderQty,jdbcType=NUMERIC},
    order_nocharge_qty = #{orderNochargeQty,jdbcType=NUMERIC},
    order_price = #{orderPrice,jdbcType=NUMERIC},
    order_amt = #{orderAmt,jdbcType=NUMERIC},
    order_amt_notax = #{orderAmtNotax,jdbcType=NUMERIC},
    order_tax = #{orderTax,jdbcType=NUMERIC},
    receive_price = #{receivePrice,jdbcType=NUMERIC},
    receive_qty = #{receiveQty,jdbcType=NUMERIC},
    receive_nocharge_qty = #{receiveNoChargeQty,jdbcType=NUMERIC},
    receive_total_qty = #{receiveTotalQty,jdbcType=NUMERIC},
    receive_total_amt = #{receiveTotalAmt,jdbcType=NUMERIC},
    receive_total_amt_notax = #{receiveTotalAmtNotax,jdbcType=NUMERIC},
    receive_tax = #{receiveTax,jdbcType=NUMERIC},
    upload_flg = #{uploadFlg,jdbcType=CHAR},
    upload_date = #{uploadDate,jdbcType=CHAR},
    create_user_id = #{createUserId,jdbcType=VARCHAR},
    create_ymd = #{createYmd,jdbcType=CHAR},
    create_hms = #{createHms,jdbcType=CHAR},
    update_user_id = #{updateUserId,jdbcType=VARCHAR},
    update_ymd = #{updateYmd,jdbcType=CHAR},
    update_hms = #{updateHms,jdbcType=CHAR},
    update_screen_id = #{updateScreenId,jdbcType=VARCHAR},
    update_ip_address = #{updateIpAddress,jdbcType=VARCHAR},
    nr_update_flg = #{nrUpdateFlg,jdbcType=CHAR},
    nr_ymd = #{nrYmd,jdbcType=CHAR},
    nr_hms = #{nrHms,jdbcType=CHAR},
    reason_id = #{reasonId,jdbcType=VARCHAR},
    adjust_amt = #{adjustAmt,jdbcType=NUMERIC},
    adjust_qty = #{adjustQty,jdbcType=NUMERIC},
    order_date = #{orderDate,jdbcType=CHAR},
    delivery_date = #{deliveryDate,jdbcType=CHAR},
    product_name = #{productName,jdbcType=CHAR},
    order_specifi = #{orderSpecifi,jdbcType=CHAR},
    lowest_order = #{lowestOrder,jdbcType=CHAR},
    goods_quantity = #{gQuantity,jdbcType=CHAR},
    receiving_differences = #{receivingDifferences,jdbcType=CHAR}
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <select id="countLastSelect" resultType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select FOUND_ROWS()
  </select>


  <select id="selectOrderByCondition" resultType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010DTO">
    select * from od0010 where od0010.order_date BETWEEN #{startDate,jdbcType=VARCHAR}  and #{endDate,jdbcType=VARCHAR}
  </select>

  <select id="selectOrderByConditionAll" resultType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010DTO">
    select * from od0010
    <if test="optionTime=='orderDate'">
      where od0010.order_date
      BETWEEN #{startDate,jdbcType=VARCHAR} and #{endDate,jdbcType=VARCHAR}
    </if>
    <if test="optionTime=='deliveryDate'">
      where od0010.delivery_date
      BETWEEN #{startDate,jdbcType=VARCHAR} and #{endDate,jdbcType=VARCHAR}
    </if>
  </select>


  <select id="selectAll" resultType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010DTO">

  select *  from od0010

</select>

  <select id="getSupplierOrderPrintInformation" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT
    T.*,T2.vendor_name,T3.store_name
    FROM (
    SELECT
    distinct
    store_cd,order_id,order_date,review_status,vendor_id,delivery_date,A.order_method
    FROM
    OD0000 A
    WHERE A.order_type = '01'
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      AND A.review_status= cast(#{param.reviewStatus}  as NUMERIC )
    </if>
    AND A.order_differentiate = '0'
    ) AS T
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000
    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000) T3
    on T.store_cd=T3.store_cd
  </select>

  <select id="getDCOrderPrintInformation" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="itemResult">
    SELECT
    T.*,T5.warehouse_name,T3.store_name
    FROM (
    SELECT
    distinct
    store_cd,order_id,order_date,A.review_status,vendor_id,delivery_date,A.order_method
    FROM
    OD0000 A
    WHERE A.order_type = '01'
    AND A.store_cd IN
    <foreach item="store" index="index" collection="param.stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="param.orderMethod!=null and param.orderMethod!=''">
      AND A.order_method = #{param.orderMethod}
    </if>
    <if test="param.vendorId!=null and param.vendorId!='' and param.orderDifferentiate=='1'.toString()">
      AND lower(A.vendor_id) like lower(CONCAT('%',#{param.vendorId},'%'))
    </if>
    <if test="param.dc!=null and param.dc!='' and param.orderDifferentiate=='2'.toString()">
      AND A.delivery_center_id = #{param.dc}
    </if>
    <if test="param.orderDirectSupplierDateStartDate!=null and param.orderDirectSupplierDateStartDate!='' and
          param.orderDirectSupplierDateEndDate!=null and param.orderDirectSupplierDateEndDate!=''">
      <if test="param.optionTime=='orderDate'">
        AND A.order_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
      <if test="param.optionTime=='deliveryDate'">
        AND A.delivery_date BETWEEN #{param.orderDirectSupplierDateStartDate} AND #{param.orderDirectSupplierDateEndDate}
      </if>
    </if>
    <if test="param.orderId!=null and param.orderId!=''">
      AND lower(A.order_id) like lower(CONCAT('%',#{param.orderId},'%'))
    </if>
    <if test="param.reviewStatus!=null and param.reviewStatus!=''">
      AND A.review_status=  cast(#{param.reviewStatus}  as NUMERIC )
    </if>
    AND A.order_differentiate = #{param.orderDifferentiate}
    ) AS T
    LEFT JOIN (
    SELECT vendor_id, vendor_name FROM MA2000
    ) T2
    ON T.vendor_id = T2.vendor_id
    LEFT JOIN (
    SELECT store_cd, store_name, zo_cd FROM MA1000) T3
    on T.store_cd=T3.store_cd
    left join(
    Select * from ma5321
    ) T5
    on T.vendor_id=T5.warehouse_no
  </select>


  <select id="getOrderDetailList" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultMap="BaseResultMap">
        SELECT DISTINCT
            od0010.barcode,
            od0010.article_id,
            ma1100.article_name,
            od0010.vendor_id,
            od0010.order_unit purchase_unit_id,
            od0010.order_price,
            ma1100.converter,
            ma1100.spec,
           COALESCE(receive_qty,0) as receive_qty,
            ma1110.order_batch_qty,
            ma1110.min_order_amt_tax,/*最低订货金额*/
    /*--    ma1110.min_order_qty,*/
        COALESCE(min_order_qty,0) as min_order_qty,
        COALESCE(dc_m_order_qty,0) as dc_m_order_qty,
            ma1110.order_tax_type_cd,/*税率cd*/
            ma1100.min_display_qty,
            coalesce(ma8070.soq,0 ) AS auto_order_qty,
            od0010.order_unit AS unit_id,
            ma0220.unit_name,
            od0010.order_qty AS order_qty,
            od0010.order_nocharge_qty,
           coalesce(ma8070.psd,0 ) AS psd,
            od0010.order_amt AS order_total_amt
        FROM
            ma1000,
            ma1100,
            ma1110,
            od0010 LEFT JOIN sk0000_today on
            od0010.article_id = sk0000_today.article_id
            AND sk0000_today.store_cd = #{param.storeCd,jdbcType=VARCHAR}
            AND sk0000_today.store_cd = od0010.store_cd
            AND sk0000_today.effective_date = #{param.orderDate,jdbcType=VARCHAR}
            LEFT JOIN ma0220 ON od0010.order_unit = ma0220.unit_id
            LEFT JOIN ma8070 ON ma8070.store_cd = #{param.storeCd}
            AND ma8070.article_id = od0010.article_id

        WHERE
            ma1100.article_id = od0010.article_id
            AND ma1000.store_cd = od0010.store_cd
            AND #{param.orderDate,jdbcType=VARCHAR} BETWEEN ma1000.effective_start_date
            AND ma1000.effective_end_date
            AND #{param.orderDate,jdbcType=VARCHAR} BETWEEN ma1100.effective_start_date
            AND ma1100.effective_end_date
            AND ma1100.article_id = ma1110.article_id
    /*--     AND ma1100.effective_start_date = ma1110.effective_start_date*/
            AND ma1110.structure_cd = (
                select admin_structure_cd from MA0020 where structure_cd =
                (SELECT admin_structure_cd FROM MA0020 WHERE structure_cd = od0010.store_cd and effective_sts = '10') and effective_sts = '10'
                )
            AND od0010.vendor_id = ma1110.vendor_id
    /*--     AND ma1110.ma_cd = ma1000.ma_cd*/
            AND od0010.order_id =#{param.orderId,jdbcType=VARCHAR}
        ORDER BY
            od0010.article_id ASC;
    </select>

  <select id="getOrderDetailListCount" parameterType="cn.com.bbut.iy.itemmaster.dto.od0010.od0010ParamDTO" resultType="INT">
    SELECT COUNT (*)
    FROM
    (   SELECT DISTINCT

            od0010.barcode,
            od0010.article_id,
            ma1100.article_name,
            od0010.vendor_id,
            od0010.order_unit purchase_unit_id,
            od0010.order_price,
            ma1100.converter,
            ma1100.spec,
            ma1110.order_batch_qty,
            ma1110.min_order_amt_tax,/*最低订货金额*/
            ma1110.min_order_qty,
            ma1110.order_tax_type_cd,/*税率cd*/
            ma1100.min_display_qty,
             coalesce(ma8070.soq,0 ) AS auto_order_qty,
            od0010.order_unit AS unit_id,
            ma0220.unit_name,
            od0010.order_qty AS order_qty,
            od0010.order_nocharge_qty,
            ( SELECT ma8070.psd ma8070 FROM ma8070 WHERE ma8070.store_cd = #{param.storeCd,jdbcType=VARCHAR} AND ma8070.article_id = od0010.article_id ) AS psd,
            od0010.order_amt AS order_total_amt
        FROM
            ma1000,
            ma1100,
            ma1110,
            od0010 LEFT JOIN sk0000_today on
            od0010.article_id = sk0000_today.article_id
            AND sk0000_today.store_cd = #{param.storeCd,jdbcType=VARCHAR}
            AND sk0000_today.store_cd = od0010.store_cd
            AND sk0000_today.effective_date = #{param.orderDate,jdbcType=VARCHAR}
            LEFT JOIN ma0220 ON od0010.order_unit = ma0220.unit_id
            LEFT JOIN ma8070 ON ma8070.store_cd = #{param.storeCd}
            AND ma8070.article_id = od0010.article_id
        WHERE
            ma1100.article_id = od0010.article_id
            AND ma1000.store_cd = od0010.store_cd
            AND #{param.orderDate,jdbcType=VARCHAR} BETWEEN ma1000.effective_start_date
            AND ma1000.effective_end_date
            AND #{param.orderDate,jdbcType=VARCHAR} BETWEEN ma1100.effective_start_date
            AND ma1100.effective_end_date
            AND ma1100.article_id = ma1110.article_id
--             AND ma1100.effective_start_date = ma1110.effective_start_date
            AND ma1110.structure_cd = (
                select admin_structure_cd from MA0020 where structure_cd =
                (SELECT admin_structure_cd FROM MA0020 WHERE structure_cd = od0010.store_cd and effective_sts = '10') and effective_sts = '10'
                )
            AND od0010.vendor_id = ma1110.vendor_id
--             AND ma1110.ma_cd = ma1000.ma_cd
            AND od0010.order_id =#{param.orderId,jdbcType=VARCHAR}
        ORDER BY
            od0010.article_id ASC
            ) AS D
    </select>

  <select id="selectList" resultType="cn.com.bbut.iy.itemmaster.dto.base.AutoCompleteDTO">
    SELECT distinct ma.vendor_id k, CONCAT(ma.vendor_id,' ',ma.vendor_name) AS v
    FROM ma2000 ma,od0000 od
    WHERE #{businessDate,jdbcType=VARCHAR} BETWEEN ma.EFFECTIVE_START_DATE AND ma.EFFECTIVE_END_DATE
    and od.order_type = '01'
    and od.order_differentiate = '0'
    and od.vendor_id = ma.vendor_id
    <if test="v!=null and v!=''">
      AND (
      lower(ma.vendor_id) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      OR lower(ma.vendor_name) like lower(CONCAT('%',#{v,jdbcType=VARCHAR},'%'))
      )
    </if>
    ORDER BY ma.vendor_id
  </select>
</mapper>