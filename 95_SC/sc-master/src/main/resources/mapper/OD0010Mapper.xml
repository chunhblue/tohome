<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.com.bbut.iy.itemmaster.dao.OD0010Mapper" >
  <resultMap id="BaseResultMap" type="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="store_cd" property="storeCd" jdbcType="VARCHAR" />
    <id column="order_id" property="orderId" jdbcType="VARCHAR" />
    <id column="serial_no" property="serialNo" jdbcType="VARCHAR" />
    <id column="article_id" property="articleId" jdbcType="VARCHAR" />
    <id column="article_name" property="articleName" jdbcType="VARCHAR" />
    <result column="barcode" property="barcode" jdbcType="VARCHAR" />
    <result column="vendor_id" property="vendorId" jdbcType="CHAR" />
    <result column="promotion_id" property="promotionId" jdbcType="VARCHAR" />
    <result column="order_unit" property="orderUnit" jdbcType="VARCHAR" />
    <result column="order_qty" property="orderQty" jdbcType="NUMERIC" />
    <result column="order_nocharge_qty" property="orderNochargeQty" jdbcType="NUMERIC" />
    <result column="order_price" property="orderPrice" jdbcType="NUMERIC" />
    <result column="order_amt" property="orderAmt" jdbcType="NUMERIC" />
    <result column="order_amt_notax" property="orderAmtNotax" jdbcType="NUMERIC" />
    <result column="order_tax" property="orderTax" jdbcType="NUMERIC" />
    <result column="receive_price" property="receivePrice" jdbcType="NUMERIC" />
    <result column="receive_qty" property="receiveQty" jdbcType="NUMERIC" />
    <result column="receive_nocharge_qty" property="receiveNochargeQty" jdbcType="NUMERIC" />
    <result column="receive_total_qty" property="receiveTotalQty" jdbcType="NUMERIC" />
    <result column="receive_total_amt" property="receiveTotalAmt" jdbcType="NUMERIC" />
    <result column="receive_total_amt_notax" property="receiveTotalAmtNotax" jdbcType="NUMERIC" />
    <result column="receive_tax" property="receiveTax" jdbcType="NUMERIC" />
    <result column="upload_flg" property="uploadFlg" jdbcType="CHAR" />
    <result column="upload_date" property="uploadDate" jdbcType="CHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_ymd" property="createYmd" jdbcType="CHAR" />
    <result column="create_hms" property="createHms" jdbcType="CHAR" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="update_ymd" property="updateYmd" jdbcType="CHAR" />
    <result column="update_hms" property="updateHms" jdbcType="CHAR" />
    <result column="update_screen_id" property="updateScreenId" jdbcType="VARCHAR" />
    <result column="update_ip_address" property="updateIpAddress" jdbcType="VARCHAR" />
    <result column="nr_update_flg" property="nrUpdateFlg" jdbcType="CHAR" />
    <result column="nr_ymd" property="nrYmd" jdbcType="CHAR" />
    <result column="nr_hms" property="nrHms" jdbcType="CHAR" />
    <result column="reason_id" property="reasonId" jdbcType="VARCHAR" />
    <result column="adjust_amt" property="adjustAmt" jdbcType="NUMERIC" />
    <result column="adjust_qty" property="adjustQty" jdbcType="NUMERIC" />
    <result column="is_free_item" property="isFreeItem" jdbcType="CHAR" />
    <result column="last_correction_difference" property="lastCorrectionDifference" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    store_cd, order_id, serial_no, article_id, barcode, vendor_id, promotion_id, order_unit,
    order_qty, order_nocharge_qty, order_price, order_amt, order_amt_notax, order_tax,
    receive_price, receive_qty, receive_nocharge_qty, receive_total_qty, receive_total_amt,
    receive_total_amt_notax, receive_tax, upload_flg, upload_date, create_user_id, create_ymd,
    create_hms, update_user_id, update_ymd, update_hms, update_screen_id, update_ip_address,
    nr_update_flg, nr_ymd, nr_hms, reason_id, adjust_amt, adjust_qty
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010Example" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="needFoundRows" >
      SQL_CALC_FOUND_ROWS
    </if>
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from od0010
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart >= 0" >
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010Key" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <include refid="Base_Column_List" />
    from od0010
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010Key" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from od0010
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010Example" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from od0010
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into od0010 (store_cd, order_id, serial_no,
    article_id, barcode, vendor_id,
    promotion_id, order_unit, order_qty,
    order_nocharge_qty, order_price, order_amt,
    order_amt_notax, order_tax, receive_price,
    receive_qty, receive_nocharge_qty, receive_total_qty,
    receive_total_amt, receive_total_amt_notax,
    receive_tax, upload_flg, upload_date,
    create_user_id, create_ymd, create_hms,
    update_user_id, update_ymd, update_hms,
    update_screen_id, update_ip_address, nr_update_flg,
    nr_ymd, nr_hms, reason_id, adjust_amt,
    adjust_qty,correction_difference,correction_nocharge_qty,is_free_item,last_correction_difference)
    values (#{storeCd,jdbcType=VARCHAR}, #{orderId,jdbcType=VARCHAR}, #{serialNo,jdbcType=VARCHAR},
    #{articleId,jdbcType=VARCHAR}, #{barcode,jdbcType=VARCHAR}, #{vendorId,jdbcType=CHAR},
    #{promotionId,jdbcType=VARCHAR}, #{orderUnit,jdbcType=VARCHAR}, #{orderQty,jdbcType=NUMERIC},
    #{orderNochargeQty,jdbcType=NUMERIC}, #{orderPrice,jdbcType=NUMERIC}, #{orderAmt,jdbcType=NUMERIC},
    #{orderAmtNotax,jdbcType=NUMERIC}, #{orderTax,jdbcType=NUMERIC}, #{receivePrice,jdbcType=NUMERIC},
    #{receiveQty,jdbcType=NUMERIC}, #{receiveNochargeQty,jdbcType=NUMERIC}, #{receiveTotalQty,jdbcType=NUMERIC},
    #{receiveTotalAmt,jdbcType=NUMERIC}, #{receiveTotalAmtNotax,jdbcType=NUMERIC},
    #{receiveTax,jdbcType=NUMERIC}, #{uploadFlg,jdbcType=CHAR}, #{uploadDate,jdbcType=CHAR},
    #{createUserId,jdbcType=VARCHAR}, #{createYmd,jdbcType=CHAR}, #{createHms,jdbcType=CHAR},
    #{updateUserId,jdbcType=VARCHAR}, #{updateYmd,jdbcType=CHAR}, #{updateHms,jdbcType=CHAR},
    #{updateScreenId,jdbcType=VARCHAR}, #{updateIpAddress,jdbcType=VARCHAR}, #{nrUpdateFlg,jdbcType=CHAR},
    #{nrYmd,jdbcType=CHAR}, #{nrHms,jdbcType=CHAR}, #{reasonId,jdbcType=VARCHAR}, #{adjustAmt,jdbcType=NUMERIC},
    #{adjustQty,jdbcType=NUMERIC},#{correctionDifference,jdbcType=NUMERIC},#{correctionNochargeQty,jdbcType=NUMERIC},#{
    isFreeItem,jdbcType=CHAR},#{lastCorrectionDifference,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into od0010
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeCd != null" >
        store_cd,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="serialNo != null" >
        serial_no,
      </if>
      <if test="articleId != null" >
        article_id,
      </if>
      <if test="barcode != null" >
        barcode,
      </if>
      <if test="vendorId != null" >
        vendor_id,
      </if>
      <if test="promotionId != null" >
        promotion_id,
      </if>
      <if test="orderUnit != null" >
        order_unit,
      </if>
      <if test="orderQty != null" >
        order_qty,
      </if>
      <if test="orderNochargeQty != null" >
        order_nocharge_qty,
      </if>
      <if test="orderPrice != null" >
        order_price,
      </if>
      <if test="orderAmt != null" >
        order_amt,
      </if>
      <if test="orderAmtNotax != null" >
        order_amt_notax,
      </if>
      <if test="orderTax != null" >
        order_tax,
      </if>
      <if test="receivePrice != null" >
        receive_price,
      </if>
      <if test="receiveQty != null" >
        receive_qty,
      </if>
      <if test="receiveNochargeQty != null" >
        receive_nocharge_qty,
      </if>
      <if test="receiveTotalQty != null" >
        receive_total_qty,
      </if>
      <if test="receiveTotalAmt != null" >
        receive_total_amt,
      </if>
      <if test="receiveTotalAmtNotax != null" >
        receive_total_amt_notax,
      </if>
      <if test="receiveTax != null" >
        receive_tax,
      </if>
      <if test="uploadFlg != null" >
        upload_flg,
      </if>
      <if test="uploadDate != null" >
        upload_date,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createYmd != null" >
        create_ymd,
      </if>
      <if test="createHms != null" >
        create_hms,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateYmd != null" >
        update_ymd,
      </if>
      <if test="updateHms != null" >
        update_hms,
      </if>
      <if test="updateScreenId != null" >
        update_screen_id,
      </if>
      <if test="updateIpAddress != null" >
        update_ip_address,
      </if>
      <if test="nrUpdateFlg != null" >
        nr_update_flg,
      </if>
      <if test="nrYmd != null" >
        nr_ymd,
      </if>
      <if test="nrHms != null" >
        nr_hms,
      </if>
      <if test="reasonId != null" >
        reason_id,
      </if>
      <if test="adjustAmt != null" >
        adjust_amt,
      </if>
      <if test="adjustQty != null" >
        adjust_qty,
      </if>
      <if test="purchaseVatCd != null" >
        purchase_vat_cd,
      </if>
      <if test="taxRate != null" >
        tax_rate,
      </if>
      <if test="isFreeItem != null" >
        is_free_item,
      </if>
      <if test="lastCorrectionDifference != null" >
        last_correction_difference,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeCd != null" >
        #{storeCd,jdbcType=VARCHAR},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=VARCHAR},
      </if>
      <if test="serialNo != null" >
        #{serialNo,jdbcType=VARCHAR},
      </if>
      <if test="articleId != null" >
        #{articleId,jdbcType=VARCHAR},
      </if>
      <if test="barcode != null" >
        #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null" >
        #{vendorId,jdbcType=CHAR},
      </if>
      <if test="promotionId != null" >
        #{promotionId,jdbcType=VARCHAR},
      </if>
      <if test="orderUnit != null" >
        #{orderUnit,jdbcType=VARCHAR},
      </if>
      <if test="orderQty != null" >
        #{orderQty,jdbcType=NUMERIC},
      </if>
      <if test="orderNochargeQty != null" >
        #{orderNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="orderPrice != null" >
        #{orderPrice,jdbcType=NUMERIC},
      </if>
      <if test="orderAmt != null" >
        #{orderAmt,jdbcType=NUMERIC},
      </if>
      <if test="orderAmtNotax != null" >
        #{orderAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="orderTax != null" >
        #{orderTax,jdbcType=NUMERIC},
      </if>
      <if test="receivePrice != null" >
        #{receivePrice,jdbcType=NUMERIC},
      </if>
      <if test="receiveQty != null" >
        #{receiveQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveNochargeQty != null" >
        #{receiveNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalQty != null" >
        #{receiveTotalQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmt != null" >
        #{receiveTotalAmt,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmtNotax != null" >
        #{receiveTotalAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="receiveTax != null" >
        #{receiveTax,jdbcType=NUMERIC},
      </if>
      <if test="uploadFlg != null" >
        #{uploadFlg,jdbcType=CHAR},
      </if>
      <if test="uploadDate != null" >
        #{uploadDate,jdbcType=CHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createYmd != null" >
        #{createYmd,jdbcType=CHAR},
      </if>
      <if test="createHms != null" >
        #{createHms,jdbcType=CHAR},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateYmd != null" >
        #{updateYmd,jdbcType=CHAR},
      </if>
      <if test="updateHms != null" >
        #{updateHms,jdbcType=CHAR},
      </if>
      <if test="updateScreenId != null" >
        #{updateScreenId,jdbcType=VARCHAR},
      </if>
      <if test="updateIpAddress != null" >
        #{updateIpAddress,jdbcType=VARCHAR},
      </if>
      <if test="nrUpdateFlg != null" >
        #{nrUpdateFlg,jdbcType=CHAR},
      </if>
      <if test="nrYmd != null" >
        #{nrYmd,jdbcType=CHAR},
      </if>
      <if test="nrHms != null" >
        #{nrHms,jdbcType=CHAR},
      </if>
      <if test="reasonId != null" >
        #{reasonId,jdbcType=VARCHAR},
      </if>
      <if test="adjustAmt != null" >
        #{adjustAmt,jdbcType=NUMERIC},
      </if>
      <if test="adjustQty != null" >
        #{adjustQty,jdbcType=NUMERIC},
      </if>
      <if test="purchaseVatCd != null" >
        #{purchaseVatCd,jdbcType=CHAR},
      </if>
      <if test="taxRate != null" >
        #{taxRate,jdbcType=NUMERIC},
      </if>
      <if test="isFreeItem != null" >
        #{isFreeItem,jdbcType=CHAR},
      </if>
      <if test="lastCorrectionDifference != null" >
        #{lastCorrectionDifference,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010Example" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from od0010
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    <set >
      <if test="record.storeCd != null" >
        store_cd = #{record.storeCd,jdbcType=VARCHAR},
      </if>
      <if test="record.orderId != null" >
        order_id = #{record.orderId,jdbcType=VARCHAR},
      </if>
      <if test="record.serialNo != null" >
        serial_no = #{record.serialNo,jdbcType=VARCHAR},
      </if>
      <if test="record.articleId != null" >
        article_id = #{record.articleId,jdbcType=VARCHAR},
      </if>
      <if test="record.barcode != null" >
        barcode = #{record.barcode,jdbcType=VARCHAR},
      </if>
      <if test="record.vendorId != null" >
        vendor_id = #{record.vendorId,jdbcType=CHAR},
      </if>
      <if test="record.promotionId != null" >
        promotion_id = #{record.promotionId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderUnit != null" >
        order_unit = #{record.orderUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.orderQty != null" >
        order_qty = #{record.orderQty,jdbcType=NUMERIC},
      </if>
      <if test="record.orderNochargeQty != null" >
        order_nocharge_qty = #{record.orderNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="record.orderPrice != null" >
        order_price = #{record.orderPrice,jdbcType=NUMERIC},
      </if>
      <if test="record.orderAmt != null" >
        order_amt = #{record.orderAmt,jdbcType=NUMERIC},
      </if>
      <if test="record.orderAmtNotax != null" >
        order_amt_notax = #{record.orderAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="record.orderTax != null" >
        order_tax = #{record.orderTax,jdbcType=NUMERIC},
      </if>
      <if test="record.receivePrice != null" >
        receive_price = #{record.receivePrice,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveQty != null" >
        receive_qty = #{record.receiveQty,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveNochargeQty != null" >
        receive_nocharge_qty = #{record.receiveNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTotalQty != null" >
        receive_total_qty = #{record.receiveTotalQty,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTotalAmt != null" >
        receive_total_amt = #{record.receiveTotalAmt,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTotalAmtNotax != null" >
        receive_total_amt_notax = #{record.receiveTotalAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="record.receiveTax != null" >
        receive_tax = #{record.receiveTax,jdbcType=NUMERIC},
      </if>
      <if test="record.uploadFlg != null" >
        upload_flg = #{record.uploadFlg,jdbcType=CHAR},
      </if>
      <if test="record.uploadDate != null" >
        upload_date = #{record.uploadDate,jdbcType=CHAR},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.createYmd != null" >
        create_ymd = #{record.createYmd,jdbcType=CHAR},
      </if>
      <if test="record.createHms != null" >
        create_hms = #{record.createHms,jdbcType=CHAR},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateYmd != null" >
        update_ymd = #{record.updateYmd,jdbcType=CHAR},
      </if>
      <if test="record.updateHms != null" >
        update_hms = #{record.updateHms,jdbcType=CHAR},
      </if>
      <if test="record.updateScreenId != null" >
        update_screen_id = #{record.updateScreenId,jdbcType=VARCHAR},
      </if>
      <if test="record.updateIpAddress != null" >
        update_ip_address = #{record.updateIpAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.nrUpdateFlg != null" >
        nr_update_flg = #{record.nrUpdateFlg,jdbcType=CHAR},
      </if>
      <if test="record.nrYmd != null" >
        nr_ymd = #{record.nrYmd,jdbcType=CHAR},
      </if>
      <if test="record.nrHms != null" >
        nr_hms = #{record.nrHms,jdbcType=CHAR},
      </if>
      <if test="record.reasonId != null" >
        reason_id = #{record.reasonId,jdbcType=VARCHAR},
      </if>
      <if test="record.adjustAmt != null" >
        adjust_amt = #{record.adjustAmt,jdbcType=NUMERIC},
      </if>
      <if test="record.adjustQty != null" >
        adjust_qty = #{record.adjustQty,jdbcType=NUMERIC},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    set store_cd = #{record.storeCd,jdbcType=VARCHAR},
    order_id = #{record.orderId,jdbcType=VARCHAR},
    serial_no = #{record.serialNo,jdbcType=VARCHAR},
    article_id = #{record.articleId,jdbcType=VARCHAR},
    barcode = #{record.barcode,jdbcType=VARCHAR},
    vendor_id = #{record.vendorId,jdbcType=CHAR},
    promotion_id = #{record.promotionId,jdbcType=VARCHAR},
    order_unit = #{record.orderUnit,jdbcType=VARCHAR},
    order_qty = #{record.orderQty,jdbcType=NUMERIC},
    order_nocharge_qty = #{record.orderNochargeQty,jdbcType=NUMERIC},
    order_price = #{record.orderPrice,jdbcType=NUMERIC},
    order_amt = #{record.orderAmt,jdbcType=NUMERIC},
    order_amt_notax = #{record.orderAmtNotax,jdbcType=NUMERIC},
    order_tax = #{record.orderTax,jdbcType=NUMERIC},
    receive_price = #{record.receivePrice,jdbcType=NUMERIC},
    receive_qty = #{record.receiveQty,jdbcType=NUMERIC},
    receive_nocharge_qty = #{record.receiveNochargeQty,jdbcType=NUMERIC},
    receive_total_qty = #{record.receiveTotalQty,jdbcType=NUMERIC},
    receive_total_amt = #{record.receiveTotalAmt,jdbcType=NUMERIC},
    receive_total_amt_notax = #{record.receiveTotalAmtNotax,jdbcType=NUMERIC},
    receive_tax = #{record.receiveTax,jdbcType=NUMERIC},
    upload_flg = #{record.uploadFlg,jdbcType=CHAR},
    upload_date = #{record.uploadDate,jdbcType=CHAR},
    create_user_id = #{record.createUserId,jdbcType=VARCHAR},
    create_ymd = #{record.createYmd,jdbcType=CHAR},
    create_hms = #{record.createHms,jdbcType=CHAR},
    update_user_id = #{record.updateUserId,jdbcType=VARCHAR},
    update_ymd = #{record.updateYmd,jdbcType=CHAR},
    update_hms = #{record.updateHms,jdbcType=CHAR},
    update_screen_id = #{record.updateScreenId,jdbcType=VARCHAR},
    update_ip_address = #{record.updateIpAddress,jdbcType=VARCHAR},
    nr_update_flg = #{record.nrUpdateFlg,jdbcType=CHAR},
    nr_ymd = #{record.nrYmd,jdbcType=CHAR},
    nr_hms = #{record.nrHms,jdbcType=CHAR},
    reason_id = #{record.reasonId,jdbcType=VARCHAR},
    adjust_amt = #{record.adjustAmt,jdbcType=NUMERIC},
    adjust_qty = #{record.adjustQty,jdbcType=NUMERIC}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    <set >
      <if test="barcode != null" >
        barcode = #{barcode,jdbcType=VARCHAR},
      </if>
      <if test="vendorId != null" >
        vendor_id = #{vendorId,jdbcType=CHAR},
      </if>
      <if test="promotionId != null" >
        promotion_id = #{promotionId,jdbcType=VARCHAR},
      </if>
      <if test="orderUnit != null" >
        order_unit = #{orderUnit,jdbcType=VARCHAR},
      </if>
      <if test="orderQty != null" >
        order_qty = #{orderQty,jdbcType=NUMERIC},
      </if>
      <if test="orderNochargeQty != null" >
        order_nocharge_qty = #{orderNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="orderPrice != null" >
        order_price = #{orderPrice,jdbcType=NUMERIC},
      </if>
      <if test="orderAmt != null" >
        order_amt = #{orderAmt,jdbcType=NUMERIC},
      </if>
      <if test="orderAmtNotax != null" >
        order_amt_notax = #{orderAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="orderTax != null" >
        order_tax = #{orderTax,jdbcType=NUMERIC},
      </if>
      <if test="receivePrice != null" >
        receive_price = #{receivePrice,jdbcType=NUMERIC},
      </if>
      <if test="receiveQty != null" >
        receive_qty = #{receiveQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveNochargeQty != null" >
        receive_nocharge_qty = #{receiveNochargeQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalQty != null" >
        receive_total_qty = #{receiveTotalQty,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmt != null" >
        receive_total_amt = #{receiveTotalAmt,jdbcType=NUMERIC},
      </if>
      <if test="receiveTotalAmtNotax != null" >
        receive_total_amt_notax = #{receiveTotalAmtNotax,jdbcType=NUMERIC},
      </if>
      <if test="receiveTax != null" >
        receive_tax = #{receiveTax,jdbcType=NUMERIC},
      </if>
      <if test="uploadFlg != null" >
        upload_flg = #{uploadFlg,jdbcType=CHAR},
      </if>
      <if test="uploadDate != null" >
        upload_date = #{uploadDate,jdbcType=CHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createYmd != null" >
        create_ymd = #{createYmd,jdbcType=CHAR},
      </if>
      <if test="createHms != null" >
        create_hms = #{createHms,jdbcType=CHAR},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateYmd != null" >
        update_ymd = #{updateYmd,jdbcType=CHAR},
      </if>
      <if test="updateHms != null" >
        update_hms = #{updateHms,jdbcType=CHAR},
      </if>
      <if test="updateScreenId != null" >
        update_screen_id = #{updateScreenId,jdbcType=VARCHAR},
      </if>
      <if test="updateIpAddress != null" >
        update_ip_address = #{updateIpAddress,jdbcType=VARCHAR},
      </if>
      <if test="nrUpdateFlg != null" >
        nr_update_flg = #{nrUpdateFlg,jdbcType=CHAR},
      </if>
      <if test="nrYmd != null" >
        nr_ymd = #{nrYmd,jdbcType=CHAR},
      </if>
      <if test="nrHms != null" >
        nr_hms = #{nrHms,jdbcType=CHAR},
      </if>
      <if test="reasonId != null" >
        reason_id = #{reasonId,jdbcType=VARCHAR},
      </if>
      <if test="adjustAmt != null" >
        adjust_amt = #{adjustAmt,jdbcType=NUMERIC},
      </if>
      <if test="adjustQty != null" >
        adjust_qty = #{adjustQty,jdbcType=NUMERIC},
      </if>
    </set>
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update od0010
    set barcode = #{barcode,jdbcType=VARCHAR},
    vendor_id = #{vendorId,jdbcType=CHAR},
    promotion_id = #{promotionId,jdbcType=VARCHAR},
    order_unit = #{orderUnit,jdbcType=VARCHAR},
    order_qty = #{orderQty,jdbcType=NUMERIC},
    order_nocharge_qty = #{orderNochargeQty,jdbcType=NUMERIC},
    order_price = #{orderPrice,jdbcType=NUMERIC},
    order_amt = #{orderAmt,jdbcType=NUMERIC},
    order_amt_notax = #{orderAmtNotax,jdbcType=NUMERIC},
    order_tax = #{orderTax,jdbcType=NUMERIC},
    receive_price = #{receivePrice,jdbcType=NUMERIC},
    receive_qty = #{receiveQty,jdbcType=NUMERIC},
    receive_nocharge_qty = #{receiveNochargeQty,jdbcType=NUMERIC},
    receive_total_qty = #{receiveTotalQty,jdbcType=NUMERIC},
    receive_total_amt = #{receiveTotalAmt,jdbcType=NUMERIC},
    receive_total_amt_notax = #{receiveTotalAmtNotax,jdbcType=NUMERIC},
    receive_tax = #{receiveTax,jdbcType=NUMERIC},
    upload_flg = #{uploadFlg,jdbcType=CHAR},
    upload_date = #{uploadDate,jdbcType=CHAR},
    create_user_id = #{createUserId,jdbcType=VARCHAR},
    create_ymd = #{createYmd,jdbcType=CHAR},
    create_hms = #{createHms,jdbcType=CHAR},
    update_user_id = #{updateUserId,jdbcType=VARCHAR},
    update_ymd = #{updateYmd,jdbcType=CHAR},
    update_hms = #{updateHms,jdbcType=CHAR},
    update_screen_id = #{updateScreenId,jdbcType=VARCHAR},
    update_ip_address = #{updateIpAddress,jdbcType=VARCHAR},
    nr_update_flg = #{nrUpdateFlg,jdbcType=CHAR},
    nr_ymd = #{nrYmd,jdbcType=CHAR},
    nr_hms = #{nrHms,jdbcType=CHAR},
    reason_id = #{reasonId,jdbcType=VARCHAR},
    adjust_amt = #{adjustAmt,jdbcType=NUMERIC},
    adjust_qty = #{adjustQty,jdbcType=NUMERIC}
    where store_cd = #{storeCd,jdbcType=VARCHAR}
    and order_id = #{orderId,jdbcType=VARCHAR}
    and serial_no = #{serialNo,jdbcType=VARCHAR}
    and article_id = #{articleId,jdbcType=VARCHAR}
  </update>
  <select id="countLastSelect" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select FOUND_ROWS()
  </select>

  <!--差异条件查询一览 plus-->
  <select id="selectByConditionPlus" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListResult"
          parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam">
      SELECT
          A.order_id,
          A.order_date,
          A.receive_date,
          B.receive_id,
          D.store_cd,
          D.store_name,
        <if test='orderDifferentiate=="0"' >
          F.vendor_id,
          F.vendor_name,
        </if>
        <if test='orderDifferentiate=="1"' >
          A.delivery_center_id AS deliveryCenterId,
          G.warehouse_name AS deliveryCenterName,
        </if>
          COALESCE(E.total_order_qty,0) AS total_order_qty,
          COALESCE(E.total_receive_qty,0) AS total_receive_qty,
          COALESCE(E.total_order_qty,0)-COALESCE(E.total_receive_qty,0) AS totalAmt,
          A.update_ymd
      FROM
          od0000 A join
          (SELECT A.order_id, SUM (A.order_qty) total_order_qty, SUM ( A.receive_qty ) total_receive_qty
          FROM od0010 A GROUP BY A.order_id)
          E on A.order_id = E.order_id,
          od0000_t B join (
          SELECT A.order_id, MAX(CONCAT(A.create_ymd, A.create_hms)) AS create_ymdhms
          FROM od0000_t A
          GROUP BY A.order_id
          )
          C on B.order_id = C.order_id
          AND B.create_ymd = LEFT(C.create_ymdhms, 8)
          AND B.create_hms = RIGHT(C.create_ymdhms, 6),
          MA1000 D,
          <if test='orderDifferentiate=="0"' >
            MA2000 F
          </if>
          <if test='orderDifferentiate=="1"' >
            MA5321 G
          </if>
      WHERE
          1=1
          AND A.order_differentiate = #{orderDifferentiate}
          AND A.order_id = B.order_id
          AND A.store_cd = D.store_cd
        <if test='orderDifferentiate=="0"' >
          AND A.vendor_id = F.vendor_id
          AND A.order_date BETWEEN F.effective_start_date AND F.effective_end_date
        </if>
        <if test='orderDifferentiate=="1"' >
          AND A.delivery_center_id = G.warehouse_no
        </if>
         /* AND A.order_date BETWEEN D.effective_start_date AND D.effective_end_date*/
--           AND COALESCE(E.total_order_qty,0)-COALESCE(E.total_receive_qty,0) !=0
          AND a.store_cd IN
          <foreach item="store" index="index" collection="stores"
                   open="(" separator="," close=")">
            #{store,jdbcType=VARCHAR}
          </foreach>
          <if test="vendorId != null and vendorId != ''" >
            and lower(a.vendor_id) like lower(CONCAT('%',#{vendorId},'%'))
          </if>
          <if test="dc != null and dc != ''" >
            and lower(a.delivery_center_id) like lower(CONCAT('%',#{dc},'%'))
          </if>
          <if test="orderId != null and orderId != ''" >
            and lower(a.order_id) like lower(CONCAT('%',#{orderId},'%'))
          </if>
          <if test="orderStartDate != null and orderStartDate != ''" >
            and a.order_date >=  #{orderStartDate}
          </if>
          <if test="orderEndDate != null and orderEndDate != ''" >
            and #{orderEndDate} >= a.order_date
          </if>
          <if test="receiveStartDate != null and receiveStartDate != ''" >
            and a.receive_date >=  #{receiveStartDate}
          </if>
          <if test="receiveEndDate != null and receiveEndDate != ''" >
            and #{receiveEndDate} >= a.receive_date
          </if>
          <if test="createStartDate != null and createStartDate != ''" >
            and a.update_ymd >=  #{createStartDate}
          </if>
          <if test="createEndDate != null and createEndDate != ''" >
            and #{createEndDate} >= a.update_ymd
          </if>
          <if test="deliveryCenterId != null and deliveryCenterId != ''" >
            and lower(a.delivery_center_id) like lower(CONCAT('%',#{deliveryCenterId},'%'))
          </if>
          order by order_date desc
          <if test="flg and limitStart >= 0">
            limit ${limitEnd} offset ${limitStart}
          </if>
  </select>

  <!--差异条件查询一览总数-->
  <select id="selectByConditionCountPlus" resultType="java.lang.Long" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam" >
    SELECT
      COUNT (A.order_id)
    FROM
      od0000 A join
      (SELECT A.order_id, SUM (A.order_qty) total_order_qty, SUM ( A.receive_qty ) total_receive_qty
      FROM od0010 A GROUP BY A.order_id)
      E on A.order_id = E.order_id,
      od0000_t B join (
      SELECT A.order_id, MAX(CONCAT(A.create_ymd, A.create_hms)) AS create_ymdhms
      FROM od0000_t A
      GROUP BY A.order_id
      )
      C on B.order_id = C.order_id
      AND B.create_ymd = LEFT(C.create_ymdhms, 8)
      AND B.create_hms = RIGHT(C.create_ymdhms, 6),
      MA1000 D,
      <if test='orderDifferentiate=="0"' >
        MA2000 F
      </if>
      <if test='orderDifferentiate=="1"' >
        MA5321 G
      </if>
    WHERE
      1=1
      AND A.order_differentiate = #{orderDifferentiate}
      AND A.order_id = B.order_id
      AND A.store_cd = D.store_cd
      <if test='orderDifferentiate=="0"' >
        AND A.vendor_id = F.vendor_id
        AND A.order_date BETWEEN F.effective_start_date AND F.effective_end_date
      </if>
      <if test='orderDifferentiate=="1"' >
        AND A.delivery_center_id = G.warehouse_no
      </if>
      /*AND A.order_date BETWEEN D.effective_start_date AND D.effective_end_date*/
--       AND COALESCE(E.total_order_qty,0)-COALESCE(E.total_receive_qty,0) !=0
      and a.store_cd IN
      <foreach item="store" index="index" collection="stores"
               open="(" separator="," close=")">
        #{store,jdbcType=VARCHAR}
      </foreach>
      <if test="vendorId != null and vendorId != ''" >
        and lower(a.vendor_id) like lower(CONCAT('%',#{vendorId},'%'))
      </if>
      <if test="dc != null and dc != ''" >
        and lower(a.delivery_center_id) like lower(CONCAT('%',#{dc},'%'))
      </if>
      <if test="orderId != null and orderId != ''" >
        and lower(a.order_id) like lower(CONCAT('%',#{orderId},'%'))
      </if>
      <if test="orderStartDate != null and orderStartDate != ''" >
        and a.order_date >=  #{orderStartDate}
      </if>
      <if test="orderEndDate != null and orderEndDate != ''" >
        and #{orderEndDate} >= a.order_date
      </if>
      <if test="receiveStartDate != null and receiveStartDate != ''" >
        and a.receive_date >=  #{receiveStartDate}
      </if>
      <if test="receiveEndDate != null and receiveEndDate != ''" >
        and #{receiveEndDate} >= a.receive_date
      </if>
      <if test="createStartDate != null and createStartDate != ''" >
        and a.update_ymd >=  #{createStartDate}
      </if>
      <if test="createEndDate != null and createEndDate != ''" >
        and #{createEndDate} >= a.update_ymd
      </if>
      <if test="deliveryCenterId != null and deliveryCenterId != ''" >
        and lower(a.delivery_center_id) like lower(CONCAT('%',#{deliveryCenterId},'%'))
      </if>
  </select>

  <!--差异条件查询一览-->
  <select id="selectByCondition" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListResult" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam" >
    select distinct
    a.order_id,
    a.org_order_id,
    a.order_date,
    a.receive_date,
    a.create_ymd as create_date,
    a.store_cd,
    c.store_name,
    a.delivery_center_id,
    d.vendor_name as delivery_center_name,
    (select sum(adjust_amt) from od0010 where order_id = a.order_id) as total_amt
    from
    od0000 a,
    (select * from ma1000 where #{businessDate} between effective_start_date and effective_end_date) c,
    (select * from ma2000 where #{businessDate} between effective_start_date and effective_end_date) d
    where
    1=1
--     a.order_sts = '07'
    and a.order_type = '07'
    and c.store_cd = a.store_cd
    and a.vendor_id = d.vendor_id
    and a.store_cd IN
    <foreach item="store" index="index" collection="stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="orderId != null and orderId != ''" >
      and lower(a.order_id) like lower(CONCAT('%',#{orderId},'%'))
    </if>
    <if test="orgOrderId != null and orgOrderId != ''" >
      and lower(a.org_order_id) like lower(CONCAT('%',#{orgOrderId},'%'))
    </if>
    <if test="orderStartDate != null and orderStartDate != ''" >
      and a.order_date >=  #{orderStartDate}
    </if>
    <if test="orderEndDate != null and orderEndDate != ''" >
      and #{orderEndDate} >= a.order_date
    </if>
    <if test="receiveStartDate != null and receiveStartDate != ''" >
      and a.receive_date >=  #{receiveStartDate}
    </if>
    <if test="receiveEndDate != null and receiveEndDate != ''" >
      and #{receiveEndDate} >= a.receive_date
    </if>
    <if test="createStartDate != null and createStartDate != ''" >
      and a.create_ymd >=  #{createStartDate}
    </if>
    <if test="createEndDate != null and createEndDate != ''" >
      and #{createEndDate} >= a.create_ymd
    </if>
    <if test="deliveryCenterId != null and deliveryCenterId != ''" >
      and lower(a.delivery_center_id) like lower(CONCAT('%',#{deliveryCenterId},'%'))
    </if>
    order by order_date desc
    <if test="flg and limitStart >= 0">
      limit ${limitEnd} offset ${limitStart}
    </if>
  </select>

  <!--差异条件查询一览总数-->
  <select id="selectByConditionCount" resultType="java.lang.Long" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam" >
    select count(*) from (
    select distinct
    a.order_id,
    a.org_order_id,
    a.order_date,
    a.receive_date,
    a.create_ymd as create_date,
    a.store_cd,
    c.store_name,
    a.delivery_center_id,
    d.vendor_name as delivery_center_name,
    (select sum(adjust_amt) from od0010 where order_id = a.order_id) as total_amt
    from
    od0000 a,
    (select * from ma1000 where #{businessDate} between effective_start_date and effective_end_date) c,
    (select * from ma2000 where #{businessDate} between effective_start_date and effective_end_date) d
    where
    1=1
--     and a.order_sts = '07'
    and a.order_type = '07'
    and c.store_cd = a.store_cd
    and a.vendor_id = d.vendor_id
    and a.store_cd IN
    <foreach item="store" index="index" collection="stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="orderId != null and orderId != ''" >
      and lower(a.order_id) like lower(CONCAT('%',#{orderId},'%'))
    </if>
    <if test="orgOrderId != null and orgOrderId != ''" >
      and lower(a.org_order_id) like lower(CONCAT('%',#{orgOrderId},'%'))
    </if>
    <if test="orderStartDate != null and orderStartDate != ''" >
      and a.order_date >=  #{orderStartDate}
    </if>
    <if test="orderEndDate != null and orderEndDate != ''" >
      <![CDATA[
          and a.order_date <= #{orderEndDate}
      ]]>
    </if>
    <if test="receiveStartDate != null and receiveStartDate != ''" >
      <![CDATA[
          and a.receive_date <= #{receiveStartDate}
      ]]>
    </if>
    <if test="receiveEndDate != null and receiveEndDate != ''" >
      and #{receiveEndDate} >= a.receive_date
    </if>
    <if test="createStartDate != null and createStartDate != ''" >
      <![CDATA[
          and a.create_ymd <= #{createStartDate}
      ]]>
    </if>
    <if test="createEndDate != null and createEndDate != ''" >
      and #{createEndDate} >= a.create_ymd
    </if>
    <if test="deliveryCenterId != null and deliveryCenterId != ''" >
      and lower(a.delivery_center_id) like lower(CONCAT('%',#{deliveryCenterId},'%'))
    </if>
    )as a

  </select>

  <!--差异商品-->
  <select id="selectByOrderId" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceItemsResult" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam">
    SELECT DISTINCT
        A.barcode,
        A.article_id,
        d.article_name,
        e.unit_name,
        A.order_tax,
        A.order_price,
        A.order_qty,
        A.receive_qty,
        COALESCE(A.order_qty,0)-COALESCE(A.receive_qty,0) adjustQty,
        COALESCE(A.order_amt,0)-COALESCE(A.receive_total_amt,0) adjustAmt
    FROM
        od0010
        A LEFT JOIN od0000 b ON b.order_id = A.order_id
        LEFT JOIN ma1100 d ON d.article_id = A.article_id
        LEFT JOIN ma0220 e ON e.unit_id = d.sales_unit_id
    WHERE
        1 = 1
        AND a.order_id = #{orderId}
    limit ${limitEnd} offset ${limitStart}
    </select>

  <!--差异商品-->
  <select id="selectByOrderIdCount" resultType="java.lang.Long" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam">
    SELECT DISTINCT
        COUNT (A.order_id)
    FROM
        od0010 A
    WHERE
        1 = 1
        AND a.order_id = #{orderId}
    </select>

  <!--差异单录入时查询所有可选择的原单号商品-->
  <select id="selectAllItemsBy" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceItemsResult">
        select distinct
          a.article_id,
          CONCAT(A.article_id, ' ', C.article_name) as article_name
        from
            od0010 a
            left join od0000 b on b.order_id = a.order_id
            left join ma1100 c on c.article_id = a.article_id
        where
            b.order_sts = '04'
            and b.order_id = #{orgOrderId}
    </select>

  <select id="getExistItemQuery" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceItemsResult" parameterType="cn.com.bbut.iy.itemmaster.entity.od0010.OD0010">
    select distinct
    g.barcode,
    a.article_id,
    d.article_name,
    e.unit_name,
    a.order_tax,
    a.order_price,
    a.order_qty,
    a.receive_qty,
    a.adjust_qty,
    a.adjust_amt,
    f.code_name as reason
    from
    od0010 a
    left join od0000 b on b.order_id = a.order_id
    left join ma1000 c on c.store_cd = a.store_cd
    left join ma1100 d on d.article_id = a.article_id
    left join ma0220 e on e.unit_id = d.sales_unit_id
    left join cm9010 f on f.code_value = a.reason_id and f.code_type = '00505'
    left join ma1140 g on g.article_id = a.article_id
    where
    1 = 1
    <if test="orderId != null and orderId != ''" >
      and a.order_id = #{orderId}
    </if>
    <if test="articleId != null and articleId != ''" >
      and a.article_id = #{articleId}
    </if>
  </select>

  <select id="selectItemDetailsByItemId" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceItemsResult">
    select distinct
    g.barcode,
    a.article_id,
    d.article_name,
    e.unit_name,
    a.order_tax,
    a.order_price,
    a.order_qty,
    a.receive_qty,
    a.adjust_qty,
    a.adjust_amt,
    f.code_name as reason
    from
    od0010 a
    left join od0000 b on b.order_id = a.order_id
    left join ma1000 c on c.store_cd = a.store_cd
    left join ma1100 d on d.article_id = a.article_id
    left join ma0220 e on e.unit_id = d.sales_unit_id
    left join cm9010 f on f.code_value = a.reason_id and f.code_type = '00505'
    left join ma1140 g on g.article_id = a.article_id
    where
    1 = 1
    <if test="articleId != null and articleId != ''" >
      and a.article_id = #{articleId}
    </if>
    <if test="orgOrderId != null and orgOrderId != ''" >
      and a.order_id = #{orgOrderId}
    </if>
  </select>

  <select id="getPrintList" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListResult" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam" >
    select distinct
    a.order_id,
    a.org_order_id,
    a.order_date,
    a.receive_date,
    a.create_ymd as create_date,
    a.store_cd,
    c.store_name,
    a.delivery_center_id,
    d.vendor_name as delivery_center_name,
    (select sum(adjust_amt) from od0010 where order_id = a.order_id) as total_amt
    from
    od0000 a,
    (select * from ma1000 where #{businessDate} between effective_start_date and effective_end_date) c,
    (select * from ma2000 where #{businessDate} between effective_start_date and effective_end_date) d
    where
    a.order_sts = '07'
    and a.order_type = '07'
    and c.store_cd = a.store_cd
    and a.delivery_center_id = d.vendor_id
    <if test="orderId != null and orderId != ''" >
      and a.order_id = #{orderId}
    </if>
    <if test="orgOrderId != null and orgOrderId != ''" >
      and a.org_order_id = #{orgOrderId}
    </if>
    <if test="orderStartDate != null and orderStartDate != ''" >
      and a.order_date >=  #{orderStartDate}
    </if>
    <if test="orderEndDate != null and orderEndDate != ''" >
      and #{orderEndDate} >= a.order_date
    </if>
    <if test="receiveStartDate != null and receiveStartDate != ''" >
      and a.receive_date >=  #{receiveStartDate}
    </if>
    <if test="receiveEndDate != null and receiveEndDate != ''" >
      and #{receiveEndDate} >= a.receive_date
    </if>
    <if test="createStartDate != null and createStartDate != ''" >
      and a.create_ymd >=  #{createStartDate}
    </if>
    <if test="createEndDate != null and createEndDate != ''" >
      and #{createEndDate} >= a.create_ymd
    </if>
    <if test="storeCd != null and storeCd != ''" >
      and a.store_cd = #{storeCd}
    </if>
    <if test="storeCd != null and storeCd != ''" >
      and a.store_cd = #{storeCd}
    </if>
    <if test="deliveryCenterId != null and deliveryCenterId != ''" >
      and a.delivery_center_id = #{deliveryCenterId}
    </if>
    order by order_date desc
  </select>

  <update id="updateLastCorr" >
    update od0010 set last_correction_difference = correction_difference
    where order_id = #{orderId,jdbcType=VARCHAR};
  </update>
  
  <select id="getOD0010List" resultMap="BaseResultMap">
        select store_cd,order_id,article_id,correction_difference,last_correction_difference
        from od0010 where order_id = #{orderId,jdbcType=VARCHAR};
  </select>

  <!-- 发货单，收货单差异条件查询一览 -->
  <select id="selectShopDiffByCondition" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListResult"
          parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam">
    SELECT
    A.order_id,
    A.delivery_order_id,
    A.delivery_date,
    B.update_ymd receive_date,
    B.receive_id,
    D.store_cd,
    D.store_name,
    A.vendor_id AS deliveryCenterId,
    G.warehouse_name AS deliveryCenterName,
    COALESCE(E.total_order_qty,0) AS total_order_qty,
    COALESCE(F.total_receive_qty,0) AS total_receive_qty,
    COALESCE(E.total_order_qty,0)-COALESCE(F.total_receive_qty,0) AS totalAmt,
    COALESCE ( F.total_ordered_qty, 0 ) - COALESCE (  E.total_order_qty, 0 ) AS totalAmt2,
    A.create_ymd
    FROM
    od0001 A,
    od0000_t B,
    (SELECT receive_id,order_id,MAX (CONCAT(create_ymd,create_hms)) create_ymdhms
    FROM od0000_t GROUP BY receive_id,order_id) C,
    MA1000 D,
    MA5321 G,
    (SELECT delivery_order_id, SUM (order_qty) total_order_qty
    FROM od0011  GROUP BY delivery_order_id) E,
    (SELECT receive_id,SUM ( order_qty ) total_ordered_qty, SUM ( receive_qty ) total_receive_qty
    FROM od0010_t  GROUP BY receive_id) F
    WHERE
    1=1
    AND A.order_id = B.order_id
    AND B.order_id = C.order_id
    AND B.review_status = 20
    AND B.create_ymd = LEFT (C.create_ymdhms,8)
    AND B.create_hms = RIGHT (C.create_ymdhms,6)
    AND A.store_cd = D.store_cd
    AND A.vendor_id = G.warehouse_no
    AND A.delivery_date BETWEEN D.effective_start_date AND D.effective_end_date
    AND A.order_id = E.delivery_order_id
    AND B.receive_id = F.receive_id
    AND COALESCE(E.total_order_qty,0)-COALESCE(F.total_receive_qty,0) !=0
    AND a.store_cd IN
    <foreach item="store" index="index" collection="stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="dc != null and dc != ''" >
      and lower(a.vendor_id) like lower(CONCAT('%',#{dc},'%'))
    </if>
    <if test="orderId != null and orderId != ''" >
      and lower(a.order_id) like lower(CONCAT('%',#{orderId},'%'))
    </if>
    <if test="deliveryOrderId != null and deliveryOrderId != ''" >
      and lower(a.delivery_order_id) like lower(CONCAT('%',#{deliveryOrderId},'%'))
    </if>
    <if test="deliveryStartDate != null and deliveryStartDate != ''" >
      and a.delivery_date >=  #{deliveryStartDate}
    </if>
    <if test="deliveryEndDate != null and deliveryEndDate != ''" >
      and #{deliveryEndDate} >= a.delivery_date
    </if>
    <if test="receiveStartDate != null and receiveStartDate != ''" >
      and b.update_ymd >=  #{receiveStartDate}
    </if>
    <if test="receiveEndDate != null and receiveEndDate != ''" >
      and #{receiveEndDate} >= b.update_ymd
    </if>
    order by order_date desc
    <if test="flg and limitStart >= 0">
      limit ${rows} offset ${limitStart}
    </if>
  </select>

  <select id="selectShopDiffByConditionCount" resultType="java.lang.Long" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam" >
    SELECT
    count(*)
    FROM
    od0001 A,
    od0000_t B,
    (SELECT receive_id,order_id,MAX (CONCAT(create_ymd,create_hms)) create_ymdhms
        FROM od0000_t GROUP BY receive_id,order_id) C,
    MA1000 D,
    MA5321 G,
    (SELECT delivery_order_id, SUM (order_qty) total_order_qty
        FROM od0011  GROUP BY delivery_order_id) E,
    (SELECT receive_id, SUM ( receive_qty ) total_receive_qty
        FROM od0010_t  GROUP BY receive_id) F
    WHERE
    1=1
    AND A.order_id = B.order_id
    AND B.order_id = C.order_id
    AND B.review_status = 20
    AND B.create_ymd = LEFT (C.create_ymdhms,8)
    AND B.create_hms = RIGHT (C.create_ymdhms,6)
    AND A.store_cd = D.store_cd
    AND A.vendor_id = G.warehouse_no
    AND A.delivery_date BETWEEN D.effective_start_date AND D.effective_end_date
    AND A.order_id = E.delivery_order_id
    AND B.receive_id = F.receive_id
    AND COALESCE(E.total_order_qty,0)-COALESCE(F.total_receive_qty,0) !=0
    AND a.store_cd IN
    <foreach item="store" index="index" collection="stores"
             open="(" separator="," close=")">
      #{store,jdbcType=VARCHAR}
    </foreach>
    <if test="dc != null and dc != ''" >
      and lower(a.vendor_id) like lower(CONCAT('%',#{dc},'%'))
    </if>
    <if test="orderId != null and orderId != ''" >
      and lower(a.order_id) like lower(CONCAT('%',#{orderId},'%'))
    </if>
    <if test="deliveryOrderId != null and deliveryOrderId != ''" >
      and lower(a.delivery_order_id) like lower(CONCAT('%',#{deliveryOrderId},'%'))
    </if>
    <if test="deliveryStartDate != null and deliveryStartDate != ''" >
      and a.delivery_date >=  #{deliveryStartDate}
    </if>
    <if test="deliveryEndDate != null and deliveryEndDate != ''" >
      and #{deliveryEndDate} >= a.delivery_date
    </if>
    <if test="receiveStartDate != null and receiveStartDate != ''" >
      and b.update_ymd >=  #{receiveStartDate}
    </if>
    <if test="receiveEndDate != null and receiveEndDate != ''" >
      and #{receiveEndDate} >= b.update_ymd
    </if>
  </select>

  <select id="selectShopDiffByOrderId" resultType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceItemsResult" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam">
    SELECT DISTINCT T.barcode,
    A.article_id,
    d.article_name,
    e.unit_name,
    A.order_tax,
    A.order_qty dc_picked_qty,
	f.receive_qty,
	f.order_qty ordered_qty,
	COALESCE(f.order_qty, 0) - COALESCE( A.order_qty, 0) AS orderqty_dc_picked_qty,
	COALESCE(A.order_qty, 0) - COALESCE(f.receive_qty, 0) AS adjustQty
    FROM od0011 A
	LEFT JOIN od0001 b ON b.order_id = A.delivery_order_id
	LEFT JOIN ma1100 d ON d.article_id = A.article_id
	LEFT JOIN ma0220 e ON e.unit_id = d.sales_unit_id
	LEFT JOIN (
	SELECT
		order_id,
		article_id,
		order_qty,
		receive_qty
	FROM
		od0010_t
	) f on A.delivery_order_id = f.order_id and A.article_id = f.article_id
	LEFT JOIN (
		SELECT ma11.article_id, ma11.vendor_id, ma11.default_barcode AS barcode, ma22.store_cd, ma11.structure_cd
		FROM ma1110 ma11, ma2240 ma22
		WHERE ma11.vendor_id = ma22.vendor_id
			AND ma11.article_id = ma22.article_id
			AND #{businessDate,jdbcType=VARCHAR} BETWEEN ma11.effective_start_date AND ma11.effective_end_date
	) T
	ON A.store_cd = T.store_cd
		AND A.article_id = T.article_id
		AND T.structure_cd = (
			SELECT ma2.admin_structure_cd
			FROM ma0020 ma2
			WHERE ma2.structure_cd = (
				SELECT ma1.admin_structure_cd
				FROM ma0020 ma1
				WHERE ma1.structure_cd = A.store_cd
			)
		)
WHERE 1 = 1
	AND a.delivery_order_id = #{orderId}
    limit ${limitEnd} offset ${limitStart}
    </select>

  <!--差异商品-->
  <select id="selectShopDiffByOrderIdCount" resultType="java.lang.Long" parameterType="cn.com.bbut.iy.itemmaster.dto.difference.DifferenceListParam">
    SELECT DISTINCT
        COUNT (A.*)
    FROM
        od0011 A
    WHERE
        1 = 1
        AND a.delivery_order_id = #{orderId}
    </select>
</mapper>